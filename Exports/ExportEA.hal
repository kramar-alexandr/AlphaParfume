external inner function string 255 ConvertXml(string);
external inner function Boolean PasteCustInOrder(var record ORVc,string,string,var string,var string);
external inner function Boolean ORVc_PasteArtCode(var record ORVc,Integer,var string,var string,Boolean);

SetLangMode(LangRussian,"RUS",0);

global
function val AbsoluteVal(val t)
begin
  val res;
  
  if (t < 0) then begin
    res = -t;
  end else begin
    res = t;
  end;

  AbsoluteVal = res;
  return;
end;

function Boolean TimeHoldOn(integer minrange)
begin
  boolean res;
  string 225 filepath;
  area timeinfo;
  time lastcheckd;
  integer diff;
  
    res = false;
    filepath = "eAgent/HoldOnTime" & minrange;
    if (FileExists(filepath)) then begin
      AddFileToArea(filepath,timeinfo,false);
      lastcheckd = StringToTime(GetStringFromArea(timeinfo,0,GetAreaLength(timeinfo)));
      diff = AbsoluteVal((GetHour(CurrentTime)*60 + GetMinute(CurrentTime)) - (GetHour(lastcheckd)*60 + GetMinute(lastcheckd)));
      if (diff>minrange) then begin
        if (FileExists("eAgent/lock")) then begin
          res = true;
        end else begin
          SetAreaZeroSize(timeinfo);
          AddStringToArea("" & CurrentTime,timeinfo);
          WriteAreaToFile(timeinfo,filepath,0);
        end;
      end else begin
        res = true;
      end;
    end else begin
      CreateFile(filepath);
      CloseFile;
      AddStringToArea("" & CurrentTime,timeinfo); 
      WriteAreaToFile(timeinfo,filepath,0);
    end;
    
    TimeHoldOn = res;
  return;
end;


//	Groups.xml 
global procedure ExportGroupsMn()
begin
	area aRequest;
	record ITVc ITr;

AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  
  AddTextToArea("<file>"& chr(13),aRequest);
  
  ITr.Code = "";
	while(loopmain(ITr,1,true))begin
  	AddTextToArea("			<item>" & chr(13) & chr(10) ,aRequest);
		AddTextToArea("  		<BackofficeId>" & ConvertXml(ITr.Code) & "</BackofficeId>" & chr(13),aRequest);
		AddTextToArea("  		<ParentBackOfficeId>" & ConvertXml("") & "</ParentBackOfficeId>" & chr(13),aRequest);//??
		AddTextToArea("  		<Name>" & ConvertXml(ITr.Comment) & "</Name>" & chr(13),aRequest);
		AddTextToArea(" 	  <Weight>" & ConvertXml(ITr.Weight) & "</Weight>" & chr(13),aRequest);//??
		AddTextToArea("			</item>" & chr(13) & chr(10),aRequest);
  end;  
  
  AddTextToArea("</file>" & chr(13),aRequest);
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);	
	
	writeareatofile(aRequest,"eAgent/Groups.xml",0);
	
	return;
end; 


//Products. ᪫: products.xml
global procedure ExportProductsMn()
begin
	boolean status;
	record INVc INr;
	area aRequest;
	
	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  
  //AddTextToArea("<file>"& chr(13),aRequest);
  AddTextToArea("	<items>" ,aRequest);
  AddTextToArea("" & chr(13) & chr(10),aRequest);
		
	INr.Code = "";
	while(loopmain(INr,1,true))begin
		//Logtext(0,INr.Code);
		AddTextToArea("		<item>" ,aRequest);
		AddTextToArea("" & chr(13) & chr(10),aRequest);
		AddTextToArea("			<BackofficeId>" & ConvertXml(INr.Code) & "</BackofficeId>" & chr(13),aRequest);
		AddTextToArea("			<groupBackofficeId>" & ConvertXml(INr.Group) & "</groupBackofficeId>" & chr(13),aRequest);//??
		AddTextToArea("			<Name>" & ConvertXml(INr.Name) & "</Name>" & chr(13),aRequest);
		AddTextToArea("			<posWeight>" & ConvertXml(" ") & "</posWeight>" & chr(13),aRequest);
		
		if(INr.Terminated == 1) then begin
			status = false;
		end else begin 
			status = true;
		end;
		
		AddTextToArea("			<status>" & ConvertXml(status) & "</status>" & chr(13),aRequest);
		AddTextToArea("			<baseUnitWeight>" & ConvertXml(INr.Weight) & "</baseUnitWeight>" & chr(13),aRequest);
		AddTextToArea("			<quantityUnit>" & ConvertXml(0) & "</quantityUnit>" & chr(13),aRequest);
		AddTextToArea("			<quantityBox>" & ConvertXml(0) & "</quantityBox>" & chr(13),aRequest);
		AddTextToArea("			<quantityPallete>" & ConvertXml(0) & "</quantityPallete>" & chr(13),aRequest);
		AddTextToArea("			<minimalOrderQuantity>" & ConvertXml(0) & "</minimalOrderQuantity>" & chr(13),aRequest);
		AddTextToArea("			<increaseStep>" & ConvertXml(1) & "</increaseStep>" & chr(13),aRequest);
		AddTextToArea("			<invInput>" & ConvertXml(false) & "</invInput>" & chr(13),aRequest);
		AddTextToArea("			<Discount>" & ConvertXml(0.0) & "</Discount>" & chr(13),aRequest);
		AddTextToArea("			<Price>" & ConvertXml(INr.InPrice) & "</Price>" & chr(13),aRequest);
		AddTextToArea("			<TransportGroup>" & ConvertXml(1) & "</TransportGroup>" & chr(13),aRequest);
		AddTextToArea("			<unitName>" & ConvertXml(INr.Unittext) & "</unitName>" & chr(13),aRequest);
		AddTextToArea("			<vatpercent>" & ConvertXml(0) & "</vatpercent>" & chr(13),aRequest);
		AddTextToArea("			<Barcode>" & ConvertXml(INr.BarCode) & "</Barcode>" & chr(13),aRequest);
		AddTextToArea("			<info>" & ConvertXml("") & "</info>" & chr(13),aRequest);

		AddTextToArea("		</item>" ,aRequest);
		AddTextToArea("" & chr(13) & chr(10),aRequest);
	end;
	
  AddTextToArea("	</items>" ,aRequest); 
    
  //AddTextToArea("</file>" & chr(13),aRequest);
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);	
	
	writeareatofile(aRequest,"eAgent/products.xml",0);
	
	return;
end;


//Regions. Regions.xml
global procedure ExportRegionsMn()
begin
	record LocationVc Locr;
	area aRequest;
	
	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  AddTextToArea("	<items>" ,aRequest);
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	
	Locr.Code = "";
	while(loopmain(Locr,1,true))begin
	
		AddTextToArea("		<item>" ,aRequest);
		AddTextToArea("" & chr(13) & chr(10),aRequest);
	
		AddTextToArea("			<regionBackofficeId>" & ConvertXml(Locr.Code) & "</regionBackofficeId>" & chr(13),aRequest);
		AddTextToArea("			<regionName>" & ConvertXml(Locr.Name) & "</regionName>" & chr(13),aRequest);
	
		AddTextToArea("		</item>" ,aRequest);
		AddTextToArea("" & chr(13) & chr(10),aRequest);
	
	end;
	
	AddTextToArea("	</items>" ,aRequest); 
    
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);	

	writeareatofile(aRequest,"eAgent/Regions.xml",0);
	
	return;
end;

/*

//Inventories. ᪫: inventories.xml
procedure ExportInventoriesMn()
begin
	area aRequest;
	record LocationVc Locr;
	record INVc INr;
	record ItemStatusVc ISr; 
	
	ISr.Code = ArtCode;
  if blank(Location) then
    begin
      KeyNum = 1;
    end
  else 
    begin
      ISr.Location = Location;
      KeyNum = 2;
    end;

  ReadFirstMain(ISr, KeyNum, true);
	
	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
  AddTextToArea("	<items>" ,aRequest);
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	
	INr.Code = "";
	while(loopmain(INr,1,true))begin
	
		Locr.Code = "";
		while(loopmain(Locr,1,true))begin
		
			ISr.Code = INr.Code;
			ISr.Location = Locr.Code;
			if(ReadFirstMain(ISr, 2, true))then begin
		
				AddTextToArea("			<productBackofficeId>" & ConvertXml(ISr.Code) & "</productBackofficeId>" & chr(13),aRequest);
				AddTextToArea("			<Inventory>" & ConvertXml(ISr.Instock) & "</Inventory>" & chr(13),aRequest);
				AddTextToArea("			<RegionBackOfficeId>" & ConvertXml(ISr.Location) & "</RegionBackOfficeId>" & chr(13),aRequest);
			end;
		end;
	end;
	
	AddTextToArea("	</items>" ,aRequest); 
    
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);	

	writeareatofile(aRequest,"eAgent/inventories.xml",0);
	
	return;
end;

/*
//Assortments. ᪫: assortments.xml
procedure ExportAssortments(var area aRequest)
begin
	
	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);

	AddTextToArea("<file>"& chr(13),aRequest);
	AddTextToArea("			<items>" ,aRequest);
	AddTextToArea("			<backofficeId>" & ConvertXml(" ") & "</backofficeId>" & chr(13),aRequest);
	AddTextToArea("			<productId>" & ConvertXml(" ") & "</productId>" & chr(13),aRequest);
	AddTextToArea("			<productPrice>" & ConvertXml(" ") & "</productPrice>" & chr(13),aRequest);
	AddTextToArea("			</items>" ,aRequest); 
    
  AddTextToArea("</file>" & chr(13),aRequest);
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);	

	writeareatofile(aRequest,"assortments.xml",0);
	
	return;
end;



*/


//PricesLists. ᪫: prices.xml
procedure ExportPricesMn()
begin
	record PLVc PLr;
	area aRequest;
	
	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
	AddTextToArea("<file>"& chr(13),aRequest);
	AddTextToArea("			<items>"& chr(13) ,aRequest);
	
	PLr.PLCode = "";
	while(loopmain(PLr,1,true)) begin
		AddTextToArea("		<item>" & chr(13) & chr(10),aRequest);	
		AddTextToArea("			<priceListBackOfficeId>" & ConvertXml(PLr.PLCode) & "</priceListBackOfficeId>" & chr(13),aRequest);
		AddTextToArea("			<productBackofficeId>" & ConvertXml(PLr.ArtCode) & "</productBackofficeId>" & chr(13),aRequest);
		AddTextToArea("			<Price>" & ConvertXml(PLr.ExVatPrice) & "</Price>" & chr(13),aRequest);
		AddTextToArea("			<percent>" & ConvertXml("0") & "</percent>" & chr(13),aRequest);
		AddTextToArea("		</item>" & chr(13) & chr(10),aRequest);
	end;
	
	AddTextToArea("			</items>" & chr(13) ,aRequest);
  AddTextToArea("</file>" & chr(13),aRequest);
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);	

	writeareatofile(aRequest,"eAgent/prices.xml",0);
	
	return;
end;



//Clients. ᪫: customers.xml	
global procedure ExportCustomersMn(var )
begin
	area aRequest;
	record CUVc CUr;
	string 255 address;
	string 1 status;
	record RebVc Rebr;
	val reb, MinOrdSum;
	
	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
	AddTextToArea("	<items>" & chr(13) & chr(10),aRequest);
	
	CUr.Code = "";
	while(loopmain(CUr,1,true))begin 
	
	AddTextToArea("		<item>" & chr(13) & chr(10),aRequest);
	
		AddTextToArea("			<backofficeId>" & ConvertXml(CUr.Code) & "</backofficeId>" & chr(13),aRequest);
		AddTextToArea("			<Name>" & ConvertXml(CUr.Name) & "</Name>" & chr(13),aRequest);
		AddTextToArea("			<searchString>" & ConvertXml(CUr.SearchKey) & "</searchString>" & chr(13),aRequest);
		
		address = CUr.DelAddr0 & " " & CUr.DelAddr1 & " " & CUr.DelAddr2 & " " & CUr.DelAddr3 & " " & CUr.DelAddr4;
		
		AddTextToArea("			<Address>" & ConvertXml(address) & "</Address>" & chr(13),aRequest);
		AddTextToArea("			<Phone>" & ConvertXml(CUr.Phone) & "</Phone>" & chr(13),aRequest);
		AddTextToArea("			<clientTypeBackOfficeId>" & ConvertXml("") & "</clientTypeBackOfficeId>" & chr(13),aRequest);
		AddTextToArea("			<consignationPeriod>" & ConvertXml(0) & "</consignationPeriod>" & chr(13),aRequest);
		AddTextToArea("			<creditLimit>" & ConvertXml(CUr.CreditLimit) & "</creditLimit>" & chr(13),aRequest);
		AddTextToArea("			<Balance>" & ConvertXml(0.0) & "</Balance>" & chr(13),aRequest);
		status = "A";
		if(CUr.blockedFlag > 0) then begin
			status = "B";
		end;
		AddTextToArea("			<Status>" & ConvertXml(status) & "</Status>" & chr(13),aRequest);
		AddTextToArea("			<PaymentType>" & ConvertXml(CUr.PayDeal) & "</PaymentType>" & chr(13),aRequest);
		
		Rebr.Code = CUr.RebCode;
		if(ReadFirstMain(Rebr, 1, true))then begin
			reb = Rebr.vra0;
		end else begin
			reb = 0.0;
		end;
				
		AddTextToArea("			<discount>" & ConvertXml(reb) & "</discount>" & chr(13),aRequest);
		AddTextToArea("			<contractDate>" & ConvertXml(CUr.ContractDate) & "</contractDate>" & chr(13),aRequest);
		AddTextToArea("			<assortBackOfficeId>" & ConvertXml("") & "</assortBackOfficeId>" & chr(13),aRequest);
		AddTextToArea("			<PriceBackOfficeId>" & ConvertXml(CUr.PLCode) & "</PriceBackOfficeId>" & chr(13),aRequest);
		AddTextToArea("			<Info>" & ConvertXml(CUr.Comment0 & " " & CUr.Comment1 & " " & CUr.Comment2) & "</Info>" & chr(13),aRequest);
		AddTextToArea("			<RegionBackOfficeId>" & ConvertXml(CUr.CustCat) & "</RegionBackOfficeId>" & chr(13),aRequest);
		if(blank(CUr.MinOrdSum))then begin
			MinOrdSum = 0.0;
		end else begin
			MinOrdSum = CUr.MinOrdSum;
		end;
		AddTextToArea("			<minOrderSum>" & ConvertXml(MinOrdSum) & "</minOrderSum>" & chr(13),aRequest);
		AddTextToArea("			<externalCode>" & ConvertXml(CUr.SearchKey) & "</externalCode>" & chr(13),aRequest);
		AddTextToArea("		</item>" & chr(13) & chr(10),aRequest);
	
	end;
	
	AddTextToArea("	</items>" ,aRequest); 
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);	

	writeareatofile(aRequest,"eAgent/customers.xml",0);
	
	return;
end;

/*
//ClientsProductsDiscounts. ᪫: clients_products_discounts.xml
procedure ExportClientsProductsDiscounts(var area aRequest)
begin
	
	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);

	AddTextToArea("<file>"& chr(13),aRequest);
	
	AddTextToArea("			<items>" ,aRequest);
	AddTextToArea("  	 <item>" ,aRequest);
	
	AddTextToArea("			<clientBackOfficeId>" & ConvertXml(" ") & "</clientBackOfficeId>" & chr(13),aRequest);
	AddTextToArea("			<value>" & ConvertXml(" ") & "</value>" & chr(13),aRequest);
	AddTextToArea("			<discount>" & ConvertXml(" ") & "</discount>" & chr(13),aRequest);
	AddTextToArea("			<discountExpirationDate>" & ConvertXml(" ") & "</discountExpirationDate>" & chr(13),aRequest);
	AddTextToArea("			<productBackOffIceId>" & ConvertXml(" ") & "</productBackOffIceId>" & chr(13),aRequest);
	
	AddTextToArea("  	 </item>" ,aRequest);
	AddTextToArea("			</items>" ,aRequest); 
    
  AddTextToArea("</file>" & chr(13),aRequest);
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);	

	writeareatofile(aRequest,"clients_products_discounts.xml",0);
	
	return;
end;


//ClientsGroupsDiscounts. ᪫: clients_groups_discounts.xml
procedure ExportClientsGroupsDiscounts(var area aRequest)
begin
	
	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);

	AddTextToArea("<file>"& chr(13),aRequest);
	
	AddTextToArea("			<items>" ,aRequest);
	AddTextToArea("  	 <item>" ,aRequest);
	
	AddTextToArea("			<clientBackOfficeId>" & ConvertXml(" ") & "</clientBackOfficeId>" & chr(13),aRequest);
	AddTextToArea("			<discount>" & ConvertXml(" ") & "</discount>" & chr(13),aRequest);
	AddTextToArea("			<discountExpirationDate>" & ConvertXml(" ") & "</discountExpirationDate>" & chr(13),aRequest);
	AddTextToArea("			<groupBackOfficeId>" & ConvertXml(" ") & "</groupBackOfficeId>" & chr(13),aRequest);
	
	AddTextToArea("  	 </item>" ,aRequest);
	AddTextToArea("			</items>" ,aRequest); 
    
  AddTextToArea("</file>" & chr(13),aRequest);
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);	

	writeareatofile(aRequest,"clients_groups_discounts.xml",0);
	
	return;
end;

*/
//Agents. ᪫: agents.xml
global procedure ExportAgentsMn()
begin
	area aRequest;
	record UserVc Userr;
	
	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
	AddTextToArea("	<items>" & chr(13) & chr(10),aRequest);

	Userr.Code = "";
	while(loopmain(Userr,1,true))begin	
		if(Userr.Closed == 0)then begin
			AddTextToArea("		<item>" & chr(13) & chr(10),aRequest);
	
			AddTextToArea("			<backofficeId>" & ConvertXml(Userr.Code) & "</backofficeId>" & chr(13),aRequest);
			AddTextToArea("			<agentName>" & ConvertXml(Userr.Name) & "</agentName>" & chr(13),aRequest);
			AddTextToArea("			<Phone>" & ConvertXml(Userr.Phone1) & "</Phone>" & chr(13),aRequest);
			AddTextToArea("			<DiscountRange>" & ConvertXml(0.0) & "</DiscountRange>" & chr(13),aRequest);
			AddTextToArea("			<RegionsBackOfficeId>" & ConvertXml(Userr.Location) & "</RegionsBackOfficeId>" & chr(13),aRequest);
			AddTextToArea("			<AssortimentId>" & ConvertXml(" ") & "</AssortimentId>" & chr(13),aRequest);
			AddTextToArea("			<checkMinQty>" & ConvertXml(false) & "</checkMinQty>" & chr(13),aRequest);
			AddTextToArea("			<checkFactor>" & ConvertXml(false) & "</checkFactor>" & chr(13),aRequest);
			AddTextToArea("			<deliveriesLoading>" & ConvertXml(2) & "</deliveriesLoading>" & chr(13),aRequest);
			AddTextToArea("			<debtsLoading>" & ConvertXml(1) & "</debtsLoading>" & chr(13),aRequest);
	
			AddTextToArea("		</item>" & chr(13) & chr(10),aRequest);
		end;	
	end;
	AddTextToArea("	</items>" ,aRequest); 
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);	

	writeareatofile(aRequest,"eAgent/agents.xml",0);
	
	return;
end;

//clients_agents.csv
global procedure ClientsRoutedByAgentsMn()
begin
	area aRequest;
	record UserVc Userr;
	record CUVc CUr;
	boolean TrHs, testf;
	
	AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),aRequest);
	AddTextToArea("	<items>" & chr(13) & chr(10),aRequest);

	Userr.Code = "";
	while(loopmain(Userr,1,true))begin 
		if(Userr.Closed == 0)then begin
			TrHs = true;
			CUr.SalesMan = Userr.Code;
			while(loopKey("SalesMan", CUr,1,TrHs))begin	
				testf = true;
				if(CUr.SalesMan != Userr.Code) then begin testf = false; end;
				
					if(testf)then begin
					AddTextToArea("		<item>" & chr(13) & chr(10),aRequest);

					AddTextToArea("			<AgentBackofficeId>" & ConvertXml(Userr.Code) & "</AgentBackofficeId>" & chr(13),aRequest);
					AddTextToArea("			<ClientBackofficeId>" & ConvertXml(CUr.Code) & "</ClientBackofficeId>" & chr(13),aRequest);
					AddTextToArea("			<visitDays>" & ConvertXml("") & "</visitDays>" & chr(13),aRequest);
					AddTextToArea("			<posWeight>" & ConvertXml(0) & "</posWeight>" & chr(13),aRequest);
					AddTextToArea("			<contactPerson>" & ConvertXml("") & "</contactPerson>" & chr(13),aRequest);
					AddTextToArea("			<contactPersonPhone>" & ConvertXml("") & "</contactPersonPhone>" & chr(13),aRequest);
					AddTextToArea("			<delieveriesInfo>" & ConvertXml("") & "</delieveriesInfo>" & chr(13),aRequest);
		
					AddTextToArea("		</item>" & chr(13) & chr(10),aRequest);
					end;
				
			end;
			resetloop(CUr);	
		end;
	end;
	AddTextToArea("	</items>" ,aRequest); 
  AddTextToArea("" & chr(13) & chr(10),aRequest);
	AddTextToArea("" & chr(13) & chr(10),aRequest);	

	writeareatofile(aRequest,"eAgent/clients_agents.xml",0);
	
	return;
end;

global
procedure GetXMLArea(var area a)
begin
  longint alen,i,outlen;
  area out;
  longint nodelen,res;
  string 100 str;
  		
  res = 0;
  
  alen = GetAreaLength(a);
  if(alen>0)then begin  
		for(i=0;i<alen;i=i+1)begin
			str = GetStringFromArea(a,i,1);
			if(str==(chr(60)))then begin
				res = GetAreaFromArea(a,i,alen-i,out);
				goto GetXMLAreaPoint;
			end;
		end;
	end else begin
				logtext(0,"XML file is empty.")
				SetAreaZeroSize(a);
				goto GetXMLAreaPoint2;
		end;
	
	GetXMLAreaPoint:;
	
	setareazerosize(a);
	outlen = GetAreaLength(out);
	GetAreaFromArea(out,0,outlen,a);
	
	GetXMLAreaPoint2:;
	   
  return;
end;

//////// *** Import ***




//H_<orderId>.xml
global updating 
function string 20 ImportOrder(string filename)
begin
	area XMLArea;
	record UserVc Userr;
	record CUVc CUr;
	record ORVc ORr;
	row ORVc ORrw;
	boolean TrHs, testf;
	xml xdata;
	string 255 str, Message;
	string 100 Ordered, ClientBackofficeId, agentBackOfficeId, ClientOrderNo; 
	string 10 Delivery, splitOrder, OrderCurrency;
	string 100 OrderNumber, OrderDate, ExpectedDeliveryDate, ExpectedDeliveryTime, DocumentFunctionCode; 
	date CreationDate, DeliveryDate;
	val odometerValue;
	boolean isQueryForDiscount;
	integer MessagePlaceFlag, i, j, files, status;
	string 255 fn, importpath;
	string 10 result;
	string 255 warning,errstr;
	
	//LogText(0,filename & "  reading");
	result = "";
	
	
	importpath = "eAgentImport";
				

     	
  if (FileExists(importpath & "/" & filename)) then begin
  
						
			xdata = ParseXMLFile(importpath & "/" & filename);
				
			i = 0;  	
		
			if(XmlNodeExists(xdata,"Document-Order/Order-Header")) then begin
					RecordNew(ORr);
					
					ORr.OrdDate = StringToDate(XmlGet(xdata,"Document-Order/Order-Header/OrderDate"));
					//logtext(0, ORr.OrdDate);
					ORr.CustOrdNr = XmlGet(xdata,"Document-Order/Order-Header/OrderNumber");
					ORr.SerNr = NextSerNr("ORVc",ORr.OrdDate,-1,false,"");	
					ORr.CurncyCode = XmlGet(xdata,"Document-Order/Order-Header/OrderCurrency");
					ORr.DespatchDate = XmlGet(xdata,"Document-Order/Order-Header/ExpectedDeliveryDate");
					ORr.DespatchTime = XmlGet(xdata,"Document-Order/Order-Header/ExpectedDeliveryTime");
					ORr.Region = XmlGet(xdata,"Document-Order/Order-Header/WebOrderRegion");
			end;	
			
			
			if(XmlNodeExists(xdata,"Document-Order/Order-Parties")) then begin	
				//logtext(0, "Order-Parties");
				ORr.CustCode = XmlGet(xdata,"Document-Order/Order-Parties/Buyer/CodeByBuyer");
				CUr.Code = ORr.CustCode;
				if(ReadFirstMain(CUr, 1, true) == false)then begin 
					goto LImportOrder;
				end;
				PasteCustInOrder(ORr,ORr.CustCode,"",warning,errstr);							//Edit----------------------Dima  06.08.2015
				ORr.Addr0 = XmlGet(xdata,"Document-Order/Order-Parties/Buyer/Name");
				ORr.SalesMan = XmlGet(xdata,"Document-Order/Order-Parties/Seller/ILN");
				ORr.DelAddrCode = XmlGet(xdata,"Document-Order/Order-Parties/DeliveryPoint/ILN");
				ORr.ShipAddr0 = XmlGet(xdata,"Document-Order/Order-Parties/DeliveryPoint/Name");
			end;
			
			while(XmlNodeExists(xdata,"Document-Order/Order-Lines/Line[" & i & "]/Line-Item")) begin		
				//MatRowGet(ORr,i,ORrw);//Edit----------------------Dima  06.08.2015				
				ORrw.ArtCode = XmlGet(xdata,"Document-Order/Order-Lines/Line[" & i & "]/Line-Item/BuyerItemCode");
				ORVc_PasteArtCode(ORr,i,warning,errstr,false);
				ORrw.Spec = XmlGet(xdata,"Document-Order/Order-Lines/Line[" & i & "]/Line-Item/ItemDescription");
				ORrw.Quant = StringToVal( XmlGet(xdata,"Document-Order/Order-Lines/Line[" & i & "]/Line-Item/OrderedQuantity"), M4Qty);
				ORrw.UnitFactQuant = StringToVal(XmlGet(xdata,"Document-Order/Order-Lines/Line[" & i & "]/Line-Item/OrderedUnitPacksize"), M4UVal);
				ORrw.UnitCode = XmlGet(xdata,"Document-Order/Order-Lines/Line[" & i & "]/Line-Item/UnitOfMeasure");
				ORrw.vRebate = StringToVal(XmlGet(xdata,"Document-Order/Order-Lines/Line[" & i & "]/Line-Item/Discount"), M41Val);			
				MatRowPut(ORr,i,ORrw);
				i = i + 1;						
			end;
		
			if (RecordStore(ORr,true)) then begin 
				result = 1;
			end else begin
				result = 2;
			end;
			LImportOrder:;
	end;
		

	ImportOrder = result;
	return;
end;


global updating
procedure  ImportEAgentMn()
begin
	area oldIndex,newIndex;
	string 255 FileName,ErrMsg;
	string 20 ExpDate,ImportDate,Status,ErrCode,result;
	boolean TrHs, testf;
	xml xdata;
	integer i;	
	
	if (FileExists("eAgentImport/lock")==false) then begin  
  	CreateFile("eAgentImport/lock"); 
  	LogText(0,"import lock file created");
	
		AddTextToArea("<?xml version=""1.0"" encoding=""UTF-8""?>" & chr(13),newIndex);
		AddTextToArea("	<items>" & chr(13) & chr(10),newIndex);			
	
		AddFileToArea("eAgentImport/index.xml",oldIndex,false);
    GetXMLArea(oldIndex);    
		xdata = ParseXMLArea(oldIndex);
		i = 0;

		while(XmlNodeExists(xdata,"items/item[" & i & "]/FileName")) begin

			FileName = XmlGet(xdata,"items/item[" & i & "]/FileName");
			Status = XmlGet(xdata,"items/item[" & i & "]/Status");
			ExpDate = XmlGet(xdata,"items/item[" & i & "]/ExportedTime");
			ImportDate = CurrentDate;
			ErrCode = XmlGet(xdata,"items/item[" & i & "]/ErrorCode");
			ErrMsg = XmlGet(xdata,"items/item[" & i & "]/ErrorMsg");
			
			
			if (Status == "0") then begin
				Status = ImportOrder(FileName);
			end;
			
			AddTextToArea("		<item>" & chr(13) & chr(10),newIndex);
			AddTextToArea("			<FileName>" & FileName & "</FileName>" & chr(13),newIndex);
			AddTextToArea("			<Status>" & Status & "</Status>" & chr(13),newIndex);
			AddTextToArea("			<ExportedTime>" & ExpDate & "</ExportedTime>" & chr(13),newIndex);
			AddTextToArea("			<ImportDate>" & ImportDate & "</ImportDate>" & chr(13),newIndex);
			AddTextToArea("			<ErrorCode>" & ErrCode & "</ErrorCode>" & chr(13),newIndex);
			AddTextToArea("			<ErrorMsg>" & ErrMsg & "</ErrorMsg>" & chr(13),newIndex);
			AddTextToArea("		</item>" & chr(13) & chr(10),newIndex);
																		
			i = i + 1;
		end;
		
		AddTextToArea("	</items>" ,newIndex); 
  	AddTextToArea("" & chr(13) & chr(10),newIndex);
		AddTextToArea("" & chr(13) & chr(10),newIndex);	
  	
		writeareatofile(newIndex,"eAgentImport/index.xml",0);		
			
   
    LogText(0,"Index updating");
    
		end;
		
		Delete_File("eAgentImport/lock");	
		if (FileExists("eAgentImport/lock")==false) then begin
			LogText(0,"import lock file deleted");
		end;    
  
end;


global procedure CustTimeTableAction()
begin
  record RcVc RepSpec;
  time t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,curt,curtnew;
  string 5 hr,mn;

    //t1 = StringToTime("8:00");
  if (FileExists("eAgent/lock")==false) then begin  
  	CreateFile("eAgent/lock");
  	CloseFile; 
  	LogText(0,"lock file created");
    
    curt = CurrentTime; 
    hr = GetHour(curt);
    if (len(hr)==1) then begin
    	hr = "0" & hr;
    end;
    mn = GetMinute(curt);
    if (len(mn)==1) then begin
    	mn = "0" & mn;
    end;
    curtnew = StringToTime(hr & ":" & mn);

    
    LogText(0,"Export files created at time: " & curtnew);
	    ExportGroupsMn;	//3
	    ExportProductsMn;	//4
	    ExportRegionsMn;	//5
	    ExportCustomersMn;	//8
    	ExportAgentsMn;	//11
    	ClientsRoutedByAgentsMn;	//12
    	ExportPricesMn;
    	
    Delete_File("eAgent/lock");	
  	if (FileExists("eAgent/lock")==false) then begin
  		LogText(0,"lock file deleted");
  	end;
  end;  
  
return;
end;
