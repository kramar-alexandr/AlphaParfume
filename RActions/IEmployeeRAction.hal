external function string 255 IGetDepName(string);
external inner procedure NormalizeObjstr(var string);

//===============================================
//Собираем в строку связанные с пользователем объекты
global
function string 200 IEmployeeGetObjStrByUser(string UserCode)
begin
  record UserVc Usr;
  record ObjVc Objr;
  string 200 ObjStr;

  Usr.Code = UserCode;
  if ReadFirstMain(Usr, 1, true) then
    begin
      Objr.Code = Usr.PersObjx;
      ReadFirstMain(Objr, 1, true);
      ObjStr = Usr.PersObjx & "," & Objr.AutoObjects;
      NormalizeObjstr(ObjStr);
    end;
  IEmployeeGetObjStrByUser = ObjStr;
  Return;
end;

//===============================================
//Проверяем необходимость синхронизации
function boolean NeedSync(record IEmployeeVc Emplr, record UserVc Usr)
begin
  NeedSync = not ((Usr.Name == Emplr.Name) and
                  (Usr.Department == Emplr.DepCode) and
                  (StringToVal(Usr.BankAcc, M4Val) == Emplr.Found) and
                  (Usr.BonusFound == Emplr.BonusFound) and
                  (Usr.MotiveCoeff == Emplr.MotiveCoeff) and
                  (Usr.StateJob == Emplr.StateJob) and
                  (Usr.PersAcc == Emplr.PersAcc) and
                  (Usr.MotiveDebAcc == Emplr.MotiveDebAcc) and
                  (Usr.MotiveCredAcc == Emplr.MotiveCredAcc) and
                  (Usr.MotivRespCode == Emplr.MotivRespCode) and
                  (Usr.Supervisor == Emplr.Supervisor));
  Return;
end;

//===============================================
//Синхронизация IEmployeeVc -> UserVc
updating procedure IEmployeeToUserSync(record IEmployeeVc Emplr)
begin
  record UserVc Usr, oldUsr;
  
  Usr.Code = Emplr.Code;
  if ReadFirstMain(Usr, 1, true) and NeedSync(Emplr, Usr) then
    begin
      RecordCopy(oldUsr, Usr);
      Usr.Name = Emplr.Name;
      // Usr.VPositionCode = Emplr.PositionCode;
      // Usr.StPodrCode = Emplr.StPodrCode;
      Usr.Department = Emplr.DepCode;
      Usr.BankAcc = Emplr.Found;
      Usr.BonusFound = Emplr.BonusFound;
      Usr.MotiveCoeff = Emplr.MotiveCoeff;
      Usr.StateJob = Emplr.StateJob;
      Usr.PersAcc = Emplr.PersAcc;
      Usr.MotiveDebAcc = Emplr.MotiveDebAcc;
      Usr.MotiveCredAcc = Emplr.MotiveCredAcc;
      Usr.MotivRespCode = Emplr.MotivRespCode;
      Usr.Supervisor = Emplr.Supervisor;
      RecordUpdate(oldUsr, Usr, false);
    end;
  Return;
end;

//===============================================
//Синхронизация UserVc -> IEmployeeVc
global
updating procedure UserToIEmployeeSync(record UserVc Usr)
begin
  record IEmployeeVc Emplr, oldEmplr;
  
  Emplr.Code = Usr.Code;
  if ReadFirstMain(Emplr, 1, true) and NeedSync(Emplr, Usr) then
    begin
      RecordCopy(oldEmplr, Emplr);
      Emplr.Name = Usr.Name;
      Emplr.DepCode = Usr.Department;
      Emplr.DepName = IGetDepName(Usr.Department);
      Emplr.Found = StringToVal(Usr.BankAcc, M4Val);
      Emplr.BonusFound = Usr.BonusFound;
      Emplr.MotiveCoeff = Usr.MotiveCoeff;
      Emplr.StateJob = Usr.StateJob;
      Emplr.PersAcc = Usr.PersAcc;
      Emplr.MotiveDebAcc = Usr.MotiveDebAcc;
      Emplr.MotiveCredAcc = Usr.MotiveCredAcc;
      Emplr.MotivRespCode = Usr.MotivRespCode;
      Emplr.Supervisor = Usr.Supervisor;
      RecordUpdate(oldEmplr, Emplr, false);
    end;

  Return;
end;

//===============================================
global
updating function Boolean IEmployeeVcRecordCheck(var record IEmployeeVc Emplr, record IEmployeeVc Empl2r, LongInt stat, LongInt check)
begin
  longint res;
  record UserVc Usr;

  SetLangMode(LangRussian,"RUS",2);
  res = 0;

  if blank(Emplr.Code) then
    begin
      RecordCheckError(1499, "Не указан код сотрудника!", -1, "Code");
      res = -1;
    end;

  if (res <> -1) then
    begin
      Usr.Code = Emplr.Code;
      if not ReadFirstMain(Usr, 1, true) then
        begin
          RecordCheckError(1499, "Проверьте код сотрудника!", -1, "UserCode");
          res = -1;
        end;
    end;

  IEmployeeVcRecordCheck = res;
  Return;
end;

//===============================================
global
updating function Boolean IEmployeeVcRecordSave(var record IEmployeeVc Emplr, record IEmployeeVc Empl2r, LongInt stat, LongInt check)
begin
  longint res;

  IEmployeeToUserSync(Emplr);
  IEmployeeVcRecordSave = res;
  Return;
end;

//===============================================
global
updating function Boolean IEmployeeVcRecordUpdate(var record IEmployeeVc Emplr, record IEmployeeVc Empl2r, LongInt stat, LongInt check)
begin
  longint res;

  IEmployeeToUserSync(Emplr);
  IEmployeeVcRecordUpdate = res;
  Return;
end;