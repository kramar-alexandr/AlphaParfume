
global
function LongInt HALNameVcRecordCheck(var record HALNameVc HALNr, record HALNameVc HALN2r, LongInt stat, LongInt long4)
BEGIN
LongInt res;
integer insertmode, updatemode;
record UserVc USr;

SetLangMode(LangRussian, "RUS", 2);
res = 0;     
insertmode = 1;
updatemode = 2;

// USr.Code = CurrentUser;
// ReadFirstMain(Usr, 1, True);

 if (len(HALNr.HALName)<1) then begin
    RecordCheckError(1058,"",-1,"HALName");      
    res = -1;
  end;

HALNameVcRecordCheck = res;
RETURN;
end;

global
function Longint UpCISVcRecordDefaults(var record UpCISVc UCISr, record UpCISVc UCIS2r, LongInt stat, LongInt long4)
begin
Longint Res;
record UserVc USr;
boolean TrHs;

SetLangMode(LangRussian,"RUS",2);
if (SingleUserMode) then 
  begin
  UCISr.SerNr = NextSerNr("UpCISVc", CurrentDate, -1, false, "");
  end;
UCISr.Date = CurrentDate;

UpCISVcRecordDefaults = res;
RETURN;
end;

global
function LongInt UpCISVcRecordDuplicate(var record UpCISVc UCISr, record UpCISVc UCIS2r, LongInt stat, LongInt long4)
BEGIN
LongInt res;
record UserVc USr;
integer i;
SetLangMode(LangRussian,"RUS",2);
if (SingleUserMode) then 
  begin
  UCISr.SerNr = NextSerNr("UpCISVc", CurrentDate, -1, false, "");
  end 
else
  begin
  UCISr.SerNr = -1;
  end;
UCISr.Date = CurrentDate;
UpCISVcRecordDuplicate = res; 
RETURN;
END;



global
updating function LongInt UpCISVcRecordRemoveTest(var record UpCISVc UCISr, record UpCISVc UCIS2r, LongInt stat, LongInt long4)
BEGIN
record UserVc USr;

UpCISVcRecordRemoveTest = 1;
USr.Code = CurrentUser;
ReadFirstMain(USr, 1, True);
if (not UserCanAction("UnOKAll",True)) then 
  begin
  UpCISVcRecordRemoveTest = 0;
  end;
RETURN;
END;

global
updating procedure  HALNameCreate(string HALName)
BEGIN
record HALNameVc HALNr;

SetLangMode(LangRussian, "RUS", 2);

RecordNew(HALNr);
HALNr.HALName = HALName;
RecordStore(HALNr, false);

RETURN;
end;




global
function LongInt UpCISVcRecordCheck(var record UpCISVc UCISr, record UpCISVc UCIS2r, LongInt stat, LongInt long4)
BEGIN
LongInt res;
integer insertmode, updatemode;
record UserVc USr;

SetLangMode(LangRussian, "RUS", 2);
res = 0;     
insertmode = 1;
updatemode = 2;

USr.Code = CurrentUser;
ReadFirstMain(Usr, 1, True);

if (stat <> updatemode) and (UCISr.SerNr < 1) then
  begin
  UCISr.SerNr = NextSerNr("UpCISVc", CurrentDate, -1, false, "");
  end;
if (stat == updatemode) and (UCISr.SerNr < 1) then
  begin
  res = -1;
  end;
if (len(UCISr.SUBName)<1) then 
	begin
    RecordCheckError(1058,"",-1,"SUBName");      
    res = -1;
	end;
if (len(UCISr.HALName)<1) then 
	begin
    RecordCheckError(1058,"",-1,"HALName");      
    res = -1;
	end;	

  UpCISVcRecordCheck = res;
RETURN;
end;


global updating 
function LongInt UpCISVcRecordSave(var record UpCISVc UCISr, record UpCISVc UCIS2r, LongInt stat, LongInt long4)
BEGIN
record HALNameVc HNr;
LongInt res;

HNr.HALName = UCISr.HALName;
if not(ReadFirstMain(HNr, 1, true)) then
	begin
	HALNameCreate(UCISr.HALName);
	end;

UpCISVcRecordSave = res;  
RETURN;
end;