external inner procedure RateField(real,real,real,string,integer,string,boolean,real,real,string,boolean);
external inner function boolean AddBicToMasterWindow(integer,var real,var real,real,real,real,real);
external inner function Boolean IsIntEnabActive(var string,var string,var Boolean,var string);
external inner function Boolean TouchScreenLookVertical();
external inner procedure ARS2RClass_Def();
external inner procedure ALLVATRClass_Def();
external inner procedure SysEClass_Tool(Integer,var real,var real);
external inner procedure GTransEClass_Tool(Integer,var real,var real);
external inner procedure GTrans2EClass_Tool(Integer,var real,var real,var real);
external inner procedure GBaseEClass_Tool(Integer,var real,var real);
external inner procedure TransGenVClass_Tool(Integer,var real,var real);
external inner procedure GetCurUser(var record UserVc);
external inner procedure JobRClass_RUS();
external inner function string 60 UserDefined(string,string);
//external outer function string 255 MasterBannerURL();
external inner procedure ItemStatusUserSettings(string,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean,var Boolean);
external inner function Boolean AllowedInCountry(integer);
external inner function Integer ResourceWindowResourceType();
external inner function Boolean ResPlan_Rental();
external inner function Boolean ResPlan_ProdOperations();
remote inner function Boolean ReadPOSButtons(string,string,longint,var string,var string,var string,var record POSButtonsVc,var Integer);
external inner function Boolean TouchScreenLook();
external inner procedure ExtractObj(string,var Integer,var string);
external inner function Boolean IsSessionOpen(string,string,Date,Time);
external inner procedure CntNPTSPaymentCurrencies(var Array string,var Array string,var Array Integer,var Array string,var Integer);
remote inner procedure CntPOSCurrencies(var Array string,var Array Boolean,var Integer);
external inner function Boolean CheckOffLineRecords(Boolean);
external inner function string 60 TileUserDefined(string,Integer,var Integer);
external inner function Boolean CUVATNrColumn;
external inner function Integer GetInternetEnablerCountry();
external inner function Integer CntVarietyCode(Integer,var Array string);
external inner function Boolean UseTaxTemplatesforTaxCalc();
remote inner procedure TablesViewWClassDo(record LocalMachineBlock,string,Array string,Array string,Array string,Array string,Array Integer,var Integer,var LongInt);
external inner function string 20 GetMenuCode(string);
external inner procedure DrawModifierButtons(var Integer);
remote inner procedure ForkLiftQueueArray(string,string,var Array string,var Array string,var Array string,var Array string,var Array val,var Array Integer,var Array string,var Integer,Boolean,LongInt,LongInt,string);

external inner function Boolean DisplayLoginButtons();
external inner function Integer LoginShortcutsLines(Integer);
external inner function Integer LoginShortcutsPos(Real,Integer);

external inner procedure DefineTTRRowTypes(Integer);
external inner function real ItemButtons(string,Integer);
external inner procedure HWStoreWClassAddProducts(Integer);
external inner function Boolean HasCharts();
external inner function Boolean HasNewRegistration();
external inner function Boolean ActivityIsForAcceptanceOrFYI(record ActVc,Boolean,Boolean);
// TravelLog
external inner function Integer LoginShortcuts();
external inner function Boolean TestConfigurationEnabler(string);
remote inner function Integer CustomerSalesPaymentTermType(string);
// POS Standalone
external inner function Boolean DefCustCodeSetup();
// in-apps
external inner function Boolean HasInAppsAvailable();
external inner function Integer CountCountries();



// Language functions RUS
external inner function Boolean DisplayLoginKeyPad_RUS();
external inner function string 255 VATZoneEditFieldLabelRUS(Integer);
external inner function real VATZoneButtonsLabelsRUS(real,real,real,real);
external inner procedure LoginButtons2_RUS(Real,Real);
external inner procedure FORMDEF_RUS();
external inner function string 255 DemoMsgWClassTitle_RUS(Boolean,Boolean);
external inner procedure TBEClassDef_RUS();
external inner function string 255 VATZoneNameRUS();
external inner procedure TSERW_RUS();
external inner procedure TSERWNT_RUS();
external inner procedure TSERWTouch_RUS();
external inner procedure TSERWTEST_RUS();
external inner procedure INVFORM_RUS(Boolean);
external inner procedure DisplayRecordDetails_RUS(LongInt,LongInt,string,date,time,string,string,string,string,string,string,string,string,string,string,string,Integer,string,string,string,val,string,Boolean,string,string);
external inner procedure DrawPOSInterface_RUS(string,string,record POSButtonsVc,Integer,string,Integer);
external inner procedure DisplayRecordDetailsCustDisplay_RUS(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,string,string,val);
external inner function string 255 ResDayWClassWindowTitle_RUS();
external inner function string 255 ResMonWClassWindowTitle_RUS();
external inner function string 255 RTMonWClassWindowTitle_RUS();
external inner procedure SetupNightAuditWindowControls_RUS(Boolean);
external inner procedure CURClassDefinitionRUS();
external inner function real DrawPaymentModesButtons_IV_RUS(real);
external inner function real FunctionButtons_RUS(string);
external inner procedure CreditCardWindowHeader_RUS(Boolean,Boolean,Real);
external inner procedure CreditCardWindowButtons_RUS(string,string,real);
external inner procedure CreditCardWindowInvoiceDetail_RUS(Real);
external inner procedure CreditCardWindowDeliveryDetail_RUS(Real);
external inner function real DrawPaymentModesButtons_RUS();
external inner procedure DrawBarMenuTiles_RUS(string);
external inner procedure DrawRestPMOtherPay_RUS();
external inner procedure DisplayRecordDetailsRA_RUS(LongInt,LongInt,string,date,time,string,string,string,string,string,string,Integer,string,LongInt,Date,string,LongInt,string);
external inner procedure DrawModifierButtons2_RUS(var integer,var integer);
external inner procedure OKCancel_RUS();
external inner procedure DefineElearningURLCacheLClass_RUS();
external inner procedure DefineElearningURLCacheDClass_RUS();
external inner function real TravelLogDeductions_RUS(real,real);
external inner procedure LoginButtons_RUS(Real);
external inner procedure FORMDEF2_RUS();
external inner procedure FORMDEF3_RUS();
external inner procedure ARS2RClass_RUS();
external inner procedure ALLVATRClass_RUS();



external inner function Boolean IsStandardERP();
external inner function Boolean IsEnterprise();
external inner function Boolean StandardHansa();
external inner function Boolean HasATOL();

external inner function Boolean HasApprovals();
external inner function Boolean HasCCPayments();
external inner function Boolean HasAdvancedAccounting();
external inner function Boolean HasAdvancedCRM();
external inner function Boolean HasAdvancedPricing();
external inner function Boolean HasAdvancedStock();
external inner function Boolean HasBar();
external inner function Boolean HasBase2();
external inner function Boolean HasBranch();
external inner function Boolean HasCategories();
external inner function Boolean HasCommunicator();
external inner function Boolean HasConsignmentStock();
external inner function Boolean HasContactClassification();
external inner function Boolean HasContactRelations();
external inner function Boolean HasConsolidation();
external inner function Boolean HasCountryPerCustomer();
external inner function Boolean HasCustItem();
external inner function Boolean HasCustomerSearchKey();
external inner function Boolean HasDefineColumns();
external inner function Boolean HasDeliveryAddress();
external inner function Boolean HasDepartments();
external inner function Boolean HasETaxDocuments();
external inner function Boolean HasEInvoicing();
external inner function Boolean HasEndorsedChecks();
external inner function Boolean HasExtraNLComment();
external inner function Boolean HasExtTax();
external inner function Boolean HasFavouriteActTypes();
external inner function Boolean HasFormEditor();
external inner function Boolean HasFreightAdvanced();
external inner function Boolean HasHideCostPrice();
external inner function Boolean HasHotelInterface();
external inner function Boolean HasGuestUserDefined();
external inner function Boolean HasJewelleryInterface();
external inner function Boolean HasIncomeAndExpenseBook();
external inner function Boolean HasIOUChecks();
external inner function Boolean HasItemClassification();
external inner function Boolean HasItemGroups();
external inner function Boolean HasKPIs();
external inner function Boolean HasLanguages();
external inner function Boolean HasLimitedAccess();
external inner function Boolean HasLocalMachines();
external inner function Boolean HasMainPartner();
external inner function Boolean HasMultiCurrency();
external inner function Boolean HasMultiLocations();
external inner function Boolean HasLoyaltyCards();
external inner function Boolean HasObjects();
external inner function Boolean HasOfficialSerNr();
external inner function Boolean HasPreferedOfficialSerNr();
external inner function Boolean HasNumberSeries();
external inner function Boolean HasPersons();
external inner function Boolean HasPocketScreen();
external inner function Boolean HasPositions();
external inner function Boolean HasProjects();
external inner function Boolean HasPriceLists();
external inner function Boolean HasQualityControl();
external inner function Boolean HasReconLevel2();
external inner function Boolean HasReminderLevel();
external inner function Boolean HasRemoteBackup();
external inner function Boolean HasResourceDisplayGroups();
external inner function Boolean HasRussianPrepayment();
external inner function Boolean HasRoute();
external inner function Boolean HasSalesman();
external inner function Boolean HasSecondQuantity();
external inner function Boolean HasSerialNumbers();
external inner function Boolean HasSettlementDiscount();
external inner function Boolean HasSimulations();
external inner function Boolean hasSimAccruals();
external inner function Boolean HasSkypeConnection();
external inner function Boolean HasSIPServerConnection();
external inner function Boolean HasTaxMatrix();
external inner function Boolean HasTestFeatures();
external inner function Boolean HasMetroTestFeatures();
external inner function Boolean HasTouchScreenDevice();
external inner function Boolean HasTouchScreenLook();
external inner function Boolean HasTREO();
external inner function Boolean HasVarieties();
external inner function Boolean HasVATZone();
external inner function Boolean HasWithholdingTax();
external inner function Boolean HasWithholdingTaxAdvanced();

external inner function Boolean HasStandardCRM();
external inner function Boolean HasStandardOrganizer();
external inner function Boolean HasStandardCommunicator();

external inner function Boolean HasEMail();
external inner function Boolean HasExternalEMail();

external inner function Boolean HasModAT2();
external inner function Boolean HasModCheck();
external inner function Boolean HasModCL();
external inner function Boolean HasModCO();
external inner function Boolean HasModCourses();
external inner function Boolean HasModCredMan();
external inner function Boolean HasModCRM();
external inner function Boolean HasModExp();
external inner function Boolean HasModHotel();
external inner function Boolean HasModHRM();
external inner function Boolean HasModIN();
external inner function Boolean HasModNL();
external inner function Boolean HasModPO();
external inner function Boolean HasModPOS();
external inner function Boolean HasModPL();
external inner function Boolean HasModPP();
external inner function Boolean HasModProd();
external inner function Boolean HasModQT();
external inner function Boolean HasModRent();
external inner function Boolean HasModRest();
external inner function Boolean HasModRsrt();
external inner function Boolean HasModSO();
external inner function Boolean HasModSL();
external inner function Boolean HasModSVO();
external inner function Boolean HasModTS();
external inner function Boolean HasModWHM();
external inner function Boolean HasModDI();



//+
external function boolean CanUserChangeField(string);
external function Integer CanUserChangeFieldInt(string);
external function boolean IfShowRemainsInOrder();


event DefineWindows
begin
  real x, h, h1, h2, h3, h4, h5, h6, h7, hs, v, v1, v2, v3, l, vs, vm, vm2, f, t;
  real es, hfirst, voff, ggn;
  real width;
  string 255 label;
  string 255 tstr;
  record CUVc CUr;
  record UserVc Usr;
  Integer wn;
  integer tilenr, flipnr;
  integer pos, rn;
  integer ViewModeInt;
  record CYBlock CYb;
  real fs;
  record LocalMachineBlock LMb;
  record ActVc Actr;
  Boolean showapprovaltile;
  integer fl;

  SetLangMode(LangRussian, "RUS", 2);

  Usr.Code = CurrentUser;
  ReadFirstMain(Usr, 1, true);

  BlockLoad(CYb);


//=============================================== CUVc
  WindowBegin("Контакт",CUDClass,CGview,-);
  DynamicWindow;
  SetWRect(20,80,950,441);
  Sizeable(-1,-1,0,0);
  UseView(CUVc);
  FormName(PrintCUD);

  wn = CurWindow;
  if (wn>0) then begin
    if (GetWindowClass(wn)=="CUDClass") then begin
      GetWindowRecord(wn,CUr);
    end;
  end;

  ActiveFieldOnNew("Code"); // dont change, otherwise automatic address lookup helper window wont show automatically //wns
                              // this should not be based on localization, but rather on if the
                              // address lookup is enabled, erik

  Tile(0,140,false,"",Code);

  v = 6; h = 130; l=223; vs = 20; h1=410; h2 = 350; h3 = 430; h4 = 580; h5 = 460;
  EditField(h,v ,   95,"Код",Normal,Code,false,TSerSClass);
  EditField(h1,v,50,"Категория клиента",Normal,CustCat,false,CCatSClass);

  EditFieldTL(h1 + 340,v,20,"Aлфавитка",M4UStr, Normal, 1, AlphaBet,false,0);

  EditField(h,v+=vs,95,"Сокр.",Normal,SearchKey,false,0);
  EditField(h1,v,50,"Категория постав-ка",Normal,VECat,false,VGSClass);
  EditField(h,v+=vs,h1-h+50,"Наименов.",Normal,Name,false,0);

  EditField(h, v += vs, h1 - h + 50, "Оф. наименование", CanUserChangeFieldInt("Department"), Department, false, 0);

  CheckBox(h1+80,v=6,0,"Клиент",CUType);
  CheckBox(h1+80,v+=16,0,"Поставщик",VEType);
  CheckBox(h1+80,v+=16,0,"Гость",GuestType);

  v=6;

  CheckBox(h1+180,v,0,"Сотрудник",EmployeeType); v = v + 16;
  CheckBox(h1+180,v,0,"Дилер",DealerType);
//  HalPushButton(h1+170,v=10,h1+170+100,v+20,"CreditInfoCUDsm","Credit Info");
//  HalPushButton(h1+170,v=10,h1+170+100,v+20,"UpdCustomerAddressCUDsm","Update Address");
  tilenr = 1;
  TileButton(tilenr,"Контакт"); tilenr = tilenr + 1;
  TileButton(tilenr,"Доставка"); tilenr = tilenr + 1;
  TileButton(tilenr,"Условия"); tilenr = tilenr + 1;
  TileButton(tilenr,"Ценообр."); tilenr = tilenr + 1;
  TileButton(tilenr,"Компания"); tilenr = tilenr + 1;
  TileButton(tilenr,"Счета"); tilenr = tilenr + 1;
  TileButton(tilenr,"Web"); tilenr = tilenr + 1;
  TileButton(tilenr,"Комментарии"); tilenr = tilenr + 1;
  TileButton(tilenr,"Гость"); tilenr = tilenr + 1;
  TileButton(tilenr,"Польз.поля"); tilenr = tilenr + 1;
  TileButton(tilenr,"Заметки"); tilenr = tilenr + 1;

  TileButton(tilenr,"Док-ты");
  tilenr = tilenr + 1;
  TileButton(tilenr,"Ист.");
  tilenr = tilenr + 1;

  tilenr = 1;
  Tile(tilenr,290,true,tilenr,InvAddr0); tilenr = tilenr + 1;
  v=6;
  HalPushButton(h+120,v,h+120+100,v+20,"UpdCustomerAddressCUDsm","Обновить адрес");
  v=v+10;
  StaticText(h,v+13,"Юридический адрес",false);
  label = UserDefined("CUVc","InvAddr0");
  EditField(h,v+=vs,-20,label,Normal,InvAddr0,false,0);
  label = UserDefined("CUVc","InvAddr1");
  EditField(h,v+=vs,-20,label,Normal,InvAddr1,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs,-20,label,Normal,InvAddr2,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs,-20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs,-20,label,Normal,InvAddr4,false,0);
  EditField(h,v+=vs,50,"Страна",Normal,CountryCode,false,CountrySClass);

  EditField(h1,v,-20,"Отдел",Normal,Department,false,0);
  EditField(h,v+=vs,150,"Телефон",Normal,Phone,false,0);
  EditField(h1,v,-20,"Факс",Normal,Fax,false,0);
  EditField(h,v+=vs,150,"Доп. телефон",Normal,AltPhone,false,0);
  EditField(h1,v,-20,"Мобильный тел.",Normal,Mobile,false,0);
  EditField(h,v+=vs,150,"Имя в Skype",Normal,SkypeName,false,0);
  EditField(h1,v,-20,"SIP",Normal,SIPCode,false,0);
  EditField(h,v+=vs,150,"E-mail",Normal,eMail,false,0);
  EditField(h1,v,-20,"Префикс",Normal,Extension,false,0);
  EditField(h,v+=vs,150,"Основное конт. лицо",Normal,Person,false,ContactSClass);
  EditField(h1,v,-20,"WWW-адрес",Normal,wwwAddr,false,0);
  EditField(h,v+=vs,-20,"Классификация",Normal,Classification,false,CClassSClass);
  EditField(h,v+=vs,-20,"Классификация(пост.)",Normal,SupClassification,false,SupClSClass);
/*
  RecordList2(10,v+=40,-30,-39,"ContactRelVc");
  RlColKey(4,4,"Код",ContactCode,false,ActCustContactCode);
  RlCol(55,55,"Наим.",ContactTitle,false);
  RlColKey(105,105,"Имя",ContactName,false,ActCustContactName);
  RlCol(235,235,"Телефон",ContactPhone,false);
  RlCol(335,335,"Мобильный",ContactMobile,false);
  RlCol(435,435,"Должность",JobTitle,false);
  RlCol(535,535,"E-mail",ContacteMail,false);
//  RlCol(-1,-1,"",Invalid,true);
*/

  Tile(tilenr,240,false,tilenr,DelAddr0); tilenr = tilenr + 1;
  v=6;
  v=v+12;
  StaticText(h,v+13,"Фактический адрес",false);
  label = UserDefined("CUVc","DelAddr0");
  EditField(h,v+=vs,-20,label,Normal,DelAddr0,false,0);
  label = UserDefined("CUVc","DelAddr1");
  EditField(h,v+=vs,-20,label,Normal,DelAddr1,false,0);
  label = UserDefined("CUVc","DelAddr2");
  EditField(h,v+=vs,-20,label,Normal,DelAddr2,false,0);
  label = UserDefined("CUVc","DelAddr3");
  EditField(h,v+=vs,-20,label,Normal,DelAddr3,false,0);
  label = UserDefined("CUVc","DelAddr4");
  EditField(h,v+=vs,-20,label,Normal,DelAddr4,false,0);
  EditField(h,v+=vs,50,"Страна",Normal,DelCountry,false,CountrySClass);

  EditField(h2+50,v,-20,"Комментарий к счету",Normal,OrderComment,false,0);
  EditField(h,v+=vs,120,"№ фрахта",Normal,FreightNr,false,0);
  EditField(h2+50,v,70,"Регион",Normal,Region,false,RegionSClass);
  EditField(h,vm=(v+=vs),120,"Условие отгр. (кл.)",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h2+50,v,70,"Условие отгр. (пост.)",Normal,VEShipDeal,false,ShipDealSClass);
  EditField(h,v+=vs,120,"Способ отгр. (кл.)",Normal,ShipMode,false,DMSClass);
  EditField(h2+50,v,70,"Способ отгр. (пост.)",Normal,VEShipMode,false,DMSClass);
  EditField(h,v+=vs,120,"Маршрут",Normal,Sorting,false,DelRouteSClass);
/* these fields were used for securities trading, this module doesnt exist in hansa anymore */
/* Two of these fields are used in Russia and Ukraine */
//  EditField(h,vm=(v+=vs),120,"Securities Acc.",Normal,SecAccount,false,0);
//  EditField(h,v+=vs,120,"Bank Account",Normal,BankAccount,false,0);//xx
//  EditField(h,v+=vs,120,"Account Operator",Normal,AccOperator,false,BankSClass);//xx
//##  EditField(h,v+=vs ,70, "Com. Matrix",Normal,ComCode,false,ComSClass);
  ButtonFrame(h5+30,v=vm,150,2,"Дата отгрузки на основе");
  RadioButton(h5+30,v,0,0,"текущей",DeliveryBasedOn);
  RadioButton(h5+30,v+=16,1,0,"запланированной",DeliveryBasedOn);

  EditFieldTL(750, v = vm - 10, 30, "Дней до отгрузки", M4Int, Normal, 0, ArriveDays, True, 0);
  EditFieldTL(750, v += vs, 30, "Дней до поставки", M4Int, Normal, 0, DeliverDays, True, 0);
  EditField(750, v+=vs, 60, "Время доставки план", Normal, PlanDeliveryTime, false, IDeliveryTimeSClass);

  Tile(tilenr,190,false,tilenr,PayDeal); tilenr = tilenr + 1;

//  EditField(h,v=6,25,"Условие опл. (кл.)",Normal,PayDeal,false,PDSClass);
//  EditField(h,v+=vs,80,"Лимит кредита (кл.)",Normal,CreditLimit,true,0);
//  EditField(h,v+=vs,80,"Лимит кред.(кл.) в дн.",Normal,CreditLimitDays,false,0);

  EditField(h,v=6,20,"Условие опл. (кл.)",CanUserChangeFieldInt("PayDeal"),PayDeal,false,PDSClass);
 // EditField(h,v+=vs,80,"Лимит кредита (кл.)",CanUserChangeFieldInt("CreditLimit"),CreditLimit,false,0);
  EditField(h,v+=vs,80,"Лимит кредита (кл.)",CanUserChangeFieldInt("tCreditLimit"),tCreditLimit,false,0);

  EditField(h,v+=vs,80,"Наш № у клиента",Normal,TheirCode,false,0);

  EditField(h, v+=vs,80,"курс валюты",CanUserChangeFieldInt("VECustID"),VECustID,false,0);

  EditField(h,v+=vs,80,"Получатель",Normal,InvoiceToCode,false,CUSClass);
  EditField(h,v+=vs,80,"КПП",Normal,ANACode,false,0);
  EditField(h,v+=vs,80,"Ставка пени",Normal,IntRate,false,0);
  EditField(h,v+=vs,80,"Дата создания",ViewOnly,DateCreated,false,0);
  EditField(h,v+=vs,80,"Основной партнер",Normal,MainPartner,false,CUSClass);
  EditField(h2,v=6,25,"Условие опл. (пост.)",Normal,VEPayDeal,false,PDSClass);
  EditField(h2,v+=vs,80,"Лимит кред. (пост.)",Normal,VECreditLimit,true,0);
  EditField(h2,v+=vs,80,"Лимит кр.(пост.) в дн.",Normal,VECreditLimitDays,false,0);
  EditField(h2,v+=vs,80,"Наш № у пост-ка",Normal,VECustID,false,0);
  EditField(h2,v+=vs,80,"Получатель",Normal,VEInvoiceToCode,false,VESClass);
  EditField(h2,v+=vs,80,"Факторинг",Normal,VEFactoring,false,VESClass);
  EditField(h2,v+=vs,80,"Мин. сумма заказа",Normal,MinOrdSum,false,0);
  EditField(h2,v+=vs,80,"Ссылка",Normal,RefStr,false,0);
  EditField(h2,v+=vs,80,"Послед. изменение",Normal,DateChanged,false,0);

  if CanUserChangeField("blockedFlag") then
    begin
    CheckBox(h5 = 430, v, 0, "Закрыт", blockedFlag);
    end;

  CheckBox(h5,v+=16,0,"Отложен",OnHoldFlag);
  CheckBox(h5,v+=16,0,"Напоминания",RemndrFlag);
//  CheckBox(h5,v+=16,0,"Collection",ColectionFlag);
  CheckBox(h5,v+=16,0,"Пеня",InterestFlag);
  CheckBox(h5,v+=16,0,"Счет аванса",OnAccount);

  CheckBox(h5,v+=16,0,"Без факторинга",NoFactoringFlag);
  CheckBox(h5,v+=16,0,"Без доп.налога",NoTax1);
  CheckBox(h5,v+=16,0,"Только гр. фактур.",GroupInv);
  CheckBox(h5,v+=16,0,"Счет себе",SelfBilling);
  CheckBox(h5,v+=16,0,"Отключить автопечать акта сверки",DontPrintSverkaFlag); //03.07.14 INAU

  CheckBox(h4,v=12,0,"Клиент EGO",EGOFlag);
  CheckBox(h4,v+=16,0,"Клиент EDI",EDIFlag);
  CheckBox(h4,v+=16,0,"Доступ к БД",AllowLogin);
//  CheckBox(h4,v+=16,0,"Allow FTP Access",FTPLogin);
  CheckBox(h4,v+=16,0,"Только фискальные сч/ф",FiscalFlag);
  CheckBox(h4,v+=16,0,"Не вкл. в рассылку",NoLetterPosting);

  CheckBox(h4,v+=16,0,"Не вкл. в электр. рас-ку",NoMailPosting);
  CheckBox(h4,v+=16,0,"Не вкл.нал.на окр.среду",NoRepa);
  CheckBox(h4,v+=16,0,"Без регион. сборов",NoTax2);

  if CanUserChangeField("tLimKrFlag") then
    begin
    CheckBox(-130, v, 0, "Запрет изменений", tLimKrFlag);
    end;

  Tile(tilenr,110,false,tilenr,PLCode); tilenr = tilenr + 1;
  EditField(h,v=6,  80,"Валюта (кл.)",Normal,CurncyCode,false,CurncyCodeSClass);

  //EditField(h,v+=vs ,80, "Прейскурант",Normal,PLCode,false,PLDefSClass);
  //EditField(h,v+=vs ,80, "Таблица скидок",Normal,RebCode,false,RebSClass);

  EditField(h,v+=vs ,100, "Прейскурант",CanUserChangeFieldInt("PLCode"),PLCode,false,PLDefSClass);
  EditField(h,v+=vs ,100, "Таблица скидок",CanUserChangeFieldInt("RebCode"),RebCode,false,RebSClass);

  EditField(h,v+=vs,80,"Продавец",Normal,SalesMan,false,UserSClass);

  EditField(h,v+=vs,80,"Товары по умолч.",Normal,CompItemCode,false,CompItemSClass);
  EditField(h2,v=6,80,"Валюта (пост.)",Normal,VECurncyCode,false,CurncyCodeSClass);

//  EditField(h2,v+=2*vs ,80, "Таблица скидок",Normal,VERebCode,false,RebSClass);

  EditField(h2,v+=vs,80,"Группа продаж",Normal,SalesGroup,false,SalesGroupSClass);

  EditField(h2,v+=vs,80,"Валюта печати",Normal,AlienCurncy,false,CurncyCodeSClass);
  EditField(h2,v+=vs,80,"Курс валюты печати",Normal,AlienToRateB1,false,0);

  ButtonFrame(h5,v=24,150,3,"Цена основана на");
  RadioButton(h5,v,0,0,"на дату счета",PriceBasedOn);
  RadioButton(h5,v+=16,1,0,"на дату заплан. отгрузки",PriceBasedOn);
  RadioButton(h5,v+=16,2,0,"на дату отправки",PriceBasedOn);

  Tile(tilenr,180,false,tilenr,Comment); tilenr = tilenr + 1;
  EditField(h,v=6,-20,"Комментарий",Normal,Comment,false,0);
  EditField(h,v+=vs,-20,"Предупр. (кл.)",Normal,WarnText1,false,0);
  EditField(h,v+=vs,-20,"Предупр. (пост.)",Normal,VEWarnText1,false,0);
  EditField(h,v+=vs,120,"ИНН",Normal,VATNr,false,0);
  EditField(h2-20,v,120,"ОКПО",Normal,RegNr1,false,0);

  EditField(h,v+=vs,  50,"Язык документа",Normal,LangSup,false,LnSupSClass);
  EditField(h2-20,v,80,"Лим. кредита",CanUserChangeFieldInt("CreditLimit"),CreditLimit,false,0);

  ButtonFrame(h5+30,v+18,143,1,"Тип");
  RadioButton(h5+30,v+18,0,0,"Компания",CustType);
  RadioButton(h5+110,v+18,1,0,"Персона",CustType);
  EditField(h,v+=vs,120,"Юрид. документы",Normal,LegalForm,false,CULegalFormSClass);
  EditField(h2-20,v,120,"Рег. номер",Normal,RegNr2,false,RegDefSClass);
  EditField(h,v+=vs,120,"Дата пров. НДС",Normal,VATNrCheckDate,false,PasteCurDate);
  EditField(h2-20,v,120,"ГНР",Normal,RecipientGLN,false,0);
  EditField(h,v+=vs,20,"Код НДС (кл.)",Normal,VATCode,false,VATCodeSClass);
  if (HasTaxMatrix) then begin
    EditField(h+125,v,50,"Шабл. нал.(прод.)",Normal,TaxTemplateCode,false,TaxTemplateSClass);
  end;
  HalPushButton(h2-20,v,h2-20+100,v+20,"UpdCustomerAddressCUDsm","Обновить адрес");
  EditField(h,v+=vs,20,"Код НДС покупки",Normal,VEVATCode,false,VATCodeSClass);
  if (HasTaxMatrix) then begin
    EditField(h+125,v,50,"Шабл. нал.(пок.) ",Normal,VETaxTemplateCode,false,TaxTemplateSClass);
  end;
  EditField(h,v+=vs,50,"Язык",Normal,LangCode,false,LangSClass);

//  EditField(h,v+=vs,120,"Channel",Normal,WebServiceChannel,false,SetSClass);
  v = 130;
  v = VATZoneButtonsLabelsRUS(h5+30,v,150,16);

  Tile(tilenr,130,false,tilenr,AccAP); tilenr = tilenr + 1;
  EditField(h,v=6,80,"Счет кредиторов",Normal,AccAP,false,AccSClass);
  EditField(h,v+=vs,80,"Контрольный счет",Normal,AccCost,false,AccSClass);
  EditField(h,v+=vs,80,"Счет аванса",Normal,OnAccAccAP,false,AccSClass);
  EditField(h,v+=vs,120,"Объекты (кл.)",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,120,"Объекты (пост.)",Normal,VEObjects,false,ObjSClass);
  EditField(h,v+=vs,50,"Код платежа",Normal,PaymentCode,false,PaymentCodeSClass);

  EditField(h1,v=6,200,"IBAN код",Normal,IBANCode,false,0);
  EditField(h1,v+=vs,-20,"Оператор счета",Normal,AccOperator,false,BankSClass);
  EditField(h1,v+=vs,-20,"Р/с",Normal,BankAccount,false,0);
  EditField(h1,v+=vs,-20,"Р/с 2",Normal,Bank,false,0);
  EditField(h1,v+=vs,80,"Код сорт-ки",Normal,SortCode,false,0);
  if (HasWithholdingTax) then begin
    EditField(h1,v+=vs,120,"Способы плат. удерж.",Normal,WithPayMode,false,PMSClass);
  end;

  Tile(tilenr,70,false,tilenr,WebConf); tilenr = tilenr + 1;
  EditField(h,vm=(v=6),120,"Web-конференция",Normal,WebConf,true,0);
  EditField(h1,v,150,"Главная классиф-ция",Normal,MainDispGroup,false,WebNGProductCatSClass);
  EditField(h,v+=vs,120,"Первая страница Web",Normal,WebStartPage,false,0);
  EditField(h1,v,150,"Отображать в WEB",Normal,WebDisplays,false,WebDisplaySClass);
  EditField(h,v+=vs,120,"Код доставки",Normal,FreightCode,false,WebFreightSClass);

  Tile(tilenr,170,false,tilenr,Comment0); tilenr = tilenr + 1;
  EditField(h,v=6,-20,"Комментарий",Normal,Comment0,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment1,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment2,false,0);
  EditField(h,v+=vs,-20,"Должность",Normal,Title,false,CourtesyTitlesSClass);
  EditField(h,v+=vs,-20,"Служ. обязанность",Normal,JobDesc,false,JobTitleSClass);
  EditField(h,v+=vs,-20,"Обращение 1",Normal,Salutation1,false,0);
  EditField(h,v+=vs,-20,"Обращение 2",Normal,Salutation2,false,0);
  EditField(h,v+=vs,-20,"Обращение 3",Normal,Salutation3,false,0);

  Tile(tilenr,250,false,tilenr,DocType); tilenr = tilenr + 1;
  EditField(h,v=6,100,"Тип документа",Normal,DocType,false,CUDocTypeSClass);
  EditField(h2,v,-20,"Номер паспорта",Normal,PassportNr,false,0);
//  EditFieldTL(h,vm=(v+=20),100,"Nationality",M4StrSet,Normal,423,Nationality,false,StrSetSClass);
  EditField(h,vm=(v+=20),100,"Гражданство",Normal,Nationality,false,CountrySClass);
  EditField(h,v+=20,100,"Дата рождения",Normal,BirthDate,false,PasteCurDate);
  EditField(h,v+=20,100,"Место рождения",Normal,BirthPlace,false,0);
  EditField(h,v+=20,100,"Страна рождения",Normal,BirthCountry,false,CountrySClass);
  EditField(h,v+=20,100,"Профессия",Normal,Profesion,false,0);
  EditField(h,v+=20,100,"Газета",Normal,Newspaper,false,NewspaperSClass);
  EditField(h,v+=20,100,"Пароль",Normal,Passphrase,false,0);
  EditField(h,v+=vs,100,"Тур оператор",Normal,TourOperator,false,CUSClass);
  EditField(h,v+=vs,100,"Агент",Normal,Agent,false,CUSClass);
  EditField(h,v+=vs,100,"Вид оплаты",Normal,DefGuestPayMode,false,PMSClass);
  EditField(h,v+=vs,100,"Источник заказа",Normal,BookOrigin,false,BookOrgSClass);
  EditField(h,v+=vs,300,"Отметки о диете",Normal,DietRemarks,false,0);
  EditField(h,v+=vs,300,"Отметки о треб.",Normal,RequirementRemarks,false,0);

  ButtonFrame(h2,v=vm+20,100,2,"Пол");
  RadioButton(h2,v,0,0,"Мужской",Gender);
  RadioButton(h2,v+=17,1,0,"Женский",Gender);

  CheckBox(h2+130,v=vm+20,0,"Курит",Smoking);
//  	CheckBox(h2+130,v+=17,0,"В черном списке",Blacklist);

  if CanUserChangeField("Blacklist") then
    begin
    CheckBox(h2+150,v+=16,0,"В черном списке",Blacklist);
    end;

  ButtonFrame(h2,vm=(v+=40),100,4,"Семейное положение");
  RadioButton(h2,v,0,0,"Не женат",MarStatus);
  RadioButton(h2,v+=17,1,0,"Замужем",MarStatus);
  RadioButton(h2,v+=17,2,0,"В разводе",MarStatus);
  RadioButton(h2,v+=17,3,0,"Вдовa/-ец",MarStatus);

  ButtonFrame(h2=h2+130,v=vm,100,3,"Возраст");
  RadioButton(h2,v,1,0,"Ребенок",AgeStatus);
  RadioButton(h2,v+=17,0,0,"Взрослый",AgeStatus);
  RadioButton(h2,v+=17,2,0,"Пенсионер",AgeStatus);

  Tile(tilenr,270,false,tilenr,UserStr2); tilenr = tilenr + 1;
  v=6;h=180;
//    label = UserDefined("CUVc","UserStr1");
//    if (nonblank(label)) then begin
//      EditField(h,v,-20,label,Normal,UserStr1,false,0);
//    end;
  label = UserDefined("CUVc","UserStr2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr2,false,0);
  end;
  label = UserDefined("CUVc","UserStr3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr3,false,0);
  end;
  label = UserDefined("CUVc","UserStr4");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr4,false,0);
  end;
  label = UserDefined("CUVc","UserStr5");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserStr5,false,0);
  end;
  label = UserDefined("CUVc","UserVal1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserVal1,false,0);
  end;
  label = UserDefined("CUVc","UserVal2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserVal2,false,0);
  end;
  label = UserDefined("CUVc","UserVal3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,UserVal3,false,0);
  end;
  label = UserDefined("CUVc","UserDate1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate1,false,PasteCurDate);
  end;
  label = UserDefined("CUVc","UserDate2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate2,false,PasteCurDate);
  end;
  label = UserDefined("CUVc","UserDate3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate3,false,PasteCurDate);
  end;

  EditField(h,v+=vs,-20,"Адресная книга",Normal,AddressBooks,false,0);

  ButtonFrame(10, v+=40, 760, 0 ,"Kонтакты с клиентом");
  HalPushButton(300, v, 400,v += vs, "MakeVCUNote", "Репутация");
  RecordList2(10,v+=vs,-30,-39,"VCUNoteVc");
  RlColKey(4,4,"Cотрудник",SalesMan,false,CustSalesmanCode);
  RlColKey(-640,-640,"Дата",Date,false,CustSalesmanCode);
  RlCol(-550,-550,"Cодержание",Comment,false);

  Tile(tilenr,500,false,tilenr,Math2); tilenr = tilenr + 1;
  StaticText(50,v=20,"Записки",true);
  TextField(60,v-5,-20,370,Math2,0);

  //Документы 5.06.12
  Tile(tilenr, 380, false, tilenr, Passp);
  tilenr = tilenr + 1;
  ButtonFrame(h =100, v = 20, 100, 1,  "Cтатус клиента");
  RadioButton(h, v,  0, 0, "ФЛП",  Status);
  RadioButton(h += 50, v, 1, 0,  "Юр.лицо",  Status);
  CheckBox(240, v, 0, "Cтатус клиента", ValStatus);

  //08.02.13 INAU - Перенесено из "пользовательских" по просьбе LKOROL
  label = UserDefined("CUVc","UserStr1");
  if (nonblank(label)) then begin
    EditField(h = 120, v+=vs, 203, label, Normal, UserStr1, false, 0);
  end;
  //===

  EditField(h = 120, v += 20, 80, "ИНН", Normal, VATNr, false, 0);
  EditField(243, v , 80, "ОКПО", Normal, RegNr1, false, 0);
  EditFieldTL(h, v += 20, 80, "Cрок договора", M4Date, CanUserChangeFieldInt("ContractDate"), 12, ContractDate, false, PasteCurDate);
  CheckBox(240, v, 0, "Cрок договора", ValTerm);
  EditField(h, v += 20, 80, "Паспортные данные", Normal, Passp, false, 0);
  CheckBox(240, v, 0, "Паспорт", ValPas);
  EditField(h, v += 20, 80, "Cправка о ИНН", Normal, RefINN, false, 0);
  CheckBox(240, v, 0, "Cправка,  ИНН", ValRefINN);
  EditField(h, v += 20, 80, "Выписка из ЕГРПОУ", Normal, EGRPOU, false, 0);
  CheckBox(240, v, 0, "Выписка из ЕГРПОУ", ValEGRPOU);
  EditField(h, v += 20, 80, "Cв-во о ед. налоге", Normal, RefSingle, false, 0);
  CheckBox(240, v, 0, "Cв-во,  ед. налог", ValRefSingle);
  EditField(h, v += 20, 80, "Док. о назн. дир-ра", Normal, AssigDir, false, 0);
  CheckBox(240, v, 0, "Назначение", ValAssigDir);
  EditField(h, v += 20, 80, "Выдержка из устава", Normal, Excerpt, false, 0);
  CheckBox(240, v, 0, "Выдержка", ValExcerpt);
  EditField(h, v += 20, 80, "Cв-во НДC", Normal, RefNDS, false, 0);
  CheckBox(240, v, 0, "Cв-во,  НДC", ValRefNDS);
  EditField(h, v += 20, 80, "Cправка 4-ОПП", Normal,  RefOPP, false, 0);
  CheckBox(240, v, 0, "Cправка,  ОПП", ValRefOPP);
  EditField(h, v += 20, 110, "Основное конт.лицо", CanUserChangeFieldInt("Person"), Person, false, ContactSClass);
  CheckBox(240, v, 0, "Доверенность", ValTrust);
  EditFieldTL(h, v += 20, 80, "Дата посл. сверки", M4Date, Normal, 12, DateDebet, false, PasteCurDate);
  CheckBox(240, v, 0, "Использовать ГТД", CCDFlag);
  // 15.05.13 TGOR
  EditFieldTL(h, v += 25, 80, "Время изм.полей", M4Date, ViewOnly, 12, DocChDate, false, 0);
  EditFieldTL(240, v, 80, "", M4Time, ViewOnly, 12, DocChTime, false, 0);
  EditFieldTL(h, v += 20, 80, "Просмотрел изм-я", M4UStr, ViewOnly, 12, LowPrew, false, 0);
  EditFieldTL(380,-25, -20, "Правовые риски и угрозы", M4UStr, Normal, 250, tLegRisk, false, tLegRiskSClass);
  MatrixBegin(380, 40, -25, -50, -, 100); // 15.05.13 TGOR
  MatCol(1, 30, "Дата", 0, CommDate, true, PasteCurDate);
  MatCol(1, 100, "Время", 0, CommTime, false, PasteCurTime);
  MatCol(1, 170, "Поле", 0, Field, true, tFieldSClass);
  MatCol(1, 240, "Комментарий", 0, Comment, true, 0);
  EndMatrix;

  //15.03.13 INAU
  if SetInSet(Usr.AccessGroup, "ADMIN") then
    begin
    ViewModeInt = Normal;
    end
  else
    begin
    ViewModeInt = ViewOnly;
    end;
  Tile(tilenr, 180, false, tilenr, LogNewUser);
  tilenr = tilenr + 1;
  EditField(h=130,v=20,70,"Создал",ViewModeInt,LogNewUser,false,0);
  EditField(h+=80,v,70,"",ViewModeInt,LogNewDate,false,0);
  EditField(h+=80,v,50,"",ViewModeInt,LogNewTime,false,0);
  EditField(h=130,v=40,70,"Сохранил",ViewModeInt,LogSaveUser,false,0);
  EditField(h+=80,v,70,"",ViewModeInt,LogSaveDate,false,0);
  EditField(h+=80,v,50,"",ViewModeInt,LogSaveTime,false,0);
  //

  if (UserCanReport("CustPSRn","",true)) then begin
    SpecialMenu("Справка по клиенту",'e',0,"CUStatusCUDsm");
  end;
  SpecialMenu("Связать существующий контакт",' ',1,"AddContactCUDsm");
  SpecialMenu("Создать новый контакт",' ',1,"NewContactCUDsm");
  SpecialMenu("Удалить связанный контакт",' ',1,"DelContactCUDsm");
  SpecialMenu("Изменить данные связанного контакта",' ',1,"EditContactCUDsm");
//  SpecialMenu("Создать деятельность",'c',2,"NewActCUDsm");
  SpecialMenu("Создать задачу",' ',2,"NewQACUDsm");
  SpecialMenu("Создать письмо с паролем",' ',3,"RandomPassMailCUDsm");
  SpecialMenu("Создать e-mail",'m',5,"NewMailCUDsm");
  if (UserCanReport("VEPSRn","",true)) then begin
    SpecialMenu("Статус поставщика",'u',4,"VEStatusVEDsm");
  end;
  SpecialMenu("Обновить контактные лица",' ',6,"UpdContactAddrCUDsm");
  EndWindow;


//=============================================== UserVc
  WindowBegin("Сотрудник",USDClass,CGview,UserView);
  SetWRect(64,80,509,380);
  Sizeable(-1,-1,0,0);
  UseView(UserVc);
  Tile(0,70,false,"",Code);
  vs = 20; h=150; h2 = 290; h3 = 350;
  EditField(h,v=6, 80,"Код",St_i,Code,false,0);
  EditField(h,v+=vs,300,"ФИО",Normal,Name,false,0);
  if (TestEnablerFile("DbgLics")) then begin
    EditField(h,v+=vs,100,"Expires",ViewOnly,ExpiryDate,true,0);
  end;
  tilenr = 1;
  TileButton(tilenr,"Доступ");  tilenr = tilenr + 1; // Not Found
  TileButton(tilenr,"Сер. номера");  tilenr = tilenr + 1; // Not Found
  TileButton(tilenr,"Премия");  tilenr = tilenr + 1; // Not Found

//  TileButton(tilenr,"Счета");  tilenr = tilenr + 1; // Not Found

  if (StandardHansa==false) then begin
    TileButton(tilenr,"Калькуляция проектов");  tilenr = tilenr + 1; // Not Found
    TileButton(tilenr,"Web");  tilenr = tilenr + 1; // Not Found
    TileButton(tilenr,"Ввод времени");  tilenr = tilenr + 1; // Not Found
  end;
  TileButton(tilenr,"Форматы");  tilenr = tilenr + 1; // Not Found
  CheckBox(h2,6,0,"Закрыт",Closed);
  tilenr = 1;

  Tile(tilenr,210,false,tilenr,AccessGroup);  tilenr = tilenr + 1;
  EditField(h,v=6,100,"Группа доступа",Normal,AccessGroup,false,AccessSClass);

  ColourPushButton(-100, v, -50, v + 20, "ISetAccessFromUserVc", "Доступ", 0);  //10.09.13 INAU

  EditField(h,v+=vs,100,"Нач. уровень доступа",Normal,StartLevel,false,SetSClass);
  if (StandardHansa==false) then begin
    EditField(h,v+=vs,100,"Простая функция",Normal,OneFunction,false,OneFunctionSClass);
    EditField(h,v+=vs,100,"Группа продажи",Normal,SalesGroup,false,SalesGroupSClass);
  end;
  EditField(h,v+=vs,100,"Язык",Normal,LangCode,false,LangSClass);
  if (StandardHansa==false) then begin
    EditField(h,v+=vs,100,"Ограничение клиента",Normal,CanUseOS,false,SetSClass);
  end;
  EditField(h,v+=vs,100,"Кода контакта",Normal,CustCode,false,ContactCUSClass);
//  EditField(h,v+=vs,100,"Discount Password",Normal,OldPassWord,false,0);
  if (StandardHansa==false) then begin
    ButtonFrame(h2,v=20,165,3,"Ограниченный доступ");
    RadioButton(h2,v,kLimitedAccessNoLimitation,0,"без ограничений",limitedAccess);
    RadioButton(h2,v+=16,kLimitedAccessGroupOnly,0,"только группа",limitedAccess);
    RadioButton(h2,v+=16,kLimitedAccessUserOnly,0,"только пользователь",limitedAccess);
  end;
if (HansaWorld) then begin
  ButtonFrame(h2,v+=40,195,4,"Тип пользователя");
  RadioButton(h2,v,0,kTypeOfUserNamed,"Именнованный",TypeOfUser);
  RadioButton(h2,v+=16,kTypeOfUserConcurrent,0,"Конкурентный",TypeOfUser);
  RadioButton(h2,v+=16,kTypeOfUserBusinessCommunicator,0,"Business Communicator (named)",TypeOfUser);
  RadioButton(h2,v+=16,kTypeOfUserTimekeeper,0,"Контролер времени",TypeOfUser);
  CheckBox(h2,v+=25,0,"Срок действия пароля не ограничен",PasswordNeverExpires);
end;
  Pict_Field(-175,8,-5,178,"");
  if (GuiType==kGuiCocoa) then begin
    PushButton(-160,182,-80,202,ToolImagePicker,"Доб. изобр");
  end;

  EditField(h, v+=vs, 250, "Список допуст. счетов", Normal, ValidAccList, false, AccSClass);
  EditField(h, v+=vs, 250, "Список допуст. прайсов", Normal, ValidPriceList, false, PLDefSClass);
  EditField(h, v+=vs, 250, "Список допуст. складов", Normal, ValidLocList, false, LocationSClass);
  EditField(h, v+=vs, 250, "Список способов оплаты", Normal, ValidPMList, false, PMSClass);
  EditField(h, v+=30, 250, "E-Mail", Normal, EMail, false, 0);
  CheckBox(h, v+=25, 0, "ПЗП: Подпись председателя РС", Cb1);
  CheckBox(h, v+=vs, 0, "ПЗП: Готова к выдаче", Cb2);
  CheckBox(h, v+=vs, 0, "ПЗП: Подпись руководителя под ЗРС", Cb3);

//  CheckBox(h2,v+=25,0,"Allow FTP Access",FTPLogin);
//  CheckBox(h2,v+=vs,0,"Only Voice Login",OnlyVoiceLogin); // No code for this

  Tile(tilenr,150,false,tilenr,LastOrdNr);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6),65,"№ счетов кл.",Normal,LastOrdNr,false,0);
  EditField(h,v+=vs,65,"№ отгрузки",Normal,LastShipNr,false,0);
  EditField(h,v+=vs,65,"№ сч/ф кл.",Normal,LastInvNr,false,0);
  EditField(h,v+=vs,65,"№ поступлений",Normal,LastPurNr,false,0);
  EditField(h,v+=vs,65,"№ прих. орд.",Normal,LastCLInNr,false,0);
  EditField(h,v+=vs,65,"№ сч/ф на нал.",Normal,LastIVCashNr,false,0);
  if (StandardHansa==false) then begin
    EditField(h,v+=vs,65,"Счет ресторана",Normal,LastRestAccNr,false,0);
  end;
//  EditField(h,v+=vs,100,"Official Inv. No.",Normal,LastOfficialSerNr,false,0);
  EditField(h3,v=vm,65,"№ платежей кл.",Normal,LastPayNr,false,0);
  EditField(h3,v+=vs,65,"№ записей опер.",Normal,LastTRNr,false,0);
  EditField(h3,v+=vs,65,"№ сч/ф пост.",Normal,LastVINr,false,0);
  EditField(h3,v+=vs,65,"№ платежей пост.",Normal,LastOPNr,false,0);
  EditField(h3,v+=vs,65,"№ заказа пост.",Normal,LastPONr,false,0);
  EditField(h3,v+=vs,65,"№ расход. орд.",Normal,LastCLOutNr,false,0);
  EditField(h3,v+=vs,120,"Лич. код",Normal,IDCode,false,0);

  Tile(tilenr,170,false,tilenr,Bonus);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6),65,"Премия",Normal,Bonus,true,0);
  EditField(h3,v,120,"Ссылка",Normal,CurOurContact,false,0);
  if (StandardHansa==false) then begin
    EditField(h3+260,v,-20,"Миним. прейскурант",Normal,MinPLCode,false,PLDefSClass);
  end;
  EditField(h,v+=vs,65,"Склад",Normal,Location,false,LocationSClass);

/*
  EditField(h3,v,120,"Отдел",Normal,Department,false,DepSClass);
  if (StandardHansa==false) then begin
    EditField(h,v+=vs,65,"Склад обслуживания",Normal,ServLocation,false,LocationSClass);
    EditField(h3,v,120,"Телефон 1",Normal,Phone1,false,0);
    EditField(h,v+=vs,65,"Склад резерв. заказа",Normal,ReservLocation,false,LocationSClass);
  end else begin
    EditField(h,v+=vs,120,"Телефон 1",Normal,Phone1,false,0);   // From dict
  end;
  EditField(h3,v,120,"Телефон 2",Normal,Phone2,false,0);
  if (StandardHansa==false) then begin
    EditField(h,v+=vs,-20,"Доступ резерв. заказа",Normal,ReservLocAccess,false,ReservLocAccessSClass);
  end;
  EditField(h,v+=vs,-20,"E-mail",Normal,emailAddr,false,0);
*/

  EditField(h3,v,80,"Отдел",Normal,Department,false,DepSClass);
  EditField(h3 + 180,v,80,"Объект",Normal,PersObjx,false,ObjSClass);
  EditField(h,v+=vs,65,"Счет",Normal,PersAcc,false,AccSClass);
  EditField(h3,v,80,"Оклад",Normal,BankAcc,True,0);
  EditField(h3 + 180,v,80,"% плана",Normal,Phone2,True,0);
  EditField(h,v+=vs,120,"Банк",Normal,BankName,false,BankSClass);
  EditField(h3,v,80,"Kод мотив.",Normal,StateJob,false,0);
  EditField(h3+180, v, 80, "Отв. за мотив.", Normal, MotivRespCode, False, UserSClass); //04.09.12 INAU
  EditField(h,v+=vs,100,"Телефон 1",Normal,Phone1,false,0);
  EditField(h3,v,80,"Прем.фонд",Normal,BonusFound,True,0);
  EditField(h3 + 180,v,80,"Kоэф.мотив.",Normal,MotiveCoeff,True,0);
//05.05.10 INAU
  EditField(h3,v+=vs,80,"Сч.мотив.деб.",Normal,MotiveDebAcc,False,AccSClass);
  EditField(h3+180,v,80,"Сч.мотив.кред.",Normal,MotiveCredAcc,False,AccSClass);

  EditField(h,v+=vs,-20,"Допустимые склады",Normal,emailAddr,false,0);
  EditField(h,v+=vs,-20,"Спецификация",Normal,Spec,false,0);
  EditField(h,v+=vs,-20,"Комментарий",Normal,Comment,false,0);
//  EditField(h,v+=vs,65,"Expense A/C",Normal,CostAcc,false,AccSClass);

  EditField(h, v+=vs, 100, "Код должности", Normal, VPositionCode, false, VPositionSClass);
  EditField(h, v+=vs, 100, "Код структ. подр.", Normal, StPodrCode, false, StPodrSClass);
  EditField(h, v+=vs, 65, "Лимит подотчета", Normal, PPLimit, true, 0);

/*
  Tile(tilenr,50,false,tilenr,PersAcc);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6),65,"Счет",Normal,PersAcc,false,AccSClass);
  EditField(h3,v,120,"Объект",Normal,PersObjx,false,ObjSClass);
  EditField(h,v+=vs,65,"Код сорт.",Normal,SortCode,false,0);
  EditField(h3,v,120,"Bank A/C",Normal,BankAcc,false,0);
  EditField(h3,v+=vs,-20,"Bank Name",Normal,BankName,false,BankSClass);
//  EditField(h,v+=vs,65,"Expense A/C",Normal,CostAcc,false,AccSClass);
*/

  if (StandardHansa==false) then begin
    Tile(tilenr,170,true,tilenr,JobGroup);  tilenr = tilenr + 1;
    EditField(h,vm=(v=6),55,"Группа работ",Normal,JobGroup,false,EGSClass);
    EditField(h,v+=vs,100,"Наимен. работы",Normal,Job,false,0);
    EditField(h,v+=vs,80,"Стоимость часа",Normal,CostPrHour,false,0);
    EditField(h,vm=(v+=vs),80,"Цена за час",Normal,PricePrHour,false,0);
    EnterSkip(Math);
    CheckBox(h2,v=20,0,"Использовать только коды",DisAllowOther);
  //  CheckBox(h2,v,0,"Limited Access",limitedAccess);
    v = v+50;
    MatrixBegin(h-50,v=(vm+40),h+350,-7,-,99);
    MatCol(1,24,"Код",0,Code,false,0);
    MatCol(1,110,"Проект",0,PRCode,false,PRSClass);
    MatCol(1,200,"Комментарий",0,Comment,false,0);
    EndMatrix;

    Tile(tilenr,30,false,tilenr,WebConf);  tilenr = tilenr + 1;
    EditField(h,vm=(v=6),65,"Web-конференция",Normal,WebConf,true,0);
    EditField(h3,v,65,"Первая страница Web",Normal,WebStartPage,false,0);

    Tile(tilenr,50,false,tilenr,Supervisor);  tilenr = tilenr + 1;
    v = 6;
    EditField(h,vm=v,80,"Руководитель",Normal,Supervisor,false,UserSClass);
    EditField(h,v+=20,80,"Дата создания",ViewOnly,DateCreated,false,0);
    CheckBox(h2,v=vm,0,"Требовать ввода времени",ForceTimeEntry);

    ColourPushButton(h2, v + 16, h2 +100, v + 36, "ViewConfidentNote", "Xарактеристика", 0);

  end;

  Tile(tilenr,210,false,tilenr,LeadingZDay);  tilenr = tilenr + 1;
  h = 70; h1 = h + 210; h2 = h + 330;

  if (GuiType==kGuiCocoa) then begin
    CheckBox(h,v,0,"Использовать настройки пользователя",UserEditCtlf);
  end else begin
    StaticText(190,v+=vs,"Стиль окна",true);
    DropDownMenu(200,v=6,282,"WindowType",320);
    CheckBox(h,v+=20,0,"Использовать настройки пользователя",UserEditCtlf);
  end;
  ButtonFrame(h,vm=(v+=42),200,5,"Формат даты");
  RadioButton(h,v,0,0,"месяц, день, год",DateOrder);
  RadioButton(h,v+=16,1,0,"день, месяц, год",DateOrder);
  RadioButton(h,v+=16,2,0,"год, месяц, день",DateOrder);
  if (StandardHansa==false and IsSberbankProduct==false) then begin
    RadioButton(h,v+=16,m4_hijri,0,"Hijri",DateOrder); // We have some enum already in BCD that goes from 0 to 5..
    RadioButton(h,v+=16,m4_persian_date,0,"Persian",DateOrder);
  end;
  EndFrame;
  CheckBox(h,v+=24,0,"Две цифры даты",LeadingZDay);
  CheckBox(h1,v,0,"Выводить разделитель тысяч",thousSepf);
  CheckBox(h,v+=16,0,"Две цифры месяца",LeadingZMonth);
  CheckBox(h,v+=16,0,"Четыре цифры года",LeadingCentury);
  EditField(h2,v=vm,20,"Разделитель даты",Normal,DateSep,false,0);
  EditField(h2,v+=20,20,"Разделитель целых",Normal,DecimalPt,false,0);
  EditField(h2,v+=20,20,"Разделитель тысяч",Normal,ThousandSep,false,0);
  SpecialMenu("Создать объект",'o',1,"CreateObjUserDsm");
  EndWindow;


//=============================================== IVVc
  WindowBegin("Счет-фактура клиенту",IVDClass,CGview,-);
  Sizeable(-1,-1,0,0);
  UseView(IVVc);
  ActiveFieldOnNew("CustCode");
  SetWRect(20,80,750,460);
  CommunicateButton;
  Tile(0,90,false,"",CustCode);
  EditField(75,vm=(v=6),95,"Номер",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Клиент",Normal,CustCode,false,CUSClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Наим.",Normal,Addr0,false,0);

  EditField(h=270,v+=20,80,"Номер 1C",Normal,Num1C,false,0);
  CheckBox(h = -120,v,0,"Самовывоз",Pickup);

  if (StandardHansa==false) then begin
    if (HasLocalization("FIN")) then begin
      EditField(h,vm=(v+=20),180,"Payment Ref",ViewOnly,CalcFinRef,false,0);
    end else begin
      EditField(h,vm=(v+=20),135,"Офиц. Нo.",Normal,OfficialSerNr,false,LegalInvNrSClass);
    end;
  end else begin
    v = v + 20;
    vm = v;
  end;
  CheckBox(h4=-100,v,0,"OK",OKFlag);

  TileButton(1,"Сроки");
  TileButton(2,"Товары");
  TileButton(3,"Валюта");
  TileButton(4,"Условия отгр.");
  TileButton(5,"Идентификаторы");
  TileButton(6,"Прайс-лист");
  TileButton(7,"Адрес сч/ф");
  TileButton(8,"Адрес дост.");
  TileButton(9,"История"); //26.11.09 INAU

  Tile(1,120,false,"1",InvDate);
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Дата с/ф",Normal,InvDate,false,PasteCurDate);
  EditField(h1,v+=vs,25,"Условия оплаты",Normal,PayDeal,false,PDSClass);//PDMSClass);
  EditField(h1,v+=vs,82,"Дата оплаты",Normal,PayDate,false,PasteCurDate);

  EditField(h1, v+=vs, 82, "Дог. срок оплаты", Normal, PlanPayDate, false, PasteCurDate); //14.06.13 INAU

  EditField(h1,v+=vs,82,"Дата операции",Normal,TransDate,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Дата оказ. услуги",Normal,ServiceDelDate,false,PasteCurDate);
  EditField(h2,v=vm,135,"Ответственный",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Внимание",Normal,ClientContact,false,ContactSClass);

  EnterSkip("Objects");
  EditField(h3+50,v,50,"Баллы",ViewOnly,Ball,True,0);

  EditField(h2,v+=vs,135,"Объекты",Normal,Objects,false,ObjSClass);

  EditField(h2, v+=vs, 50, "Срок изменен", ViewOnly, PlanPayUser, false, 0); //14.06.13 INAU
  EditField(h3+150,v,83,"Дата выхода со склада",Normal,DateFromStock,false,PasteCurDate);

  EditField(h2,v+=vs,135,"Ответственный",Normal,RefStr,false,0);
  EditField(h2,v+=vs,135,"№ счета клиенту",Normal,CustOrdNr,false,0);

  EditField(h3,v,135,"№ ТТН",ViewOnly,TTNr,false,0);

  EditField(h3,v=vm,80,"Продавец",Normal,SalesMan,false,UserSClass);
  if (StandardHansa) then begin
    EditField(h3,v+=vs,80,"Склад",Normal,Location,false,LocationSClass);
  end else begin
    EditField(h3,v+=vs,80,"Проект",Normal,PRCode,false,0);
  end;
  EditField(h3,v+=vs,80,"Причина кр.сч/ф",Normal,Reason,false,StandProblemsSClass);
  if (HasLocalization("MEX")) then begin
    EditField(h3,v+=vs,80,"Способ оплаты",Normal,PMCode,false,PMSClass);
  end;
  if (HasLocalization("BRA")) then begin
    EditField(h3,v+=vs,80,"Invoice type",Normal,BrazilEInvType,false,BrazilEInvTypeSClass);
  end;
  if (HasLocalization("BOL,HRV")) then begin
    EditField(h3,v+=vs,130,"Tax Seal",Normal,TaxAdminServSeal,false,0);
  end;
  if (HasLocalization("MEX")) then begin
    EditField(h3,v+=vs,80,"No. Pay. Acc.",Normal,PayAccNo,false,0);
  end;
  if (HasLocalization("RUS")) then begin
    EditField(h3,v+=vs,-20,"К пл/рсч док-ту",Normal,ReceiptInfo,false,0);
  end;
  CheckBox(h4,v=6,0,"Спорные",DisputedFlag);
  if (StandardHansa) then begin
    CheckBox(h4,v+=16,0,"Обновить склад",UpdStockFlag);
  end;
  EnterSkip(Math);
  Tile(2,220,true,"2",Math);
  //  CheckBox(20,-20,0,"OK",OKFlag);
  if (CompileType!=ctiPhone) then begin

    if SetInSet(Usr.AccessGroup, "ADMIN,FINO,FINOA,TSLOBODENY") then
      begin
      EditField(55,-41,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
      end
    else
      begin
      EditField(55,-41,50,"Валюта",ViewOnly,CurncyCode,false,CurncyCodeSClass);
      end;

    if (UseTaxTemplatesforTaxCalc==false) then begin
      if (UserCanAction("ViewCostPrice",true)) then begin
      //EditField(160,-41,70,"GP %",Normal,GPProc,true,0);
        EditField(160,-21,70,"Итого прибыль",ViewOnly,TotGP,true,0);
      end;
      EditField(290,-41,70,"Налог",ViewOnly,TAX2Sum,true,0);
      EditField(290,-21,70,"Вн. нал.",ViewOnly,TAX1Sum,true,0);
      EditField(410,-41,95,"НДС",ViewOnly ,Sum3,true,0);
    end else begin
      if (UserCanAction("ViewCostPrice",true)) then begin
      //EditField(290,-41,70,"GP %",Normal,GPProc,true,0);
        EditField(290,-21,70,"Итого прибыль",ViewOnly,TotGP,true,0);
      end;
      EditField(410,-41,95,"Налог",ViewOnly ,Sum3,true,0);
    end;
    EditField(410,-21,95,"База",ViewOnly,BaseSum4,true,0);
    EditField(-150,-41,95,"Подытог",ViewOnly ,Sum1,true,0);
    EditField(-150,-21,95,"Итого",ViewOnly ,Sum4,true,0);
  end else begin
    EditField(55,-41,80,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
    EditField(55,-21,80,"НДС",ViewOnly ,Sum3,true,0);
    EditField(-120,-41,80,"Вн. нал.",ViewOnly,TAX1Sum,true,0);
    EditField(-120,-21,80,"Итого",ViewOnly ,Sum4,true,0);
  end;
  v = 24;
  MatrixBegin(4,v,-50,-49,-,200);
  MatTypedRow(stp);
  MatOverStrike(ovst);
  Flip(0);
  MatCol(t=kInvoiceRowTypeNormal,32,"Товар",0,ArtCode,false,ForSaleINSClass);
  //  MatCol(t,94,"Var",0,VARList,true,VARSClass);
  //  MatCol(t,144,"Qty",0,Quant,true,0);
  if (HasVarieties) then begin
    MatCol(t,94,"Кол-во",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Кол-во",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,32,"Товар",0,ArtCode,false,ForSaleINSClass);
  if (HasVarieties) then begin
    MatCol(t,94,"Кол-во",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Кол-во",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
  MatText(t=kInvoiceRowTypeCredit,32,"Кредитовать сч/ф",true);
  MatCol(t,208,"",0,OrdRow,false,ARSClass);
  MatCol(t,-216,"",0,Spec,false,0);//MatText(t);
  MatText(t=kInvoiceRowTypeDebit,32,"Дебетовать сч/ф",true);
  MatCol(t,208,"",0,OrdRow,false,0);
  MatCol(t,-216,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeInterest,32,"Пеня",true);
  MatCol(t,98,"",0,ArtCode,false,0);
  MatCol(t,153,"",0,Quant,true,0);
  MatCol(t,188,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeDownpayment,32,"Авансовый платеж",true);
  MatColTL(t,122,"",0,-1,ViewOnly,0,ArtCode,true,0);
  MatColTL(t,188,"",0,-1,ViewOnly,0,Quant,true,0);
  MatCol(t,238,"",0,Spec,false,0);
  MatColTL(t,-170,"",0,-1,Normal,0,Sum,true,0); //?? TL?
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-100,"",0,SalesAcc,false,AccSClass);
    MatCol(t,-54,"",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-70,"",0,SalesAcc,false,AccSClass);
    MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  end;
  MatText(t=kInvoiceRowTypePrepayment,32,"Номер предоплаты",true);
  MatCol(t,170,"",0,CUPNr,true,ARPay3SClass);
  MatCol(t,-300,"",0,BasePrice,false,0);
  MatCol(t,-170,"",0,Price,true,0);// Price holds the #VAT# sum, Recipe holds the date of prepaym. BasePrice holds amount in base 1, TAX1Reb holds TAX1Sum
  MatCol(t,-100,"",0,Sum,true,0);
  MatText(t=kInvoiceRowTypeLoan,32,"Займ",true);
  MatCol(t,98,"",0,CuAccCode,true,CuAccSClass);
  MatCol(t,-350,"",0,SalesAcc,true,AccSClass);
  MatCol(t,-230,"",0,Objects,false,0);
  MatCol(t,-110,"",0,Sum,true,0);
  MatCol(t,-30,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeLoanInterest,32,"% займа",true);
  MatCol(t,98,"",0,CuAccCode,true,CuAccSClass);
  MatCol(t,-350,"",0,SalesAcc,true,AccSClass);
  MatCol(t,-230,"",0,Objects,false,0);
  MatCol(t,-110,"",0,Sum,true,0);
  MatCol(t,-30,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeUpdateMark,32,"Подпись",false);
  MatColTL(t,94,"Подписать",0,-1,ViewOnly,0,VoidedSign,false,0);
  MatCol(t,144,"Описание",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeVoid,32,"Отменить",false);
  MatColTL(t,65,"Подпись",0,-1,ViewOnly,0,VoidedSign,false,0);
  MatCol(t,100,"Товар",0,ArtCode,false,ForSaleINSClass);
  if (HasVarieties) then begin
    MatCol(t,150,"К-во",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,150,"К-во",0,Quant,true,0);
  end;
  MatCol(t,190,"Цена",0,Price,true,0);
  MatCol(t,250,"Описание",0,Spec,false,0);
  MatCol(t,-195,"Сер. №",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-110,"%",0,vRebate,true,0);
  MatCol(t,-80,"Сумма",0,Sum,true,0);
  MatText(t=kInvoiceRowTypeSubtotal,32,"Итого",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatColTL(t,-140,"Сумма",0,-1,ViewOnly,0,Sum,true,0);
  //  MatCol(t,-70,"Cost",0,Cost,true,0);
  MatText(t=kInvoiceRowTypeHidden,32,"Эта строка и все последующие не выводятся на печать",false);
  MatText(t=kInvoiceRowTypeCorrection,32,"K",true);
  MatCol(t,45,"Товар",0,ArtCode,false,ForSaleINSClass);
  MatCol(t,91,"Кво",0,Quant,true,0);
  MatText(t=kInvoiceRowTypeRetention,32,"Удержание",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatColTL(t,-210,"SalesAcc",0,-1,0,0,SalesAcc,false,AccSClass);
  MatColTL(t,-110,"Сумма",0,-1,0,0,Sum,true,0);
  MatCol(t,-30,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeGiftVoucherSold,32,"ПС",true);
  MatCol(t,58,"",0,GCNr,false,GCSClass);
  MatCol(t,-416,"",0,Spec,false,0);
  MatCol(t,-84,"Сумма",0,Sum,true,0);
  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeGiftVoucherPayment,32,"ПСП",true);
  MatCol(t,58,"",0,GCNr,false,GCSSClass);
  MatCol(t,-316,"",0,Spec,false,0);
  MatCol(t,-84,"Сумма",0,Sum,true,0);
  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeCashPayment,32,"Налич.",true);
  MatCol(t,94,"Сумма",0,Sum,true,0);
  MatCol(t,198,"Способ оплаты",0,PayMode,true,PMSClass);
  MatCol(t,250,"Спец.",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeLoyaltyPointsPayment,32,"LOYPA",true);
  MatCol(t,68,"Сумма",0,Sum,true,0);
  MatCol(t,108,"Баллы",0,Points,true,0);
  MatCol(t,148,"Валюта",0,CurncyCode,true,CurncyCodeSClass);
  MatCol(t,-280,"Спец.",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeLoyaltyPointsBonus,28,"LOYBO",true);
  MatCol(t,68,"Баллы",0,Points,true,0);
  MatCol(t,141,"Спец.",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeCreditCardPayment,32,"CC",true);
  MatCol(t,94,"Сумма",0,Sum,true,0);
  MatCol(t,198,"Способ оплаты",0,PayMode,true,PMSClass);
  MatCol(t,250,"Спец.",0,Spec,false,0);
  MatCol(t,-280,"",0,CreditCard,false,CreditCardSClass);
  MatCol(t,-84,"Авторизация",0,AuthorizationCode,false,0);
  MatText(t=kInvoiceRowTypeHeader,32,"Заголовок",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatText(t=kInvoiceRowType18,28,"Зарезерв.",true); // Don't use this number
  MatCol(t,100,"",0,Spec,false,0);
  MatText(t=kInvoiceRowType19,28,"Зарезерв.",true); // Don't use this number
  MatCol(t,100,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypePerceptionTax,32,"Налоговые сборы",true);
  MatCol(t,132,"",0,CuAccCode,false,0);
  MatCol(t,252,"",0,TAX2Prc,true,0);
  MatCol(t,292,"",0,Sum,true,0);
  MatCol(t,372,"",0,SalesAcc,false,AccSClass);
  MatCol(t,452,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeWithholdingTax,32,"Удерживаемый налог",true);
  MatCol(t,132,"",0,WHTax,false,WHTaxSClass);
  MatCol(t,172,"",0,SalesAcc,false,AccSClass);
  MatCol(t,292,"",0,Sum,true,0);
  MatCol(t,392,"",0,Spec,false,0);
  if (StandardHansa==false) then begin
    MatText(t=kInvoiceRowTypeMultiBuyDiscount,32,"Кампания",true);
  end;
  MatCol(t,152,"",0,MBRCode,false,0);
  MatCol(t,192,"",0,ArtCode,false,ForSaleINSClass);
  MatCol(t,-400,"",0,Spec,false,0);
  MatCol(t,-270,"",0,Quant,true,0);
  MatCol(t,-235,"",0,Price,true,0);
  MatCol(t,-135,"",0,vRebate,true,0);
  MatCol(t,-100,"",0,Sum,true,0);
  MatText(t=kInvoiceRowTypeDebtorsTransfer,32,"DBT TRSF",true);
  MatCol(t,94,"Spec",0,Spec,false,0);
  MatCol(t,-235,"Счет дебеторов",0,SalesAcc,false,0);
  MatCol(t,-135,"Сумма",0,Sum,true,0);
  MatCol(t,-30,"НДС",0,VATCode,false,0);

  /*
  MatText(t=kInvoiceRowTypePreviousDownpayment,32,"Prev. Down Payment",true);
  MatColTL(t,152,"",0,-1,ViewOnly,0,CUPNr,true,0);
  MatColTL(t,222,"",0,-1,ViewOnly,0,ServiceDelDate,true,0);
  MatColTL(t,-200,"",0,-1,Normal,0,Price,true,0);
  MatColTL(t,-100,"",0,-1,Normal,0,Sum,true,0);
  */
  //t = 21 kInvoiceRowTypeChequePayment
  Flip(1);
  //  MatCol(t=kInvoiceRowTypeNormal,194,"Description",0,Spec,false,0);
  t=kInvoiceRowTypeNormal;
  MatCol(t,144,"Описание",0,Spec,false,0);
  MatCol(t,-235,"Цена",0,Price,true,0);
  //  MatColTL(t,-235,"",0,M45Val,Normal,0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Сумма",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  MatCol(t,-235,"Цена",0,Price,true,0);
  //  MatColTL(t,-235,"",0,M45Val,Normal,0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Сумма",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeInterest,-260,"",0,OrdRow,true,0);
  MatCol(t,-235,"",0,BasePrice,true,0);
  MatCol(t,-135,"",0,vRebate,true,0);
  MatCol(t,-100,"",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Описание",0,Spec,false,0);
  MatCol(t,-235,"Цена",0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Сумма",0,Sum,true,0);
  Flip(2);
  MatCol(t=kInvoiceRowTypeNormal,144,"Описание",0,Spec,false,0);
  MatCol(t,-360,"Счет",0,SalesAcc,false,AccSClass);
  if (StandardHansa==false) then begin
    MatCol(t,-310,"Буд.пер",0,PeriodCode,false,AutSimPerSClass);
  end;
  MatCol(t,-255,"Склад",0,Location,false,LocationSClass);
  MatCol(t,-180,"Место",0,PosCode,false,UsedPosSClass);
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-144,"Объекты",0,Objects,false,ObjSClass);
    MatCol(t,-70,"НДС",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-124,"Объекты",0,Objects,false,ObjSClass);
    MatCol(t,-30,"НДС",0,VATCode,false,VATCodeSClass);
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  MatCol(t,-360,"Счет",0,SalesAcc,false,AccSClass);
  if (StandardHansa==false) then begin
    MatCol(t,-310,"Буд.пер",0,PeriodCode,false,AutSimPerSClass);
  end;
  MatCol(t,-255,"Склад",0,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
    MatCol(t,-180,"Место",0,PosCode,false,UsedPosSClass);
  end;
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-144,"Объекты",0,Objects,false,ObjSClass);
    MatCol(t,-70,"НДС",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-124,"Объекты",0,Objects,false,ObjSClass);
    MatCol(t,-30,"НДС",0,VATCode,false,VATCodeSClass);
  end;
  MatCol(t=kInvoiceRowTypeInterest,-70,"",0,SalesAcc,false,AccSClass);
  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  //  MatCol(t=kInvoiceRowTypePrepayment,-224,"",0,SalesAcc,false,AccSClass);
  //  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Описание",0,Spec,false,0);
  MatCol(t,-250,"Счет",0,SalesAcc,false,AccSClass);
  if (StandardHansa==false) then begin
    MatCol(t,-170,"Буд.пер.",0,PeriodCode,false,AutSimPerSClass);
  end;
  MatCol(t,-104,"Объекты",0,Objects,false,ObjSClass);
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-35,"Н-код",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
  	MatCol(t,-30,"НДС",0,VATCode,false,VATCodeSClass);
  end;
  Flip(3);
  t=kInvoiceRowTypeNormal;
  MatCol(t,144,"Описание",0,Spec,false,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-380,"Цена",0,Price,true,0);
    MatCol(t,-315,"%",0,vRebate,true,0);
    MatCol(t,-280,"Ст.в осн.2",0,BasePriceB2,true,0);
    MatCol(t,-210,"Стоим-ть",0,BasePrice,true,0);
    MatCol(t,-140,"Прибыль",0,rowGP,true,0);
    MatCol(t,-70,"FIFO",0,FIFO,true,0);
  end else begin
    MatCol(t,-235,"Цена",0,Price,true,0);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Сумма",0,Sum,true,0);
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-380,"Цена",0,Price,true,0);
    MatCol(t,-315,"%",0,vRebate,true,0);
    MatCol(t,-280,"Ст.в осн.",0,BasePriceB2,true,0);
    MatCol(t,-210,"Стоим-ть",0,BasePrice,true,0);
    MatCol(t,-140,"Прибыль",0,rowGP,true,0);
    MatCol(t,-70,"FIFO",0,FIFO,true,0);
  end else begin
    MatCol(t,-235,"Цена",0,Price,true,0);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Сумма",0,Sum,true,0);
  end;
  MatCol(t=kInvoiceRowTypeCorrection,144,"Описание",0,Spec,false,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-315,"Цена",0,Price,true,0);
    MatCol(t,-245,"%",0,vRebate,true,0);
    MatCol(t,-210,"Стоим-ть",0,BasePrice,true,0);
    MatCol(t,-140,"Прибыль",0,rowGP,true,0);
    MatCol(t,-70,"FIFO",0,FIFO,true,0);
  end else begin
    MatCol(t,-235,"Цена",0,Price,true,0);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Сумма",0,Sum,true,0);
  end;
  Flip(4);
  t=kInvoiceRowTypeNormal;
  MatCol(t=kInvoiceRowTypeNormal,144,"Описание",0,Spec,false,0);
  MatCol(t,-370,"Продавцы",0,Salesmen,false,UserSClass);
  MatCol(t,-300,"Серийный номер",0,SerialNr,false,SerialNrSClass);
//  MatCol(t,-250,"Main Serial No.",0,MotherNr,true,0);
  MatCol(t,-220,"П.Фактор",0,PriceFactor,true,0);
  MatCol(t,-170,"Структура",0,Recepy,false,RecSClass);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-70,"FIFO",0,FIFORowVal,true,0);
  end else begin
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  MatCol(t,-310,"Сер. №",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-240,"Фактор",0,PriceFactor,true,0);
  MatCol(t,-180,"Структура",0,Recepy,true,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-110,"FIFO",0,FIFORowVal,true,0);
  end else begin
  end;
  MatCol(t,-40,"Коэф.",0,Coefficient,true,0);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Описание",0,Spec,false,0);
  MatCol(t,-310,"Сер. №",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-240,"Фактор",0,PriceFactor,true,0);
  MatCol(t,-180,"Структура",0,Recepy,true,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-110,"FIFO",0,FIFORowVal,true,0);
  end else begin
  end;
  MatCol(t,-80,"",0,MotherArtCode,false,0);
  MatCol(t,-40,"",0,RecipeQuant,false,0);
  //  MatCol(t,-40,"Coeff",0,Coefficient,true,0);
  Flip(5);
  t=kInvoiceRowTypeNormal;
  MatCol(t=kInvoiceRowTypeNormal,144,"Описание",0,Spec,false,0);
  MatCol(t,-315,"Ед-ца",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"К-во ед.",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Шир.",0,UnitXval,true,0);
  MatCol(t,-160,"Выс.",0,UnitYval,true,0);
  MatCol(t,-120,"Глуб.",0,UnitZval,true,0);
  MatCol(t,-80,"Цена ед-ц",0,UnitFactPrice,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  MatCol(t,-315,"Ед-ца",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"К-во ед.",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Шир.",0,UnitXval,true,0);
  MatCol(t,-160,"Выс.",0,UnitYval,true,0);
  MatCol(t,-120,"Глуб.",0,UnitZval,true,0);
  MatCol(t,-80,"Цена ед-ц",0,UnitFactPrice,true,0);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Описание",0,Spec,false,0);//New Row Type..
  MatCol(t,-315,"Ед-ца",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"К-во ед.",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Шир.",0,UnitXval,true,0);
  MatCol(t,-160,"Выс.",0,UnitYval,true,0);
  MatCol(t,-120,"Глуб.",0,UnitZval,true,0);
  MatCol(t,-80,"Цена ед-ц",0,UnitFactPrice,true,0);
  Flip(6);
  t = kInvoiceRowTypeNormal;
  MatCol(t,144,"Описание",0,Spec,false,0);
  MatCol(t,-390,"Код товара клиента",0,CustArtCode,false,CUINSClass);
  MatCol(t,-300,"Коэфф.",0,Coefficient,true,0);
  MatCol(t,-260,"Цен. фактор",0,PriceFactor,true,0);
  if (StandardHansa==false) then begin
    MatCol(t,-210,"История серв. контр.",0,CUServiceHistNr,false,0);
  end;
  MatCol(t,-130,"Кред. строка",0,CreditedRow,false,0);
//  MatCol(t,-70,"Налог на окр. ср.",0,RepaExVAT,true,0);

  MatCol(t,-70,"Баллы",0,BallRow,true,0);

  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  MatCol(t,-390,"Код товара клиента",0,CustArtCode,false,CUINSClass);
  MatCol(t,-300,"Коэфф.",0,Coefficient,true,0);
  MatCol(t,-260,"Цен. фактор",0,PriceFactor,true,0);
  if (StandardHansa==false) then begin
    MatCol(t,-210,"История серв. контр.",0,CUServiceHistNr,false,0);
  end;
  MatCol(t,-130,"Кред. строка",0,CreditedRow,false,0);
  MatCol(t,-70,"Налог на окр. ср.",0,RepaExVAT,true,0);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Описание",0,Spec,false,0);
  MatCol(t,-80,"Нал.на окр.среду",0,RepaExVAT,true,0);
  Flip(7);
  t = kInvoiceRowTypeNormal;
  if (GuiType!=kGuiiPhone) then begin
    MatCol(t,144,"Описание",0,Spec,false,0);
  end;
  MatCol(t,-240,"ГТД",0,CustomsNr,false,0);
  MatCol(t,-100,"Страна",0,CountryOfOrg,false,CountrySClass);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  MatCol(t,-240,"ГТД",0,CustomsNr,false,0);
  MatCol(t,-100,"Страна",0,CountryOfOrg,false,CountrySClass);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Описание",0,Spec,false,0);
  MatCol(t,-240,"ГТД",0,CustomsNr,false,0);
  MatCol(t,-100,"Страна",0,CountryOfOrg,false,CountrySClass);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 22;
  v = 18; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,6,"F");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,7,"G");
  Tile(3,70,false,"3",FrRate);
  vs = 20;

  if SetInSet(Usr.AccessGroup, "ADMIN,FINO,FINOA,TSLOBODENY") then
    begin
    ViewModeInt = Normal;
    end
  else
    begin
    ViewModeInt = ViewOnly;
    end;
  EditField(h=110,v=6,50,"Валюта",ViewModeInt,CurncyCode,false,CurncyCodeSClass);
  EditField(h,v+vs,50,"Основаня валюта 1",ViewModeInt,BaseRate1,true,0);
  EditField(h,v+(vs*2),50,"Основаня валюта 2",ViewModeInt,BaseRate2,true,0);
  EditField(h2=295,v,50,"Курс",ViewModeInt,FrRate,true,0);
  RateField(h3=360,v,50,":",ViewModeInt,"ToRateB1",true,h3+60,v+14,"Основаня валюта 1",false);
  RateField(h3,v+=vs,50,":",ViewModeInt,"ToRateB2",true,h3+60,v+14,"Основаня валюта 2",false);

  EditField(h2,v+=vs,50,"Валюта печати",Normal,AlienCurncy,true,CurncyCodeSClass);
  EditField(h3,v,50,":",ViewOnly,AlienToRateB1,true,0);

  Tile(4,110,false,"4",ShipDeal);
  vs = 20; h1 = 110; h2 = 310; h3 = 530; h4 = -100;
  EditField(h1,v=6,80,"Условия отгрузки",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h1,v+=vs,80,"Метод доставки",Normal,ShipMode,false,DMSClass);
  if (StandardHansa==false) then begin
    EditField(h1,v+=vs,80,"Маршрут",Normal,Sorting,false,DelRouteSClass);
    EditField(h1,v+=vs,80,"Склад",Normal,Location,false,LocationSClass);
    EditField(h1,v+=vs,80,"План. дата отпр.",Normal,PlanSendDate,false,PasteCurDate);
    EditField(h1,v+=vs,80,"План. время отпр.",Normal,PlanSendTime,false,PasteCurTime);
  end;
  EditField(h1,v+=vs,80,"Подразделение",Normal,BranchID,false,AllCUSClass);
  EditField(h2,v=vm,80,"Итого кол-во",ViewOnly,TotQty,true,0);
  EditField(h2,v+=vs,80,"Итого вес",ViewOnly,TotWeight,true,0);
  EditField(h2,v+=vs,80,"Итого объем",ViewOnly,TotVolume,true,0);
  EditField(h2,v+=vs,80,"Фрахт",Normal,FrPrice,true,0);
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,80,"План. дата приб.",Normal,PlanArrDate,false,PasteCurDate);
    EditField(h2,v+=vs,80,"План. время приб.",Normal,PlanArrTime,false,PasteCurTime);
    EditField(h2,v+=vs,80,"Трансп. комп.",Normal,FreightCode,false,FreightCompanySClass);
    CheckBox(h3,v=vm,0,"Обновить склад",UpdStockFlag);
    EditField(h3,v+=2*vs,80,"НДС фрахта",Normal,FrVATCode,true,VATCodeSClass);
    EditField(h3,v+=vs,80,"Код транс. Интр.",Normal,IntrastatTransCode,true,IntrastatTransCodeSClass);
    EditField(h3,v+=vs,80,"Глоб. № трансп.",Normal,GlobalTransportNr,false,0);
    EditField(h3,v+=vs,80,"Глоб. дата трансп.",Normal,GlobalTransportDate,false,PasteCurDate);
  end;

  Tile(5,170,false,"5",OrderNr);
  EditField(h1,v=vm,80,"Номер счета",ViewOnly,OrderNr,false,0);
  if (StandardHansa==false) then begin
    EditField(h1,v+=vs,80,"Зак.на обсл.",ViewOnly,SVONr,false,0);
    EditField(h1,v+=vs,80,"№ кред.договор.",ViewOnly ,CredManNr,false,0);
  end;
  EditField(h1,v+=vs,80,"Стат. сумма",Normal,StatVal,true,0);
  EditField(h1,v+=vs,80,"Время операции",Normal,TransTime,false,SetSClass);
  EditField(h1,v+=(2*vs),135,"Офиц. № 2",Normal,OfficialSerNr2,false,0);
  if (HasLocalization("BRA")) then begin
    EditField(h1,v+=vs,80,"Federal Service",Normal,FedServCode,false,FederalSerSClass);
  end;
  //  ColourPushButton(-100,v,-20,v+60,"TestIVDClassCardData","Test" & chr(10) & "CardData",4);
  //  SoftEditField(h3+50,v,100,"Control Code"  ,ViewOnly ,"TaxAuthIDCC",false,0,M4Str,60);
  if (StandardHansa==false) then begin
    EditField(h2,v=vm,135,"Налогов. орган",Normal,TaxAuthID,false,0);
    EditField(h2,v+=vs,135,"Контрольн. код",ViewOnly ,TaxAuthIDCC,false,0);
    EditField(h2,v+=vs,135,"CAE/CAEA",Normal,CAE,false,0);
    EditField(h2,v+=vs,135,"Срок дейст. CAEА",Normal,CAEExpiry,false,0);
    EditField(h2,v+=vs,70,"CAEA действ. с",ViewOnly,CAEAStartDate,false,0);
    EditField(h2+150,v,70,"До",ViewOnly,CAEAExpiryDate,false,0);
    EditField(h2,v+=vs,70,"CAEA действ. с",ViewOnly,CAEAStartDate,false,0);
    EditField(h2+150,v,70,"До",ViewOnly,CAEAExpiryDate,false,0);
    EditField(h2,v+=vs,135,"Статус",Normal,Status,false,SetSClass);
  end;
  //  EditField(h2,v+=vs,135,"E-Inv Exp. Date",ViewOnly,EInvExpDate,false,0);//Tx server
  //  EditField(h2,v+=vs,135,"E-Inv Exp. Qty",ViewOnly,EInvExpQty,false,0);
  CheckBox(h3=550,v=vm,0,"Без напоминаний",NoRemndrFlag);
  CheckBox(h3,v+=16,0,"Без пени",NoInterestFlag);
  CheckBox(h3,v+=16,0,"Без сборов",NoColectionFlag);
  CheckBox(h3,v+=16,0,"Информация о клиенте",ARonTR);
  CheckBox(h3,v+=16,0,"Не посылать как эл. сч/ф",NoEInvoice);
  if (StandardHansa==false) then begin
    CheckBox(h3,v+=16,0,"Фискальная сч/ф",FiscalFlag);
    CheckBox(h3,v+=16,0,"Счет себе",SelfBilling);
//    CheckBox(h3,v+=16,0,"Including VAT",InclVAT);
  end;
  //  CheckBox(h3,v+=16,0,"E-Invoice Exported",EInvExpFlag);
  Tile(6,150,false,"6",PriceList); vs = 20;
  EditField(h1,v=vm,80,"Прайс-лист",Normal,PriceList,false,PLDefSClass);
  EditField(h1,v+=vs,80,"Таблица сидок",Normal,RebCode,false,0);
  //  EditField(h1,v+=vs,80,"Disc. %",ViewOnly,DiscPerc,false,0);
  //  EditField(h1,v+=vs,80,"Disc. Amount",ViewOnly,DiscSum,false,0);
  EditField(h1,v+=vs,80,"Грузо-чатель",ViewOnly,OrgCust,false,0);
  if (StandardHansa==false) then begin
    EditField(h1,v+=vs,80,"Кредитная карта",Normal,CreditCard,false,CreditCardSClass);
    EditField(h1,v+=vs,80,"Авторизация",Normal,AuthorizationCode,false,0);
  end;
  EditField(h1,v+=vs,80,"Счет дебиторов",Normal,ARAcc,false,AccSClass);
  EditField(h1,v+=vs,-20,"Комментарий",Normal,InvComment,false,0);

  if (StandardHansa==false) then begin

    if (Usr.limitedAccess == 0) then
      begin
      ViewModeInt = Normal;
      end
    else
      begin
      ViewModeInt = ViewOnly;
      end;
    EditField(h2,v=vm,80,"Группа продажи",ViewModeInt,SalesGroup,true,0);

    EditField(h2,v+=vs,80,"Язык",Normal,LangCode,false,LangSClass);
  end else begin
    EditField(h2,v=vm,80,"Язык",Normal,LangCode,false,LangSClass);
  end;

  EditField(h2,v+=vs,80,"Комиссия",Normal,Commision,true,0);
  EditField(h2,v+=vs,80,"Итого вкл. ком.",ViewOnly,SumIncCom,true,0);
  EditField(h2,v+=vs,80,"Пеня",Normal,IntCode,true,IntSClass);
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,80,"Ориг №",Normal,CredInv,false,0);
    EditField(h3,v=vm,80,"Уровень напоминания",Normal,LastRemndr,false,0);
  end else begin
    EditField(h3,v=vm,80,"Org. No.",Normal,CredInv,false,0);   // From dict
    EditField(h3,v+=vs,80,"Уровень напоминания",Normal,LastRemndr,false,0);   // From dict
  end;
  EditField(h3,v+=vs,80,"Дата посл. напомин.",Normal,LastRemDate,false,PasteCurDate);
  if (StandardHansa==false) then begin
    EditField(h3,v+=vs,80,"Накопительная карта",Normal,LoyaltyCardNr,false,LoyaltyCardSClass);
  end;
  EnterSkip(Math);
  if (StandardHansa==false) then begin
    EditField(h3,v+=vs,80,"Прогр. лояльности",ViewOnly,LCMLevel,false,LCMemberLevelSClass);
    EditField(h3,v+=vs,80,"Накопительные баллы",ViewOnly,Points,true,0);
  end;
  if (HasTREO) then begin
    EditField(h3,v+=vs,80,"№ TREO",Normal,TREONr,false,0);
  end;
  Tile(7,250,false,"7",Addr1); vs = 20;
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Invoice"; end;
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "Адрес"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs, -20,label,Normal,InvAddr4,false,0);
  EditField(h,vm=(v+=vs),80,"Страна",Normal,InvCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin
    EditField(h2-89,v,232,"",ViewOnly,InvCountryName,false,0);
    h5 = -170;
    width = 150;
  end else begin
    h5 = -270;
    width = 135;
  end;
  EditField(h5,v,width,"Банк",Normal,BankCode,false,BankSClass);
  if (StandardHansa==false) then begin
    ButtonFrame(h3=h+4,v=(vm+=40),123,6,"Статус утверждения");
    RadioButton(h3,v,kAcceptanceStateNotRequired,0,"не обязательно",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"не начато",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"не запрошено",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStatePending,0,"в ожидании",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"утверждено",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"отклонено",AcceptanceStatus);
    v = VATZoneButtonsLabelsRUS(h3=290,v=vm,140,16);
  end else begin
    v = VATZoneButtonsLabelsRUS(h3=290,v=vm+40,140,16);
  end;
  EditField(h2=-170,v=vm,150,"Регион",Normal,Region,false,RegionSClass);
  EditField(h2,v+=vs,150,"ИНН",Normal,VATNr,false,0);
  EditField(h2,v+=vs,150,"GLN",ViewOnly,RecipientGLN,false,0);
  EditField(h2,v+=vs,150,"Телефон",Normal,Phone,false,0);
  EditField(h2,v+=vs,150,"Факс",Normal,Fax,false,0);
  Tile(8,170,false,"8",ShipAddr0); vs = 20;
  if (StandardHansa==false) then begin
    EditField(h1,v=6,80,"Код адреса",Normal,DelAddrCode,false,DelAddr3SClass);
    EditField(h1,v+=vs,-20,"Отгрузка",Normal,ShipAddr0,false,0);
  end else begin
    EditField(h1,v=6,-20,"Отгрузка",Normal,ShipAddr0,false,0);   // From dict
  end;
  EditField(h1,v+=vs,-20,"Адрес",Normal,ShipAddr1,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
  EditField(h1,v+=vs,80,"Страна",Normal,DelCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin
    EditField(h1+91,v,232,"",ViewOnly,DelCountryName,false,0);
  end;
  EditField(h2,v,150,"GLN доставки",ViewOnly,DelRecipientGLN,false,0);

  EditField(h,v+=vs,82,"Дата дост. (план)",ViewOnly,PlanDeliveryDate,false,PasteCurDate); //12.01.12 INAU
  EditField(h2,v,50,"Время доставки (план)",ViewOnly,PlanDeliveryTime,false,PasteCurTime); //12.01.12 INAU

  EnterSkip(InvDate);

  //Добавлено 26.11.09 INAU
  Tile(9,130,false,"9",LogNewUser);
  EditField(h=130,v=20,70,"Создал",ViewOnly,LogNewUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogNewDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogNewTime,false,0);
  EditField(h += 130,v,70,"Pаспечатал",Normal,PrintMan,false,UserSClass);
  EditField(h+=80,v,70,"",Normal,PrintDay,false,PasteCurDate);

  EditField(h=130,v=40,70,"Сохранил",ViewOnly,LogSaveUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogSaveDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogSaveTime,false,0);
  EditField(h += 130,v,70,"Получил",Normal,PostMan,false,UserSClass);
  EditField(h+=80,v,70,"",Normal,PostDay,false,PasteCurDate);

  EditField(h=130,v=60,70,"Закрыл (OK)",ViewOnly,LogOKUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogOKDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogOKTime,false,0);
  EditField(h += 130,v,70,"Принял",Normal,RetMan,false,UserSClass);
  EditField(h+=80,v,70,"",Normal,RetDay,false,PasteCurDate);

  EditField(h=130,v=80,70,"Aннулировал",ViewOnly,LogAnnulUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogAnnulDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogAnnulTime,false,0);
  EditField(h += 130,v,70,"Aрхив",Normal,ArchMan,false,UserSClass);
  EditField(h+=80,v,70,"",Normal,ArchDay,false,PasteCurDate);
  //==26.11.09

  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Статус счета-фактуры",'r',2,"IVInfoIVDsm");
    SpecialMenu("Статус товара",'I',0,"ItemStatusIVDsm");
    SpecialMenu("Открыть запись операции",'t',8,"OpenTRFromIV");
    SpecialMenu("Создать кредитовый счет-фактуру",' ',20,"CreateCreditNoteIVDsm");
    SpecialMenu("Добавить итого",' ',12,"SubTotalLineIVDsm");
    SpecialMenu("Связать с предоплатой",' ',4,"ConnectToPrepayIVDsm");
/*not working yet
    SpecialMenu("Создать e-mail",'m',23,"CreateMailFromIVDsm");
*/
  end else begin
    SpecialMenu("Статус товара",'I',0,"ItemStatusIVDsm");
    SpecialMenu("Поиск товара",'f',1,"ItemSearchDsm");
    SpecialMenu("Статус счета-фактуры",'r',2,"IVInfoIVDsm");
    SpecialMenu("Цены предыдущей продажи",' ',15,"IVLastSPrsm");
    SpecialMenu("Добавить строку заголовка",' ',12,"HeaderLineIVDsm");
    SpecialMenu("Добавить скрытую строку",' ',12,"HiddenLineIVDsm");
    if (HasLocalization("HRV")) then begin
      SpecialMenu("Add Cash Line",' ',12,"CashLineIVDsm");
      SpecialMenu("Add Credit Card Line",' ',12,"CreditCardLineIVDsm");
    end;
    SpecialMenu("Добавить налог на окружающую среду",' ',19,"RepaIVsm");
    if (StandardHansa==false) then begin
      SpecialMenu("Добавить удержание",' ',25,"RetentionLineIVDsm");
    end;
    SpecialMenu("Добавить итого",' ',12,"SubTotalLineIVDsm");
    if (HasApprovals) then begin
      SpecialMenu("Отправить для утверждения",' ',6,"IVSendforAcceptanceIVDsm");
      SpecialMenu("Отменить запрос на  утверждение",' ',2,"CancelApprovalRequestDsm");
    end;
    if (GuiType==kGuiiPhone) then begin
      SpecialMenu("Подписать",' ',10,"SignIVDsm");
    end;
    SpecialMenu("Пересчитать в осн. вал.1",' ',14,"SwitchToBase1IVDsm");
    SpecialMenu("Связать с предоплатой",' ',4,"ConnectToPrepayIVDsm");
    SpecialMenu("Пересчитать скидку",' ',11,"RecalcDiscountIVDsm");
    SpecialMenu("Пересчитать вес и объем",' ',10,"RecalcWeightIVDsm");
    SpecialMenu("Обновить товары валютного прейскуранта",' ',5,"UpdatePricesIVDsm");
    SpecialMenu("Распечатать кассовый ордер",' ',7,"PrintCashInOutIVDsm");
    if (HasLocalization("PRT")==false) then begin
    SpecialMenu("Распечатать проформу счета-фактуры",' ',3,"PrintProformaIVDsm");
    end;
    if (StandardHansa==false) then begin
      SpecialMenu("Отправить на фискальный принтер",' ',19,"PrintToFiscPrntIVDsm");
      SpecialMenu("Платёж кредитной картой",' ',22,"CCPayIVDsm");
      SpecialMenu("Редактировать платежи",' ',24,"EditInstalmentIVDsm");
  	end;
  	SpecialMenu("Отправить эл. сч/ф заново",' ',21,"ResendEIVDsm");
    if (HasLocalization("ARG")) then begin
      SpecialMenu("Отправить/отправить Аргентинский эл. сч/ф заново",'e',17,"SendArgEInvIVDsm");
      SpecialMenu("Retrive CAE/CAEA",'',17,"ConsultarArgEInvIVDsm");
    end;
    if (HasLocalization("MEX")) then begin
      SpecialMenu("Send Mexican E-Invoice",'e',17,"SendMexEInvIVDsm");
    end;
  	if (HasLocalization("BRA")) then begin
      SpecialMenu("Send/Resend Brazilian E-Invoice",' ',27,"SendBraEInvIVDsm");
    end;
    if (HasLocalization("FIN")) then begin
      SpecialMenu("Export Finvoice",' ',28,"ExportFinvoiceIVDsm");
    end;
  	SpecialMenu("Открыть запись операции",'t',8,"OpenTRFromIV");
    if (HasModCRM) then begin
      SpecialMenu("Создать деятельность",'c',9,"CreateActFromIVDsm");
    end;
    SpecialMenu("Создать приходный ордер",' ',1,"DoCLInFromIVD");

    if SetInSet(Usr.AccessGroup, "FINO1,ADMIN") then
      begin
      SpecialMenu("Создать кредитовый счет-фактуру",' ',20,"CreateCreditNoteIVDsm");
      end;
    //SpecialMenu("Создать кред. сч/ф",' ',20,"CreateCreditNoteIVDsm");

    if (StandardHansa==false) then begin
      SpecialMenu("Создать кредитный договор",' ',25,"CreateCredManIVsm");
    end;
    SpecialMenu("Создать контракт",' ',13,"COFromIVDsm");
    if (StandardHansa==false) then begin
      SpecialMenu("Создать корректирующую счет-фактуру",' ',16,"CorrectionIVsm");
      SpecialMenu("Создать дебит ноту",' ',20,"CreateDebitNoteIVDsm");
      SpecialMenu("Создать реализацию EDI",' ',9,"DoEDIInvFromIVD");
    end;
    SpecialMenu("Создать E-Mail",'m',23,"CreateMailFromIVDsm");
    if (HasLocalization("UKR")) then begin
      SpecialMenu("Создать первое событие",' ',18,"FirstEventIVDsm");
    end;
    if (StandardHansa==false) then begin
      SpecialMenu("Создать взносы",' ',6,"CreateInstalmentsIVDsm");
        if (HasLocalization("HRV,POL,RUS,SRB,SLV,UKR")) then begin
        SpecialMenu("Создать коррекцию НДС книги продаж",' ',17,"VATCorrectionIVsm");
      end;
      SpecialMenu("Изменение скидки менеджером",' ',24,"MgrsDiscOverrideIVDsm");
      if (HasTaxMatrix) then begin
      SpecialMenu("Открыть нал. матрицу",' ',25,"TestVatMatrixIVDsm");
      end;

    //  SpecialMenu("GSXAutoEnrollmentIVDsm",'w',26,"GSXAutoEnrollmentIVDsm");
      SpecialMenu("Apple гар. статус проверка",'w',26,"WarrantyStatusIVDsm");

    //  SpecialMenu("TESTSendArgEInvoiceFECAESolicitar",' ',25,"TESTSendArgEInvoiceFECAESolicitar");
    //  SpecialMenu("Test Mex E-Invoices",'1',0,"TestMexEInvoices");

      SpecialMenu("Создать историю товара",' ',18,"DPriceHistMenu");
      SpecialMenu("Экспорт в текстовый файл",' ',25,"VExportFromIVVc");
      SpecialMenu("Создать задачу",' ',26,"NewQAIVDsm");
    end;
  end;
  EndWindow;


  WindowBegin("Счета-фактуры",IVLClass,CGmlist,-);
  SetWRect(20,80,800,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(IVDClass);
  UseView(IVVc);
  FormName(PrintIVL);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Но.",SerNr,false,SerNr);
  RlColKey(79,79,"ОК",OKFlag,false,OKFlag);
  RlColKey(111,111,"Дата сч/ф",InvDate,false,InvDate);
  RlColKey(191,191,"Офиц. Но.",OfficialSerNr,false,OfficialSerNr);
  RlColKey(301,301,"Счет Но.",OrderNr,false,OrderNr);
  RlColKey(381,381,"Клиент",CustCode,false,CustCode);
  RlColKey(441,441,"Наим.",Addr0,false,Name);
  RlColKey(-110,-110,"Итого",Sum4,true,Sum4);
  RlCol(-39,-39,"",CredMark,true);
  RlCol(-30,-30,"Вал.",CurncyCode,true);
  RlCol(-1,-1,"",Invalid,true);
  SearchField("Найти");
  BrowseSubsetButton(-40,-15);
  SpecialMenu("OK",'G',0,"OKIVLsm");
  SpecialMenu("Печатать проформу cчета-фактуры",' ',1,"PrintIVLsm");
  SpecialMenu("Статус сч/ф",'r',2,"IVInfoIVLsm");
  SpecialMenu("Экспорт в Excel",'x',3,"IVVcToExcelLsm");
  SpecialMenu("Экспорт в Excel клиенту",'c',4,"IVVcToExcel2Lsm");
  SpecialMenu("Cводная накладная",' ',5,"ICommonInvoiceLsm");
  EndWindow;


//===============================================
  WindowBegin("Определите журнал счетов",IVJRClass,CGRcW,RcType);
  SetWRect(20,80,520,390);
  vs = 20;
  hs=148;
  if (IsEnterprise) then begin
    if (HasLocalization("ARG,HRV,LTU,LVA,POL,PRT,RUS") or (HasOfficialSerNr and HasPreferedOfficialSerNr==false))  then begin
    Tile(0,40,false,"",f1);
    end else begin
      Tile(0,20,false,"",f1);
    end;
  end;

  v = 6; h = 150;
  if (HasPreferedOfficialSerNr) then begin
    EditFieldTL(h,v,150,"Официальный номер",M4UStr,Normal,41,f6,false,0);
    v = v + 20;
    if (HasLocalization("POL,PRT")==false)  then begin
      EditFieldTL(h,v, 150,"Номер сч/ф",M4Str,Normal,30,f1,false,0);
      v = v + 20;
    end;
  end else begin
    EditFieldTL(h,v,150,"Номер сч/ф",M4Str,Normal,30,f1,false,0);
    v = v + 20;
    if (HasOfficialSerNr) then begin
      EditFieldTL(h,v,150,"№ для печати",M4UStr,Normal,41,f6,false,0);
      v = v + 20;
    end;
  end;

  if (IsEnterprise) then begin
    TileButtons(v,2);
    Tile(1,380,false,"1",f2);
    v = 6;
    vm = v;
  end;
  PeriodField(h,v,"Период");
  EditFieldTL(h,v+=vs, 150,"Период кредит. сч/ф",M4UStr,Normal,21,Period2Str2,false,PerSClass);
  EditFieldTL(h,v+=vs ,150,"Клиент",M4UStr,Normal,50,f2,false,CUSClass);
  if (HasCategories) then begin
    EditFieldTL(h,v+=vs ,70,"Категория",M4UStr,Normal,5,f3,false,CCatSClass);
  end;
  if (HasContactClassification) then begin
    EditFieldTL(h,v+=vs ,70,"Виды классификации",M4UStr,Normal,60,f5,false,CTypeSClass);
    EditFieldTL(h,v+=vs ,70,"Классификация",M4UStr,Normal,30,f4,false,CClassSClass);
  end;
  if (HasSalesman) then begin
    EditFieldTL(h,v+=vs ,70,"Продавец",M4UStr,Normal,10,AccStr,false,UserSClass);
  end;
  if (HasObjects) then begin
   EditFieldTL(h,v+=vs,250,"Объект",M4UStr,Normal,60,ObjStr,false,ObjSClass);
   EditFieldTL(h,v+=vs,50,"Тип объекта",M4UStr,Normal,5,ObjType,false,OTSClass);
    EditFieldTL(h,v+=vs,250,"Объект строки",M4UStr,Normal,60,f11,false,ObjSClass);
  end;
  if (HasModTS) then begin
    EditFieldTL(h,v+=vs,50,"Проект",M4UStr,Normal,20,FirstAcc,false,PRSClass);
  end;
  if (HasMultiLocations) then begin
    EditFieldTL(h,v+=vs,70,"Склад",M4UStr,Normal,60,LastAcc,false,LocationSClass);
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs,50,"Условия оплаты",M4UStr,Normal,5,TransStr,false,PDSClass);
    EditFieldTL(h,v+=vs,50,"Прейскурант",M4UStr,Normal,5,searchstr,false,PLDefSClass);
    EditFieldTL(h,v+=vs,50,"Клиент",M4Code,Normal,20,f12,false,CUSClass);
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v3=(v+=vs),50,"Миним. сумма",M4Val,Normal,0,vals0,false,0);
  end;
  if (IsEnterprise) then begin
    h = 320;
    v = vm + 10;
  end else begin
    v = v + 40;
    v3 = v + 20;
    vm = v;
  end;
  ButtonFrame(h,v,123,5,"Статус");
  CheckBox(h,v,0,"Неутвержденные",flags[1]);
  CheckBox(h,v+=16,0,"Утвержденные",flags[2]);
  if (IsEnterprise) then begin
    RadioButton(h,v+=16,0,0,"Вкл. спорные",flags[7]);
    RadioButton(h,v+=16,1,0,"Искл. спорные",flags[7]);
    RadioButton(h,v+=16,2,0,"Только спорные",flags[7]);
  end;
  EndFrame;

  v3 = v3 + 41;
  v = v3;
  if (IsEnterprise) then begin
    vm = v;
  end;
  ButtonFrame(h=148,v,123,3,"Функция");
  RadioButton(h,v,0,0,"Сводный",ArtMode);
  RadioButton(h,v+=16,1,0,"Подробный",ArtMode);
  if (HasMultiCurrency) then begin
    RadioButton(h,v+=16,4,0,"Сводный с валют.",ArtMode);
  end;
  EndFrame;
  if (IsEnterprise==false and HasBase2) then begin
    CheckBox(h,v+=42,0,"Пок-ть осн. валюта 1 & 2 Итоги",flags[12]);
  end;

  if (IsEnterprise) then begin
    h2 = 320;
    l = 160;
  end else begin
    h2 = h + 148;
    l = 160;
  end;
  ButtonFrame(h2,v=vm,l,5,"Сортировка");
  if (HasModNL) then begin
    RadioButton(h2,v,0,0,"дате операции",flags[10]);
  end else begin
    RadioButton(h2,v,0,0,"дате сч/ф",flags[10]);
  end;
  if (HasLocalization("BRA,POL,PRT")) then begin
    RadioButton(h2,v+=16,5,0,"номеру сч/ф",flags[10]);
  end else begin
    RadioButton(h2,v+=16,1,0,"номеру сч/ф",flags[10]);
  end;
  if (HasMultiLocations) then begin
    RadioButton(h2,v+=16,2,0,"складу (из загол.)",flags[10]);
  end;
  if (HasOfficialSerNr) then begin
    RadioButton(h2,v+=16,3,0,"№ для печати",flags[10]);
  end;
  if (IsEnterprise) then begin
    RadioButton(h2,v+=16,4,0,"дате сч/ф",flags[10]);
  end;
  EndFrame;
  if (IsEnterprise) then begin
    Tile(2,330,false,"2",Stext);
    v = 6;
    EditFieldTL(h=150,v,100,"Группа товаров",M4UStr,Normal,21,Stext,false,ITSClass);
    EditFieldTL(h,v+=vs,100,"Товар",M4UStr,Normal,41,f10,false,INSClass);
    EditFieldTL(h=150,v+=vs,100,"Счет продаж",M4UStr,Normal,21,f7,false,AccSClass);
    EditFieldTL(h=150,v+=vs,100,"Счет должника",M4UStr,Normal,21,f8,false,AccSClass);
    if (StandardHansa==false) then begin
      EditFieldTL(h=150,v+=vs,100,"Осн. партнер",M4UStr,Normal,20,f9,false,CUSClass);
    end;
    //    EditFieldTL(h,v+=vs,50,"Order Class",M4UStr,Normal,5,Stext,false,OrderClassSClass); // no more strings to use....
    ButtonFrame(h=50,vm = (v+=40),123,4,"Вид счета");
    CheckBox(h,v,0,"Счета-фактуры",flags[3]);
    CheckBox(h,v+=16,0,"Кассовые ордера",flags[4]);
    CheckBox(h,v+=16,0,"Счета кредита",flags[5]);
    CheckBox(h,v+=16,0,"Счета пени",flags[6]);
    CheckBox(h,v+=26,0,"Сч/ф, влияющие на книгу продаж",flags[19]);
    StaticText(h+17,v+=30,"(не учитывать тип сч/ф)",false);
    CheckBox(h=220,v=vm,0,"Показать коммент.",flags[11]);
    CheckBox(h,v+=16,0,"Суммы в осн. валюте 1 и 2",flags[12]);
    if (StandardHansa==false) then begin
      CheckBox(h,v+=16,0,"Только фискальные сч/ф",flags[13]);
    end;
    CheckBox(h,v+=16,0,"Показывать аннулированные сч/ф",flags[14]);
    CheckBox(h,v+=16,0,"Показывать счет НДС",flags[15]);
    CheckBox(h,v+=16,0,"Только нераспечатанные сч/ф",flags[17]);
    CheckBox(h,v+=16,0,"Включая орг. клиентов",flags[18]);
    CheckBox(h,v+=16,0,"Invoices with Total amount equal zero",flags[20]);
    CheckBox(h+=hs,v=vm,0,"Показать № для печати",flags[16]);
  end else begin
    ButtonFrame(h+=148,v+=41,123,3,"Тип сч.");
    CheckBox(h,v,0,"Счет",flags[3]);
    CheckBox(h,v+=16,0,"Сч.на наличные",flags[4]);
    CheckBox(h,v+=16,0,"Кредит-ноты",flags[5]);
    if (HasLocalization("PRT")) then begin
      CheckBox(h,v+=16,0,"Счета пени",flags[6]);
    end;
    EndFrame;
    if (HasLocalization("PRT")) then begin
      CheckBox(h,v+=24,0,"Invoices with Total equal zero",flags[20]);
    end;
  end;

  EndWindow;


//=============================================== ORVc
  WindowBegin("Счет клиенту",ORDClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(ORVc);

  DynamicWindow;

  ActiveFieldOnNew("CustCode");
  CommunicateButton;
  Tile(0,74,false,"",CustCode);
  EditField(75,vm=(v=6),95,"Номер",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Грузополуч-ль",Normal,CustCode,false,CUSClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Наим.",Normal,Addr0,false,0);
  if (StandardHansa==false) then begin
    EditField(h,vm=(v+=20),135,"Офиц. Но.",Normal,OfficialSerNr,false,LegalInvNrSClass);
    CheckBox(h4=-100,v,0,"OK",OKFlag);
  end else begin
    CheckBox(h4=-100,vm=(v+=20),0,"OK",OKFlag);   // From dict
  end;
//  CheckBox(h+120,vm,0,"Closed",Closed);
//  CheckBox(h+240,vm,0,"Reserved",Reserved);
  TileButton(1,"Условия");
  TileButton(2,"Товары");
  TileButton(3,"Валюта");
  TileButton(4,"Условия");
  TileButton(5,"Прайс-лист");
  TileButton(6,"Юр. адрес");
  TileButton(7,"Адрес дост.");
  TileButton(8,"История"); //26.11.09 INAU

  Tile(1,110,false,"1",OrdDate);
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Дата",Normal,OrdDate,false,PasteCurDate);

  if SetInSet(Usr.AccessGroup, "ADMIN,FINO,FINOA,TSLOBODENY") then
    begin
    ViewModeInt = Normal;
    end
  else
    begin
    ViewModeInt = ViewOnly;
    end;
  EditField(h1,v+=vs,25,"Условия оплаты", ViewModeInt, PayDeal,false,PDSClass);

  EditField(h1,v+=vs,100,"Ссылка",Normal,RefStr,false,0);
  EditField(h1,v+=vs,315,"Объекты",Normal,Objects,false,ObjSClass);

  EditField(h1,v+=vs,70,"Дата отпр. (план)",Normal,PlanShip,false,PasteCurDate);
  EditField(h2,v,60,"Время отпр. (план)",Normal,PlanShipTime,false,PasteCurTime);
  EditField(h1,v+=vs,70,"Дата дост. (план)",Normal,DespatchDate,false,PasteCurDate);
  EditField(h2,v,60,"Время дост. (план)",Normal,DespatchTime,false,PasteCurTime);

  EditField(h2,v=vm,135,"Ответственный",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Внимание",Normal,CustContact,false,ContactSClass);
  EditField(h2,v+=vs,135,"№ счета кл.",Normal,CustOrdNr,false,0);
  EditField(h3,v=vm,80,"Продавец",Normal,SalesMan,false,UserSClass);
  if (StandardHansa==false) then begin
    EditField(h3,v+=vs,80,"Проект",Normal,PRCode,false,PRSClass);
  end;
  EditField(h3,v+=vs,80,"Вид счета",Normal,OrderClass,false,OrderClassSClass);
  if (StandardHansa==false) then begin
    EditField(h3,v+=vs,80,"Тип счета",Normal,OrderType,false,SetSClass);
    EditField(h3,v+=vs,80,"Контракт",Normal,ORCONr,false,ORCOSClass);
  end;
  CheckBox(h4,v=6,0,"Закрыт",Closed);
  CheckBox(h4,v+=16,0,"Зарезервир.",Reserved);

  CheckBox(h4, v+=16, 0, "ГТД", CCDFlag);

  EnterSkip(Math);

  Tile(2,220,true,"2",Math);
//  CheckBox(20,-20,0,"OK",OKFlag);

  EditField(55,-41,50,"Валюта", ViewModeInt, CurncyCode,false,CurncyCodeSClass);

  if (UseTaxTemplatesforTaxCalc==false) then begin
    if (UserCanAction("ViewCostPrice",true)) then begin
      EditField(160,-41,70,"Приб.%",Normal,GPProc,true,0);
      EditField(160,-21,70,"Иторго прибыль",ViewOnly,TotGP,true,0);
    end;
    EditField(290,-41,70,"Налог",ViewOnly,TAX2Sum,true,0);
    EditField(290,-21,70,"Вн.налог",ViewOnly,TAX1Sum,true,0);
    EditField(410,-41,100,"НДС",ViewOnly ,Sum3,true,0);
  end else begin
    if (UserCanAction("ViewCostPrice",true)) then begin
      EditField(290,-41,70,"Приб.%",Normal,GPProc,true,0);
      EditField(290,-21,70,"Иторго прибыль",ViewOnly,TotGP,true,0);
    end;
    EditField(410,-41,100,"НДС",ViewOnly ,Sum3,true,0);
  end;
  EditField(410,-21,100,"База",ViewOnly,BaseSum4,true,0);
  EditField(-150,-41,100,"Подытог",ViewOnly ,Sum1,true,0);
  EditField(-150,-21,100,"ИТОГО",ViewOnly ,Sum4,true,0);
  v = 24;
  MatrixBegin(3,v,-50,-49,-,200);
  MatTypedRow(stp);
  flipnr = 0;
  Flip(flipnr); flipnr = flipnr + 1;
  MatText(t=9,32,"Итого",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatColTL(t,-80,"Сумма",0,-1,ViewOnly,0,Sum,true,0);
  MatText(t=17,32,"Заголовок",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatCol(t=1,32,"Товар",0,ArtCode,false,ForSaleINSClass);
//  MatCol(t,94,"Var",0,VARList,true,VARSClass);
//  MatCol(t,144,"Qty",0,Quant,true,0);
  t = 1;
  if (HasVarieties) then begin
    MatCol(t,94,"Кол-во",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Кол-во",0,Quant,true,0);
  end;

  if IfShowRemainsInOrder then
    begin
    MatColTL(t, 154, "Доступн.", 0, M4Val, ViewOnly, 0, QuantAvail, True, 0); //К-во доступного (остаток минус счета по складу)
    end;

  EnterSkip(ArtCode);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,32,"Товар",0,ArtCode,false,ForSaleINSClass);
//  MatCol(t,94,"Var",0,VARList,true,VARSClass);
//  MatCol(t,144,"Qty",0,Quant,true,0);
  if (HasVarieties) then begin
    MatCol(t,94,"Кол-во",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Кол-во",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
  MatText(t=10,32,"Эта и нижележащие строки не будут печататься",false);
  MatText(t=kInvoiceRowTypePerceptionTax,32,"Налоговый сбор",true);
  MatCol(t,132,"",0,Region,false,0);
  MatCol(t,252,"",0,TAX2Prc,true,0);
  MatCol(t,292,"",0,Sum,true,0);
  MatCol(t,372,"",0,SalesAcc,false,0);
  MatCol(t,452,"",0,Spec,false,0);
  Flip(flipnr); flipnr = flipnr + 1;
//  MatCol(t=1,194,"Description",0,Spec,false,0);
  t = 1;
  MatCol(t,144,"Описание",0,Spec,false,0);
  MatCol(t,-235,"Цена",0,Price,true,PLSClass);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Сумма",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  MatCol(t,-235,"Цена",0,Price,true,PLSClass);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Сумма",0,Sum,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Описание",0,Spec,false,0);
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-284,"Код товара клиента",0,CustArtCode,false,CUINSClass);
    MatCol(t,-224,"Счет",0,SalesAcc,false,AccSClass);
    MatCol(t,-164,"Объект",0,Objects,false,ObjSClass);
    MatCol(t,-70,"Ш-н",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-264,"Код товара клиента",0,CustArtCode,false,CUINSClass);
    MatCol(t,-184,"Счет",0,SalesAcc,false,AccSClass);
    MatCol(t,-124,"Объект",0,Objects,false,ObjSClass);
    MatCol(t,-30,"НДС",0,VATCode,false,VATCodeSClass);
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-284,"Код товара клиента",0,CustArtCode,false,CUINSClass);
    MatCol(t,-224,"Счет",0,SalesAcc,false,AccSClass);
    MatCol(t,-164,"Объект",0,Objects,false,ObjSClass);
    MatCol(t,-70,"Ш-н",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-264,"Код товара клиента",0,CustArtCode,false,CUINSClass);
    MatCol(t,-184,"Счет",0,SalesAcc,false,AccSClass);
    MatCol(t,-124,"Объект",0,Objects,false,ObjSClass);
    MatCol(t,-30,"НДС",0,VATCode,false,VATCodeSClass);
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Описание",0,Spec,false,0);
  MatCol(t,344,"Тип заказа",0,OrderType,false,SetSClass);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-245,"Цена",0,Price,true,PLSClass);
    MatCol(t,-175,"%",0,vRebate,true,0);
    MatCol(t,-140,"Стоимость",0,BasePrice,true,0);
    MatCol(t,-70,"Прибыль",0,rowGP,true,0);
  end else begin
    MatCol(t,-235,"Цена за шт.",0,Price,true,PLSClass);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Сумма",0,Sum,true,0);
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-245,"Цена",0,Price,true,PLSClass);
    MatCol(t,-175,"%",0,vRebate,true,0);
    MatCol(t,-140,"Стоимость",0,BasePrice,true,0);
    MatCol(t,-70,"Прибыль",0,rowGP,true,0);
  end else begin
    MatCol(t,-235,"Цена",0,Price,true,PLSClass);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Сумма",0,Sum,true,0);
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Описание",0,Spec,false,0);
  MatCol(t,-300,"Продавцы",0,Salesmen,false,UserSClass);
  MatCol(t,-236,"Отгруж.",0,Shipd1,true,0);
  MatCol(t,-184,"Отгруж. Ок",0,Shipd2,true,0);
  MatCol(t,-132,"Отфактурир.",0,Invd,true,0);
  MatCol(t,-80,"Структура",0,Recepy,false,RecSClass);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  MatCol(t,-290,"Предвар.",0,Shipd1,true,0);
  MatCol(t,-220,"Отгрузка",0,Shipd2,true,0);
  MatCol(t,-150,"Счет-фактура",0,Invd,true,0);
  MatCol(t,-80,"Структура",0,Recepy,false,RecSClass);
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Описание",0,Spec,false,0);
  MatCol(t,-290,"Серийный номер",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-150,"Запланированная отгрузка",0,PlanShipRow,true,PasteCurDate);
  MatCol(t,-70,"Фактор цены",0,PriceFactor,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  MatCol(t,-290,"Серийный номер",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-150,"Запланированная отгрузка",0,PlanShipRow,true,PasteCurDate);
  MatCol(t,-70,"Фактор цены",0,PriceFactor,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Описание",0,Spec,false,0);
  MatCol(t,-315,"Накладная",0,ShipNote,false,0);
  MatCol(t,-210,"Склад",0,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
    MatCol(t,-145,"Место",0,Position,true,UsedPosSClass);
  end;
  MatCol(t,-90,"Источник",0,Source,true,SourceSClass);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  MatCol(t,-315,"Накладная",0,ShipNote,false,0);
  MatCol(t,-210,"Склад",0,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
    MatCol(t,-145,"Место",0,Position,true,UsedPosSClass);
  end;
  MatCol(t,-90,"Источник",0,Source,true,SourceSClass);
  if (StandardHansa==false) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=1,144,"Дата получения",0,PickingDate,false,PasteCurDate);
    MatCol(t,-390,"Время пол.",0,PickingTime,false,PasteCurTime);
    MatCol(t,-320,"Дата погр.",0,InloadingDate,true,PasteCurDate);
    MatCol(t,-230,"Время погр.",0,InloadingTime,true,PasteCurTime);
    MatCol(t,-160,"Дата отправ.",0,DespatchRowDate,true,PasteCurDate);
    MatCol(t,-70,"Время отпр.",0,DespatchRowTime,true,PasteCurTime);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Дата получения",0,PickingDate,false,PasteCurDate);
    MatCol(t,-390,"Время пол.",0,PickingTime,false,PasteCurTime);
    MatCol(t,-320,"Дата погр.",0,InloadingDate,true,PasteCurDate);
    MatCol(t,-230,"Время погр.",0,InloadingTime,true,PasteCurTime);
    MatCol(t,-160,"Дата отправ.",0,DespatchRowDate,true,PasteCurDate);
    MatCol(t,-70,"Время отпр.",0,DespatchRowTime,true,PasteCurTime);
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Описание",0,Spec,false,0);
  MatCol(t,-315,"Ед.",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"Кол-во ед.",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Шир.",0,UnitXval,true,0);
  MatCol(t,-160,"Выс.",0,UnitYval,true,0);
  MatCol(t,-120,"Глуб.",0,UnitZval,true,0);
  MatCol(t,-80,"Цена ед.",0,UnitFactPrice,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Описание",0,Spec,false,0);
  MatCol(t,-315,"Ед.",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"Кол-во ед.",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Шир.",0,UnitXval,true,0);
  MatCol(t,-160,"Выс.",0,UnitYval,true,0);
  MatCol(t,-120,"Глуб.",0,UnitZval,true,0);
  MatCol(t,-80,"Цена ед.",0,UnitFactPrice,true,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 20;
  v = 18; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,6,"F");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,7,"G");
  if (StandardHansa==false) then begin
    v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,8,"H");
  end;

  Tile(3,70,false,"3",FrRate);
  vs = 20;
  EditField(h=110,v=6,50,"Валюта", ViewModeInt, CurncyCode,false,CurncyCodeSClass);
  EditField(h,v+vs,50,"Основная валюта 1", ViewModeInt, BaseRate1,true,0);
  EditField(h,v+(vs*2),50,"Основная валюта 2", ViewModeInt, BaseRate2,true,0);
  EditField(h2=295,v,50,"Курс", ViewModeInt, FrRate,true,0);
  RateField(h3=360,v,50,":", ViewModeInt, "ToRateB1",true,h3+60,v+14,"Основная валюта 1",false);
  RateField(h3,v+=vs,50,":", ViewModeInt, "ToRateB2",true,h3+60,v+14,"Основная валюта 2",false);

  Tile(4,110,false,"4",ShipDeal);
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,v=6,80,"Условия отгрузки",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h1,v+=vs,80,"Метод отгрузки",Normal,ShipMode,false,DMSClass);
  if (StandardHansa==false) then begin
    EditField(h1,v+=vs,80,"Маршрут",Normal,Sorting,false,DelRouteSClass);
  end;
  EditField(h1,v+=vs,80,"Склад",Normal,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
    EditField(h1,v+=vs,80,"Подразделение",Normal,BranchID,false,AllCUSClass);
  end;
  EditField(h2,v=vm,80,"Итого кол-во",ViewOnly,TotQty,true,0);
  EditField(h2,v+=vs,80,"Итого вес",ViewOnly,TotWeight,true,0);
  EditField(h2,v+=vs,80,"Итого объем",ViewOnly,TotVolume,true,0);
  EditField(h2,v+=vs,80,"Фрахт",Normal,FrPrice,true,0);
  EditField(h2,v+=vs,80,"Код интрастата",Normal,IntrastatTransCode,true,IntrastatTransCodeSClass);
  if (StandardHansa==false) then begin
    EditField(h3,v,80,"Код НДС фрахта",Normal,FrVATCode,true,VATCodeSClass);
  end;
  CheckBox(473,v=vm,0,"Сч/ф перед отгрузкой",InvBeforeShip);

  Tile(5,130,false,"5",PriceList);
  h3 = 530;
  EditField(h1,v=vm,80,"Прайс-лист",Normal,PriceList,false,PLDefSClass);
  EditField(h1,v+=vs,80,"Таблица скидок",ViewOnly,RebCode,false,0);
//  EditField(h2,v+=vs,80,"Disc %",ViewOnly,DiscPerc,false,0);
//  EditField(h2,v+=vs,80,"Disc Amnt",ViewOnly,DiscSum,false,0);
  EditField(h1,v+=vs,80,"Плательщик",Normal,InvoiceToCode,false,CUSClass);
  if (StandardHansa==false) then begin
    EditField(h1,v+=vs,80,"Кредитная карта",Normal,CreditCard,false,CreditCardSClass);
    EditField(h1,v+=vs,80,"Авторизация",Normal,AuthorizationCode,false,0);
  end;
  EditField(h1,v+=vs,-20,"Комментарий",Normal,Comment,false,0);
  EditField(h1,v+=vs,-20,"Примечания",Normal,Notes,false,0);

  v = vm;
  if (StandardHansa==false) then begin
    EditField(h2,v,80,"Группа продажи",Normal,SalesGroup,false,SalesGroupSClass);
    v = v + vs;
  end;
  EditField(h2,v,80,"Язык",Normal,LangCode,false,LangSClass);
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,80,"Комиссия",Normal,Commision,true,0);
    EditField(h2,v+=vs,80,"Итого вкл ком.",ViewOnly,SumIncCom,true,0);
  end;
  if (HasTREO) then begin
    EditField(h3,v=vm,80,"TREO №",Normal,TREONr,false,0);
    EditField(h3,v+=vs,80,"TREO дата зверш.",Normal,TREOExpDate,false,PasteCurDate);
  end;

  Tile(6,250,false,"6",Addr1);
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Invoice"; end;
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "Адрес"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs, -20,label,Normal,InvAddr4,false,0);
  EditField(h,vm=(v+=vs),80,"Страна",Normal,InvCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin
    EditField(h2-89,v,232,"",ViewOnly,InvCountryName,false,0);
    h5 = -170;
    width = 150;
  end else begin
    h5 = -270;
    width = 135;
  end;
  EditField(h5,v,width,"Банк",Normal,BankCode,false,BankSClass);
  if (StandardHansa==false) then begin
    ButtonFrame(h3=h+4,v=(vm+=40),123,6,"Статус утверждения");
    RadioButton(h3,v,kAcceptanceStateNotRequired,0,"не обязательно",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"не начато",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"не запрошено",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStatePending,0,"в ожидании",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"утверждено",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"отклонено",AcceptanceStatus);
    v = VATZoneButtonsLabelsRUS(h3=290,v=vm,140,16);
  end else begin
    v = VATZoneButtonsLabelsRUS(h3=290,v=vm+20,140,16);
  end;
  EditField(h2=-170,v=vm,150,"Регион",Normal,Region,false,RegionSClass);
  EditField(h2,v+=vs,150,"ИНН",Normal,VATNr,false,0);
  EditField(h2,v+=vs,150,"GLN",ViewOnly,RecipientGLN,false,0);
  EditField(h2,v+=vs,150,"Телефон",Normal,Phone,false,0);
  EditField(h2,v+=vs,150,"Факс",Normal,Fax,false,0);

  Tile(7,170,false,"7",ShipAddr0);
  if (StandardHansa==false) then begin
    EditField(h1,v=6,80,"Код адреса",Normal,DelAddrCode,false,DelAddr3SClass);
    EditField(h1,v+=vs,-20,"Отгрузка",Normal,ShipAddr0,false,0);
  end else begin
    EditField(h1,v=6,-20,"Отгрузка",Normal,ShipAddr0,false,0);   // From dict
  end;
  EditField(h1,v+=vs,-20,"Адрес",Normal,ShipAddr1,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
  EditField(h1,v+=vs,80,"Страна",Normal,DelCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin
    EditField(h1+91,v,232,"",ViewOnly,DelCountryName,false,0);
    h5 = -170;
    width = -20;
  end;
  EditField(h2,v,150,"GLN доставки",ViewOnly,DelRecipientGLN,false,0);
//  EditField(h1+200,v,80,"#VAT Code#",Normal,CustVATCode,false,0);
  EnterSkip(OrdDate);

  //Добавлено 26.11.09 INAU
  Tile(8, 130, false, "", LogNewUser);
  EditField(h=130,v=20,70,"Создал",ViewOnly,LogNewUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogNewDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogNewTime,false,0);
  EditField(h=130,v=40,70,"Сохранил",ViewOnly,LogSaveUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogSaveDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogSaveTime,false,0);
  EditField(h=130,v=60,70,"Закрыл (OK)",ViewOnly,LogOKUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogOKDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogOKTime,false,0);
  EditField(h=130,v = 80,-20,"Причина аннулир.",Normal,SenceInvalid,false,0);
  //
  SpecialMenu("Экспорт заказа Максану",' ',20,"ExportOrdMaksanDsm");
  SpecialMenu("Создать отгрузку",'L',0,"SHFromORDsm");
  SpecialMenu("Создать счет-фактуру",'F',1,"IVFromORDsm");
  SpecialMenu("Oстатки товаров",'Z',16,"VQuantRn");
  SpecialMenu("Добавить строку заголовка",' ',13,"ORAddHeaderLine");
  SpecialMenu("Добавить скрытую строку",' ',13,"ORAddHidLine");
  SpecialMenu("Добавить итого",' ',14,"SubtotalORDsm");
  SpecialMenu("Пересчитать скидку",' ',11,"RecalcDiscountORDsm");
  SpecialMenu("Пересчитать вес и объем",' ',10,"RecalculateWeightORDsm");
  SpecialMenu("Обновить товары валютного прейскуранта",' ',7,"UpdatePricesORDsm");
  SpecialMenu("Статус товара",'I',2,"ItemStatusORDsm");
  SpecialMenu("Поиск товара",'f',1,"ItemSearchDsm");
  SpecialMenu("Статус счета",'r',5,"ORInfoRnORDsm");
  SpecialMenu("Заполнить Доступно",'d',18,"GetStockRemainsWithOrders");
  SpecialMenu("Цены предыдущей продажи",' ',12,"ORLastSPrsm");
  SpecialMenu("Распечатать внутренний заказ",' ',4,"Or2FormORDsm");
  SpecialMenu("Резервирования",' ',15,"OrderReservORDsm");
  SpecialMenu("Отправить для утверждения",' ',6,"ORSendforAcceptanceORDsm");
  SpecialMenu("Отменить запрос на утверждение",' ',2,"CancelApprovalRequestDsm");
//  SpecialMenu("Создать деятельность",'c',9,"CreateActFromORDsm");
  SpecialMenu("Создать задачу",'Q',19,"CreateQAFromORDsm");
  SpecialMenu("Пересчитать вес и объем",' ',10,"RecalculateWeightORDsm");
  SpecialMenu("Создать счет-фактуру на аванс",'o',3,"DownPayFromORDsm");

  SpecialMenu("Создать заказ поставщику",' ',4,"POFromORDsm");
  SpecialMenu("Создать возврат товаров",'B',6,"RetFromORsm");
  SpecialMenu("Создать перемещение по складу",' ',8,"StockMovFromORDsm");
  if (HasTaxMatrix) then begin
    SpecialMenu("Открыть матрицу налогов",' ',25,"OpenVatMatrixORDsm");
  end;
  EndWindow;


  WindowBegin("Счета клиентам",ORLClass,CGmlist,-);
  SpawnClass(ORDClass);
  SetWRect(20,80,850,298);
  Sizeable(-1,-1,0,0);
  UseView(ORVc);
  FormName(PrintORL);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Но.",SerNr,false,SerNr);
  RlColKey(79,79,"ОК",OKFlag,false,OKFlag);
  pos = 111;
  if (HasModIN) then begin
    RlColKey(pos,pos,"отгруж",ShipMark,false,ShipFlag);
    pos = pos + 32;
  end;
  if (HasModSL) then begin
    RlColKey(pos,pos,"Отфакт",InvMark,false,InvFlag);
    pos = pos + 32;
  end;
  RlCol(pos,pos,"закр",Closed,false);
  pos = pos + 32;
  RlColKey(pos,pos,"Дата заказа",OrdDate,false,OrdDate);
  pos = pos + 80;
  if (HasMultiLocations) then begin
    RlCol   (pos,pos,"Местоположение",Location,false);
    pos = pos + 60;
  end;
  RlColKey(pos,pos,"Номер заказа клиента",CustOrdNr,false,CustOrdNr);
  pos = pos + 80;
  RlColKey(pos,pos,"Клиент",CustCode,false,CustCode);
  pos = pos + 60;
  RlColKey(pos,pos,"Наим.",Addr0,false,Name);
  if (IsEnterprise) then begin
    RlColKey(-200,-200,"Класс",OrderClass,false,OrderClass);
    RlColKey(-155,-155,"Итого",Sum4,true,Sum4);
//    RlCol(-75,-75,"Аванс",DownPaySent,true);
  end else begin
    RlColKey(-55,-55,"ИТОГО",Sum4,true,Sum4);
  end;

  RlCol(-75,-75,"Примечания",Notes,false);
  RlCol(-1,-1,"",Invalid,true);

  if (HasLimitedAccess) then begin
    BrowseSubsetButton(-40,-15);
  end;
  SearchField("Поиск");
  if (GuiType==kGuiMetro) then begin
    rn = 0;
    RowMenuBegin("");
    if (HasModIN) then begin
      RowMenuItem(rn,"Создать отгрузку",'L','L',4300,"SHFromORLsm"); rn = rn + 1;
    end;
    RowMenuItem(rn,"Создать счет-фактуры",'L','L',4300,"IVFromORLsm"); rn = rn + 1;
    if (IsEnterprise) then begin
      RowMenuItem(rn,"Созжать счет-фактуру на аванс",'o','o',4300,"DownPayFromORLsm"); rn = rn + 1;
    end;
    RowMenuItem(rn,"Статус счет",'r','r',4300,"ORStatusORLsm"); rn = rn + 1;
    if (HasModPO) then begin
      RowMenuItem(rn,"Создать заказ поставщику",' ',' ',4300,"POFromORLsm"); rn = rn + 1;
    end;
    if (HasModCRM) then begin
      RowMenuItem(rn,"Создать деятельность",'c','c',4300,"ActFromORLsm"); rn = rn + 1;
    end;
    if (IsEnterprise) then begin
      RowMenuItem(rn,"Отметить счет как сфактурированный",' ',' ',4300,"ORToInvORLsm"); rn = rn + 1;
    end;
    EndRowMenu;
  end else begin
    if (HasModIN) then begin
      SpecialMenu("Создать отгрузку",'L',0,"SHFromORLsm");
    end;
    SpecialMenu("Создать реализацию",'F',1,"IVFromORLsm");
    if (IsEnterprise) then begin
      SpecialMenu("Создать счет-фактуру на аванс",'o',2,"DownPayFromORLsm");
    end;
    SpecialMenu("Статус счета",'r',3,"ORStatusORLsm");
    if (HasModPO) then begin
      SpecialMenu("Создать заказ поставщику",' ',4,"POFromORLsm");
    end;
    if (HasModCRM) then begin
      SpecialMenu("Создать деятельность",'c',5,"ActFromORLsm");
    end;
    if (IsEnterprise) then begin
      SpecialMenu("Отметить счет как сфактурированный",' ',6,"ORToInvORLsm");
    end;

    SpecialMenu("Создать задачу",'Q',7,"QAFromORLsm");

  end;
  EndWindow;


//=============================================== CTypeVc
  WindowBegin("Вид классификации",CTypeDClass,CGview,CTypeView);
  SetWRect(64,80,509,150);
  UseView(CTypeVc);
  EditField(120,v=6,50,"Код",St_i,Code,false,0);
  EditField(120,v+=20,300,"Комментарий",Normal,Comment,false,0);
  EditField(120,v+=20,50,"Иерархия",Normal,AutoObjects,false,CTypeSClass);
  EndWindow;


  WindowBegin("Виды классификации",CTypeLClass,CGmlist,CTypeView);
  SetWRect(64,80,509,298);
  SpawnClass(CTypeDClass);
  Sizeable(-1,-1,0,0);
  UseView(CTypeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,  "Код",Code,false,Code);
  RlColKey(81,81,"Комментарий",Comment,false,Comment);
  RlCol(-81,-81,"Иерархия",AutoObjects,false);
  SearchField("Найти");
  EndWindow;


//=============================================== SalesGroupVc
  WindowBegin("Группа продажи",SalesGroupDClass,CGview,-);
  SetWRect(20,80,440,150);
  UseView(SalesGroupVc);
  vs=20;v=6;
  EditField(h=50,v,70,"Код",Normal,SGroupCode,false,0);
  EditField(h,v+=vs,-40,"Наим.",Normal,SGroupName,false,0);
  CheckBox(h, v += vs, 0, "3акрыта", Closed);
  EndWindow;


//=============================================== StockMovVc
  WindowBegin("Перемещение складированных товаров",StockMovDClass,CGview,-);
  if (HasJewelleryInterface) then begin
    SetWRect(20,80,850,400);
  end else begin
    SetWRect(20,80,950,400);
  end;
  Sizeable(-1,-1,0,0);
  UseView(StockMovVc);
  ActiveFieldOnNew("SentTransDate");

  Tile(0,130,false,"",TransDate);
  v = 6; vs = 20; h = 110; h2 = 300; h3 = 500; h4 = 620;
  EditField(h,v,80, "Номер",Normal,SerNr,false,TSerSClass);
  CheckBox(h2,v,0,"Зарезервировано",Reserved);

//  EditField(h3,v,80,"Причина",Normal,Reason,false,StandProblemsSClass);
  EditField(h3, v,80,"Cобрал",Normal,Gather,false,UserSClass);

  EditField(h,v+=vs,80,"Дата заказа",Normal,OrdTransDate,false,PasteCurDate);
  if (HasMultiLocations) then begin
    if (IsEnterprise) then begin
    EditField(h2,v,80,"Дата отправки",Normal,SentTransDate,false,PasteCurDate);
    end;
  end;
  EditField(h3,v,80,"Дата получения",ViewOnly,TransDate,false,PasteCurDate);
  if (HasMultiLocations) then begin
    EditField(h,v+=vs,80, "Со склада",Normal,FrLocation,false,LocationSClass);
    if (IsEnterprise) then begin
    EditField(h2,v,80,"через склад",Normal,ThrouLocation,false,LocationSClass);
    end;
    EditField(h3,v,80,"на склад",Normal,ToLocation,false,LocationSClass);
  end;

  EditField(h,v+=20,130,"Штрих-код",Normal,Barcode,false,0);
  EditField(h + 200,v,60,"K-во",Normal,BQuant,false,0);
  EnterSkip(Math);
  CheckBox(h3, v, 0, "Прибавлять", AddIt);
  EditField(h,v+=20,-20,"Наименование",ViewOnly,IName,false,0);

  tilenr = 1;
  if (HasPositions or HasModWHM or HasLocalization("PRT")) then begin
    TileButton(tilenr,"Позиции"); tilenr = tilenr + 1;
  end;
  if (HasObjects) then begin
    TileButton(tilenr,"Объекты"); tilenr = tilenr + 1;
  end else begin
    TileButton(tilenr,"Коммент."); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Товары"); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Валюта"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Длит-ти"); tilenr = tilenr + 1;
  TileButton(tilenr,"Фрахт"); tilenr = tilenr + 1;
  TileButton(tilenr,"Адрес"); tilenr = tilenr + 1;

  TileButton(tilenr,"История"); //25.11.09 INAU
  tilenr = tilenr + 1;

  tilenr = 1;
  if (HasPositions or HasModWHM or HasLocalization("PRT")) then begin
    Tile(tilenr,60,false,tilenr,FrPos); tilenr = tilenr + 1;
    v = 6;
    if (HasPositions) then begin
      EditField(h,v,80, "С места",Normal,FrPos,false,UsedPosSClass);
      EditField(h2,v,80,"на место",Normal,ToPos,false,FreePosSClass);
    end;
    if (HasModProd) then begin
      EditField(h3,v,80,"Для производства",Normal,ProdSerNr,false,ProdSClass); v = v + vs;
      EditField(h3,v,150,"Маршрут",Normal,Sorting,false,DelRouteSClass); v = v + vs;
    end;
    if ((HasLocalization("PRT") and HasModIN and HasMultiLocations) or IsStandardProduct==false) then begin
      EditField(h3,v,150,"Тип",Normal,StockMovType,false,SetSClass); v = v + vs;
    end;
    if (HasModWHM) then begin
      v = 6 + vs;
      CheckBox(h,v,0,"Вручную",ManualPick);
      CheckBox(h,v+=16,0,"Послать на очередь погрузчика",ToForkLiftQue);
    end;
  end;

  Tile(tilenr,70,false,tilenr,Comment); tilenr = tilenr + 1;
  v = 6;
  if (HasObjects) then begin
    EditField(h,v,-20,"Объекты",Normal,Objects,false,ObjSClass);
    v = v + vs;
  end;
  EditField(h,v,-20,"Коммент.",Normal,Comment,false,0);
  EditField(h,v+=vs,135,"Оф. серийн. номер",Normal,OfficialSerNr,false,LegalInvNrSClass);
  EnterSkip(Math);

  Tile(tilenr,79,true,tilenr,Math); tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-50,-50,-,600); // увеличено кол-во строк... Dice, 07,12,2007
  Flip(0);
  flipnr = 1;
  if (HasJewelleryInterface) then begin
    MatCol(1,32,"Серийный номер",0,SerialNr,false,SerialNrSClass);
    EnterSkip(Quant);
    MatCol(1,130,"Товар",0,ArtCode,false,INSClass);
    Flip(flipnr); flipnr = flipnr + 1;
    if (HasVarieties) then begin
      MatCol(1,200,"Треб. кол-во",0,OrdQuant,true,MATVARINSClass);
    end else begin
      MatCol(1,200,"Треб. кол-во",0,OrdQuant,true,0);
    end;
    MatCol(1,250,"Отправ. кол-во",0,SentQuant,true,0);
    MatCol(1,300,"Получ. кол-во",0,Quant,true,0);
    MatCol(1,350,"Описание",0,Spec,false,0);
  end else begin
    MatCol(1,32,"Товар",0,ArtCode,false,INSClass);
    Flip(flipnr);  flipnr = flipnr + 1;
    if (HasVarieties) then begin
      MatCol(1,86,"Треб.кол.",0,OrdQuant,true,MATVARINSClass);
    end else begin
      MatCol(1,86,"Треб.кол.",0,OrdQuant,true,0);
    end;
    MatCol(1,148,"Отпр.кол.",0,SentQuant,true,0);
    MatCol(1,210,"Получ.кол.",0,Quant,true,0);
    MatCol(1,272,"Наименование",0,Spec,false,0);
  end;
//  MatCol(1,-260,"Старая цена",0,OldPrice,true,0);
//  MatCol(1,-160,"Накл. расх.",0,ExtraSCost,true,0);
//  MatCol(1,-80,"Новая цена",0,NewPrice,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  if (HasVarieties) then begin
    MatCol(1,86,"Треб.кол.",0,OrdQuant,true,MATVARINSClass);
  end else begin
    MatCol(1,86,"Треб.кол.",0,OrdQuant,true,0);
  end;
  MatCol(1,148,"Отпр.кол.",0,SentQuant,true,0);
  MatCol(1,210,"Получ.кол.",0,Quant,true,0);
  MatCol(1,272,"Наименование",0,Spec,false,0);

//  MatCol(1,-260,"Старая цена",0,SentOldPrice,true,0);
//  MatCol(1,-160,"Накл. расх.",0,SentExtraSCost,true,0);
//  MatCol(1,-80,"Новая цена",0,SentNewPrice,true,0);

  MatCol(1,-480,"Старая цена",0,OldPrice,true,0);
  MatCol(1,-400,"Накл. расх.",0,ExtraSCost,true,0);
  MatCol(1,-320,"Новая цена",0,NewPrice,true,0);
  MatCol(1,-240,"Стар.цена отпр",0,SentOldPrice,true,0);
  MatCol(1,-160,"Н/расх.отпр",0,SentExtraSCost,true,0);
  MatCol(1,-80,"Нов.цена отпр",0,SentNewPrice,true,0);

  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,86,"Наименование",0,Spec,false,0);
  if (HasObjects) then begin
    MatCol(1,-380,"Объекты",0,Objects,false,ObjSClass);
  end;
  if (HasSerialNumbers) then begin
    MatCol(1,-280,"Серийный номер",0,SerialNr,false,SerialNrSClass);
  end;
  MatCol(1,-140,"Отпускн. цена",0,BasePrice,true,0);
  MatCol(1,-40,"Коэфф.",0,Coefficient,false,0);
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,86,"Наименование",0,Spec,false,0);
  if (HasSerialNumbers) then begin
    MatCol(1,-280,"Серийный номер",0,SerialNr,false,SerialNrSClass);
  end;
  MatCol(1,-135,"Ширина",0,UnitXval,true,0);
  MatCol(1,-90,"Высота",0,UnitYval,true,0);
  MatCol(1,-45,"Глубина",0,UnitZval,true,0);
  if (HasPositions) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,86,"Наименование",0,Spec,false,0);
    MatCol(1,-180,"С места",0,FrPosCode,false,UsedPosSClass);
    MatCol(1,-90,"На место",0,ToPosCode,false,FreePosSClass);
  end;
  DeleteRowTest;
  EndMatrix;
  vs = 20;
  v = 18;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;

  EditField(200,-52,62,"Mасса",ViewOnly,TotWeight,true,0);
  EditField(360,-52,62,"Oбъем",ViewOnly,TotVolume,true,0);

  CheckBox(20,-52,0,"Подтверждено",OrdFlag);
  CheckBox(20,-36,0,"Отправлено",SentOKFlag);
  CheckBox(20,-20,0,"Получено",OKFlag);
  EditField(170,-20,62,"Отпр. к-во",Normal,TotSentQty,true,0);
  EditField(310,-20,62,"Получ. к-во",Normal,TotQty,true,0);
  if (HasLocalization("PRT")) then begin
    EditField(550,-40,150,"Tax Auth. Approval",Normal,TaxAdminServSeal,false,0);
//    SoftEditField(550,-40,150,"Tax Auth. Approval",Normal,"TaxAdminServSeal",false,0,M4Str,200);
  end;
  EditField(550,-20,100,"Неучт. накладные расходы",Normal,OtherExtraCosts,false,0);
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
    h1 = 110; vs = 20;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
    EditField(h1,v=6,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h1,v+vs,50,"Осн. валюта 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h1,v+vs,50,"Осн. валюта",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h1,v+(vs*2),50,"Осн. валюта 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Курс",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осн. валюта 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Осн. валюта 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осн. валюта",false);
      end;
    end else begin
      EditField(h1,v+=vs,50,"Осн. валюта 1",Normal,BaseRate1,true,0);
      EditField(h1,v+=vs,50,"Осн. валюта 2",Normal,BaseRate2,true,0);
    end;
  end;

  Tile(tilenr,110,false,tilenr,PlanSendDate); tilenr = tilenr + 1;
  vs = 20; h1 = 130; h2 = 330; h3 = 560;
  EditField(h,v=6,80,"План. дата отпр.",Normal,PlanSendDate,false,PasteCurDate);
  EnterSkip(PlanSendTime);
  if (HasLocalization("PRT")==false or IsStandardProduct==false) then begin
  	EditField(h2,v,40,"План. длит., дней",ViewOnly,PlanDurationDays,false,0);
  end;
  EditField(h,v+=vs,80,"План. время отпр.",Normal,PlanSendTime,false,PasteCurTime);
  EnterSkip(PlanArrDate);
  if (HasLocalization("PRT")==false or IsStandardProduct==false) then begin
  	EditField(h2,v,80,"План. длит., часов",ViewOnly,PlanDurationTime,false,0);
  end;
  EditField(h3,v=6,80,"План. дата доставки",Normal,PlanArrDate,false,PasteCurDate);
  EditField(h3,v+=vs,80,"План. время доставки",Normal,PlanArrTime,false,PasteCurTime);
  if (HasLocalization("PRT")==false or IsStandardProduct==false) then begin
  	EditField(h,vm=(v+=32),80,"Фактич. дата отпр.",Normal,ActSendDate,false,PasteCurDate);
  	EnterSkip(ActSendTime);
  	EditField(h2,v,40,"Фактич. длит., дней",ViewOnly,ActDurationDays,false,0);
  	EditField(h,v+=vs,80,"Фактич время отпр.",Normal,ActSendTime,false,PasteCurTime);
  	EnterSkip(ActArrDate);
  	EditField(h2,v,80,"Фактич. длит., часов",ViewOnly,ActDurationTime,false,0);
  	EditField(h3,v=vm,80,"Фактич. дата прибытия",Normal,ActArrDate,false,PasteCurDate);
  	EditField(h3,v+=vs,80,"Фактич. время прибытия",Normal,ActArrTime,false,PasteCurTime);
  end;

  Tile(tilenr,110,false,tilenr,FreightCode); tilenr = tilenr + 1;
  vs = 20; h2 = 255;
  EditField(h=130,v=6,60,"Трансп. компания",Normal,FreightCode,false,FreightCompanySClass);
  EditField(h2,v,-40,"ИНН",Normal,FreightCompanyRegNr,false,0);
  EditField(h,v+=vs,-40,"Название",Normal,FreightCompany,false,0);
  EditField(h,v+=vs,-40,"Инф-ия о машине",Normal,TruckInfo,false,0);
  EditField(h,v+=vs,-40,"Водитель",Normal,Driver,false,0);
  EditField(h,v+=vs,-40,"ТТН",Normal,CMRText,false,0);
  if (HasNumberSeries and HasLocalization("PRT")) then begin
    if (HasOfficialSerNr) then begin
      EditField(h,v+=vs,100,"Official Ser No. 2",Normal,OfficialSerNr2,false,0);
      EditField(h2+100,v,135,"Status",Normal,Status,false,SetSClass);
    end;
  end;

  Tile(tilenr,200,false,tilenr,FrAddr0); tilenr = tilenr + 1;
  vs = 20; h2 = 255;
  EditField(h=130,v=6,-40,"C адресв",Normal,FrAddr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr2,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr3,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr4,false,0);
  EditField(h,v+=vs,-40,"Через адрес",Normal,ThrouAddr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,ThrouAddr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,ThrouAddr2,false,0);
  EditField(h,v+=vs,-40,"",Normal,ThrouAddr3,false,0);
  EditField(h,v+=vs,-40,"",Normal,ThrouAddr4,false,0);
  EditField(h,v+=vs,-40,"На адрес",Normal,ToAddr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr2,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr3,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr4,false,0);

  //Добавлено 25.11.09 INAU
  Tile(tilenr, 150, false, tilenr, LogNewUser);
  EditField(h=130,v=20,70,"Создал",ViewOnly,LogNewUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogNewDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogNewTime,false,0);
  EditField(h=130,v=40,70,"Сохранил",ViewOnly,LogSaveUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogSaveDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogSaveTime,false,0);
  EditField(h=130,v=60,70,"Подтвердил",ViewOnly,LogConfirmUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogConfirmDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogConfirmTime,false,0);
  EditField(h=130,v=80,70,"Отправил",ViewOnly,LogSendUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogSendDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogSendTime,false,0);
  EditField(h=130,v=100,70,"Получил",ViewOnly,LogReciveUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogReciveDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogReciveTime,false,0);
  //Добавлено 11.12.09 INAU
  EditField(h=130,v=120,70,"Распечатал",ViewOnly,LogPrintUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogPrintDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogPrintTime,false,0);

  SpecialMenu("Экспорт заказа Максану", ' ', 14, "ExportStockMovMaksanDsm");
  SpecialMenu("автозаполнение колонки получ.кол",' ',4,"DRemoveMenu");
  SpecialMenu("показать остатки по недостающим товарам",' ',5,"DOstMenu");
  SpecialMenu("Печать стикеров",' ',10,"RunItemStikMovRn");
  SpecialMenu("сделать экспорт штрих-кодов",' ',6,"DBarCodeMovMenu");
  SpecialMenu("импортировать собранное кол-во",' ',7,"DImpMovMenu");
  SpecialMenu("накладная на дорогу",'N',8,"NaklFromStockMove");
  SpecialMenu("Cканировать",'S',9,"ScanItMov");
  SpecialMenu("Печать стикеров",' ',11,"StockMovIStickerDsm");
  SpecialMenu("Создать документ разногласий",' ',12,"StockMovCreateIRetOrdDsm"); //24.12.10 INAU
  SpecialMenu("Создать задачу",' ',13,"NewQASMDsm");
  SpecialMenu("Стоимость в старой цене за единицу",'=',0,"StockMovFillFIFODsm");
  SpecialMenu("Статус товара",'I',1,"ItemStatusStockMovDsm");
  SpecialMenu("Поиск товара",'f',1,"ItemSearchDsm");

  if (HasModNL) then begin
    SpecialMenu("Открыть запись операции отправки",' ',2,"OpenTRFromStockMovSent");
    SpecialMenu("Открыть запись операции получения",' ',3,"OpenTRFromStockMov");
  end;
  if (HasQualityControl) then begin
    SpecialMenu("Контроль качества",'u',2,"QualConFromStockMovDsm");
  end;
  if (HasLocalization("PRT")) then begin
    if (HasETaxDocuments) then begin
      SpecialMenu("Send to Tax Authorities",'',10,"EShipPRTDsm");
    end;
  end;
  EndWindow;


//=============================================== BarcodeVc
  WindowBegin("Штрих-код",BarcodeDClass,CGview,-);
  SetWRect(64,80,509,170);
  UseView(BarcodeVc);
  EditField(120,v=6,-40,"Штрих-код",Normal,Barcode,false,0);
  EditField(120,v+=20,-40,"Товар",Normal,Itemcode,false,INSClass);
  EditField(120,v+=20,-40,"Клиент",Normal,CustCode,false,CUSClass);
  EditField(120,v+=20,-40,"Комментарий",Normal,Comment,false,0);
  //
  CheckBox(120,v+=20,40,"Актуален",ActualFlag);
  CheckBox(220,v,40,"1C",1CFlag);
  EndWindow;


//=============================================== INVc
  WindowBegin("Товар",INDClass,CGview,-);
  SetWRect(20,80,900,440);
  Sizeable(-1,-1,-1,0);
  DynamicWindow;
  UseView(INVc);
  if (HasJewelleryInterface) then begin
    Tile(0,107,false,"",Code);
  end else begin
    Tile(0,87,false,"",Code);
  end;
  v = 6; vs = 20; h = 155; h1 = 300; h2 = 385; h3 = 395; h4 = 285; h5 = 433;
  EditField(h,v, 150,"Код товара",Normal,Code,false,0);
  EditField(h2,v,80,"Группа",Normal,Group,false,ITSClass);

  EditFieldTL(h2 + 200,v,20,"Aлфавитка",M4UStr, Normal, 1, AlphaBet,false,0);

  EditField(h,v+=vs,335,"Наименование",Normal,Name,false,0);

  EditField(h,v+=vs,335,"Наименование2",Normal,Name2,false,0);

  if (HasJewelleryInterface) then begin
    EditField(h,v+=vs,150,"Альтернативный код",Normal,AlternativeCode,false,0);
  end;
  tilenr = 1;
  TileButton(tilenr,"Цена"); tilenr = tilenr + 1;
  if (HasJewelleryInterface) then begin
    TileButton(tilenr,"Ювелир."); tilenr = tilenr + 1;
    TileButton(tilenr,"Часы"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Склад"); tilenr = tilenr + 1;
  if (StandardHansa==false) then begin
    TileButton(tilenr,"Упр. складом"); tilenr = tilenr + 1;
  end;
  if (UserCanAction("ViewCostPrice",true)) then begin
    TileButton(tilenr,"Стоимость"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Структура"); tilenr = tilenr + 1;
  TileButton(tilenr,"Счета"); tilenr = tilenr + 1;
  if (GuiType==kGuiiPhone) then begin
    TileButton(tilenr,"Изобр."); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Варианты"); tilenr = tilenr + 1;
  TileButton(tilenr,"Текст"); tilenr = tilenr + 1;
  TileButton(tilenr,"Модель ст-ти"); tilenr = tilenr + 1;
  if (StandardHansa==false) then begin
    TileButton(tilenr,"Доп.данные"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Записки"); tilenr = tilenr + 1;
  if (HasCharts) then begin
    TileButton(tilenr,"BI"); tilenr = tilenr + 1;
  end;

  TileButton(tilenr, "Kлассификация");

  CheckBox(650,26,0,"Закрыт",Terminated);
  CheckBox(650,46,0,"Не для продажи",NotForSales);


  tilenr = 1;
//  CheckBox(h,v+=vs,0,"Закрыт",Terminated);
//  CheckBox(h2,v,0,"Не для продажи",NotForSales);
  Tile(tilenr,209,false,tilenr,Unittext); tilenr = tilenr + 1;
  EditField(h,v=6 ,100,"Единица измерения",Normal,Unittext,false,UnitSClass);

  EditField(-150, v ,100,"Тестер",Normal,tTesterCode,false,INSClass);

  if (HasJewelleryInterface) and (UserCanAction("ViewCostPrice",true)) then begin
    EditField(h,v+=vs,100,"Стоимость",Normal,InPrice,true,0);
  end;
  EditField(h,v+=vs,100,"Базовая цена",Normal,UPrice1,true,0);
  EditField(h,v+=vs,100,"Изменение баз. цены",ViewOnly,LastBasePriceChange,true,0);
  EditField(h,v+=vs,100,"Фактор цены",Normal,PriceFactor,true,0);
  EditField(h,v+=vs,100,"Формула тов.",Normal,CalcPrice,false,CPMSClass);
  EditField(h,v+=vs,100,"Наценка, %",Normal,Markup,true,0);
  EditField(h,v+=vs,100,"% премии",Normal,Bonus,true,0);
  EditField(h,v+=vs,-240,"Объекты",Normal,Objects,false,ObjSClass);
  if (HasItemClassification) then begin
    EditField(h,v+=vs,-240,"Классификация",Normal,DispGroups,false,DISClass);
  end;

  EditFieldTL(h, v+=vs, 60, "Kод серии", M4Code, Normal, 10, VItemGroupCode, false, VItemGroupSClass);
  EditField(h + 140, v, -20, "Cерия", ViewOnly, VItemGroupName, false, 0);

  if (StandardHansa==false) then begin
    ButtonFrame(h1,v=24,120,4,"Тип товара");
  end else begin
    ButtonFrame(h1,v=24,120,3,"Тип товара");   // From dict
  end;
  RadioButton(h1,v,kItemTypePlain,0,"Свободный",ItemType);
  RadioButton(h1,v+=16,kItemTypeStocked,0,"Складируемый",ItemType);
  RadioButton(h1,v+=16,kItemTypeStructured,0,"Структурированный",ItemType);
  if (StandardHansa==false) then begin
    RadioButton(h1,v+=16,kItemTypeService,0,"Работа",ItemType);
  end;
  Pict_Field(-205,8,-35,178,"");
  if (GuiType==kGuiCocoa) then begin
    PushButton(-160,182,-80,202,ToolImagePicker,"Добавить картинку");
  end;
  if (StandardHansa==false) then begin
    CheckBox(h1,v+=32,0,"В проекте товар как материал",ItemMaterial);
  end;

  if (HasJewelleryInterface) then begin
    Tile(tilenr,110,false,tilenr,Metal); tilenr = tilenr + 1;
    EditField(h,v=6, 140,"Метал",Normal,Metal,false,0);
    EditField(h,v+=vs, 140,"Вес",Normal,RowWeight,false,0);
    EditField(h,v+=vs, 140,"Размер",Normal,Size,false,0);
    EditField(h,v+=vs, 140,"Длина",Normal,Length,false,0);
    EditField(h,v+=vs, 140,"Ссылка",Normal,Reference,false,0);
    v = 6;
    EditField(h5,v, 140,"Гл. камень детали",Normal,MajStoneDet,false,0);
    EditField(h5,v+=vs, 140,"Цвет",Normal,Colour,false,0);
    EditField(h5,v+=vs, 140,"Прозрачность",Normal,Clarity,false,0);
    EditField(h5,v+=vs, 140,"Сертификат",Normal,Cert,false,0);
    EditField(h5,v+=vs, 140,"Мин. камень детали",Normal,MinStoneDet,false,0);
    Tile(tilenr,90,false,tilenr,WatchBrand); tilenr = tilenr + 1;
    EditField(h,v=6, 140,"Марка часов",Normal,WatchBrand,false,0);
    EditField(h,v+=vs, 140,"Наим. стиля",Normal,StyleName,false,0);
    EditField(h,v+=vs, 140,"Метал часов",Normal,WatchMetal,false,0);
    EditField(h,v+=vs, 140,"Движение",Normal,Movement,false,0);
    v = 6;
    EditField(h5,v, 140,"Браслет/ремешок",Normal,BrcStr,false,0);
    EditField(h5,v+=vs, 140,"Род",Normal,Gender,false,0);
    EditField(h5,v+=vs, 140,"Проч.",Normal,Other,false,0);
    EditField(h5,v+=vs, 140,"Проч.2",Normal,Other2,false,0);
  end;

  Tile(tilenr,190,false,tilenr,MinLevel);  tilenr = tilenr + 1; // Need to clean this Tile up!
  v = 6;
  vm = v;
  ButtonFrame(h1,v+=24,143,3,"Серийные номера");
  RadioButton(h1,v,0,0,"нет",SerNrf);
  RadioButton(h1,v+=16,1,0,"на единицу",SerNrf);
  RadioButton(h1,v+=16,2,0,"на партию",SerNrf);
  CheckBox(h1+200,v,0,"Не требовать номер партии на сч/ф POS",DonotRequireBatchNrOnIVCash);
  EditField(h,v=6,100,"Мин. кол-во на скл.",Normal,MinLevel,true,0);
  EditField(h,v+=vs,100,"Макс. кол-во на скл.",Normal,MaxLevel,true,0);
  EditField(h,v+=vs  ,100,"Отдел",Normal,Department,false,DepSClass);
  EditField(h,v+=vs  ,100,"Полка",Normal,InvCode,false,0);
  EditField(h,v+=vs,100,"Источник по умолч.",Normal,DefaultSource,false,SourceSClass);
  EditField(h5,v ,50,"Налог на окр. среду/кг",Normal,RepaPricePerWeight,true,0);
  EditField(h6=650,v ,80,"Основной тип заказа",Normal,DefOrderType,false,SetSClass);
  if (StandardHansa==false) then begin
    EditField(h,v+=vs ,100,"Степень риска",Normal,HazLevCode,false,HazLevSClass);
    EditField(h5,v ,50,"% алкоголя",Normal,AlcPrc,true,0);
  end;
  EditField(h,v+=vs ,100,"Единица 2",Normal,Unittext2,false,UnitSClass);
  EditField(h5,v ,50,"Конвертация 1",Normal,Conversion1,true,0);
  EditField(h,v+=vs,100,"Коэфф-нт единицы",Normal,UnitCoefficient,true,0);
  EditField(h5,v ,50,"Конвертация 2",Normal,Conversion2,true,0);
  if (StandardHansa==true) then begin
    EditField(h,v+=vs ,50,"Ширина",Normal,Width,true,0);
    EditField(h4,v ,50,"Высота",Normal,Height,true,0);
    EditField(h5,v ,50,"Глубина",Normal,Depth,true,0);
    EditField(h,v+=vs ,50,"Объем",Normal,Volume,true,0);
    EditField(h4,v ,50,"Плотность",Normal,Density,true,0);
    EditField(h5,v ,50,"Вес",Normal,Weight,true,0);
  end;
  if (StandardHansa==false) then begin
    Tile(tilenr,170,false,tilenr,LocArea);  tilenr = tilenr + 1;
    EditField(h,vm=(v=6) ,100,"Товар паллеты",Normal,DefPalletItem,true,INSClass);
    EditField(h5,v ,80,"Участок погрузки",Normal,PickArea,false,LocAreaSClass);

    EditField(h5 + 200,v,50,"Кратность отгрузки",Normal,MultiShip,true,0);

    EditField(h,v+=vs ,100,"Участ. скл. по умолч.",Normal,LocArea,false,LocAreaSClass);
    EditField(h5,v ,50,"Паллет на погрузке",Normal,PalletsInPickArea,true,0);

    EditField(h5 + 200,v,50,"Объем ящика",Normal,BoxVol,true,0);

    EditField(h,v+=vs ,50,"Макс. кол. на паллете",Normal,QtyonPallet,true,0);
    EditField(h4,v ,50,"Слои в палл.",Normal,PalletLayers,true,0);
    EditField(h5,v ,50,"Кол-во в слое",Normal,QtyonPalletLayer,true,0);
    EditField(h,v+=vs ,50,"Ширина паллеты",Normal,PalletWidth,true,0);
    EditField(h4,v ,50,"Высота",Normal,PalletHeight,true,0);
    EditField(h5,v ,50,"Глубина",Normal,PalletDepth,true,0);
    EditField(h,v+=vs ,50,"Шир. места по умолч.",Normal,DefPosWidth,true,0);
    EditField(h4,v ,50,"Высота",Normal,DefPosHeight,true,0);
    EditField(h5,v ,50,"Глубина",Normal,DefPosDepth,true,0);
    EditField(h,v+=vs ,50,"Ширина",Normal,Width,true,0);
    EditField(h4,v ,50,"Высота",Normal,Height,true,0);
    EditField(h5,v ,50,"Глубина",Normal,Depth,true,0);
    EditField(h,v+=vs ,50,"Объем",Normal,Volume,true,0);
    EditField(h4,v ,50,"Плотность",Normal,Density,true,0);
    EditField(h5,v ,50,"Нетто",Normal,NetWeight,true,0);
    EditField(h5,v+=vs ,50,"Вес",Normal,Weight,true,0);
  end;
  if (UserCanAction("ViewCostPrice",true)) then begin

  Tile(tilenr,190,false,tilenr,InPrice);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6),100,"Стоимость",Normal,InPrice,true,0);
  if (StandardHansa==false) then begin
    EditField(h5,v,70,"Изменение стоимости",ViewOnly,LastPriceChange,true,0);
  end else begin
    EditField(h3,v,70,"Изменение стоимости",ViewOnly,LastPriceChange,true,0);
  end;
  if (StandardHansa==false) then begin
    EditField(h,v+=vs ,100,"Стоим. в осн. вал. 2",Normal,InPriceB2,true,0);
    ButtonFrame(h1,v+=24,200,4,"Обновл. стоим. по поступл.");
  end else begin
    ButtonFrame(h1,v+=40,210,4,"Обновл. стоим. по поступл.");   // From dict
  end;
  RadioButton(h1,v,0,0,"не изменять",UpdateCost);
  RadioButton(h1,v+=16,1,0,"на ст-ть посл.покупки,вкл.накл.з.",UpdateCost);
  RadioButton(h1,v+=16,2,0,"на средневзвешенную",UpdateCost);
  RadioButton(h1,v+=16,3,0,"на цену посл.покупки,искл.накл.з.)",UpdateCost);
  ButtonFrame(h5=540,v=v-3*16,200,3,"Обнов.стоим. по переоц.");
  RadioButton(h5,v,0,0,"не обновлять",SRUpdateCost);
  RadioButton(h5,v+=16,1,0,"стоим. последн. переоценки",SRUpdateCost);
  RadioButton(h5,v+=16,2,0,"средневзвешенная",SRUpdateCost);
  if (StandardHansa==false) then begin
    EditField(h,v=vm+2*vs,100,"Накладные расходы",Normal,ExtraCost,true,0);
  end else begin
    EditField(h,v=vm+vs,100,"Накладные расходы",Normal,ExtraCost,true,0);   // From dict
  end;
  EditField(h,v+=vs ,100,"Средневзвешенная",Normal,WeighedAvPrice,true,0);
  if (StandardHansa==false) then begin
    EditField(h,v+=vs ,100,"Средневзв. в осн.вал.2",Normal,WeighedAvPriceB2,true,0);
  end;
  EditField(h,v+=vs ,100,"Посл.покуп.(вкл.накл.)",Normal,LastPurchPrice,true,0);
  EditField(h,v+=vs ,100,"Посл.покуп.(иск.накл.)",Normal,LastPurchPrice2,true,0);
  EditField(h,v+=vs ,100,"Валюта посл. покупки",Normal,LastPurchCurncyCode,false,CurncyCodeSClass);
  EditField(h,v+=vs ,100,"Фикс. фрахт",Normal,FixedFreight,true,0);
  CheckBox(h1,v,0,"Включать фиксированный сбор на товар",InclItemFreight);
  CheckBox(h5,v,0,"С акцизом",HasExcise);
  end;

  Tile(tilenr,170,false,tilenr,Recepy);  tilenr = tilenr + 1;
  EditField(h,v=6 ,120,"Структура",Normal,Recepy,false,RecSClass);
  CheckBox(h1,v,0,"Разбивать на компоненты при вводе",ExplodeRec); // "Show components on documents" is better English but VERY confusing
  EditField(h,v+=vs ,120,"Структура в сч/ф",Normal,InvRecepy,false,RecSClass);
  EditField(h2,v,150,"Штрих-код",Normal,BarCode,false,0);

  EditField(630,v,150,"Штрих-код 2",Normal,BarCode2,false,0);

  EditField(h,v+=vs ,120,"Товар контракта",Normal,ContractItem,false,INSClass);
  EditField(h2,v,150,"Код произв-ля",Normal,EUCodex,false,CommoditySClass);
  v = v + vs;
  if (StandardHansa==false) then begin
    EditField(h,v,120,"Арендное фактур.",Normal,RentalItem,false,INSClass);
  end;
  EditField(h2,v,150,"Код EKN",Normal,EKNCode,false,0); // i think it is same as Commodity Code
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,150,"Класс. прод./услуг",Normal,CPSCode,false,0);
  end;
  EditField(h,v+=vs ,120,"Гарантия, мес.",Normal,WarrantyLength,true,0);
  EditField(h2,v,150,"Цвет",Normal,colnr,false,SetSClass);
  EditField(h,v+=vs,-40,"Альтернативный код",Normal,AlternativeCode,false,0);
  EditField(h,v+=vs,-40,"Предупреждение",Normal,WarnText1,false,0);

  Tile(tilenr,170,false,tilenr,SalesAcc);  tilenr = tilenr + 1;
  v = 6;
  vm = v;
  EditField(h,vm,55,"Счет реализации",Normal,SalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameRUS & "Счет реализации, ",Normal,EUSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Сч/реал., эксп.",Normal,ExpSalesAcc,false,AccSClass);
  if (StandardHansa==false) then begin
    EditField(h,v+=vs,55,"Серв. фактур. сч/реал.",Normal,SVOInvbleSalesAcc,false,AccSClass);
    EditField(h,v+=vs,55,"Серв. гар. сч/реал.",Normal,SVOWarrantySalesAcc,false,AccSClass);
    EditField(h,v+=vs,55,"Серв.контр. сч/реал.",Normal,SVOContractSalesAcc,false,AccSClass);
    EditField(h,v+=vs,55,"Серв.гудвил сч/реал.",Normal,SVOGoodwillSalesAcc,false,AccSClass);
  end;
  EditField(h,v+=vs,55,"Исп. компонент-в",Normal,CompUsage,false,AccSClass);
  EditField(h,v+=vs,55,"Счет исп-ния мат. проекта",Normal,ProjMaterialsUsageAcc,false,AccSClass);

  EditField(h2=360,v=vm,55,"Внутр. счет стоим.",Normal,CostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,VATZoneNameRUS & "Счет стоимости",Normal,EUCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"Счет затрат, эксп.",Normal,ExpCostAcc,false,AccSClass);
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,55,"Серв. фактур. сч/затр.",Normal,SVOInvbleCostAcc,false,AccSClass);
    EditField(h2,v+=vs,55,"Серв. гар. сч/затр",Normal,SVOWarrantyCostAcc,false,AccSClass);
    EditField(h2,v+=vs,55,"Серв. контр. сч/затр.",Normal,SVOContractCostAcc,false,AccSClass);
    EditField(h2,v+=vs,55,"Серв. гудвил сч/затр",Normal,SVOGoodwillCostAcc,false,AccSClass);
    EditField(h2,v+=vs,55,"Отель - врем. сч.",Normal,HotelWIPAcc,false,AccSClass);
  end;
  EditField(h2=530,v=vm,20,"Код НДС",Normal,VATCode,false,VATCodeSClass);
  EditField(h2,v+=vs,20,VATZoneNameRUS & "Код НДС",Normal,VATCodeEU,false,VATCodeSClass);
  EditField(h2,v+=vs,20,"Код НДС, эксп.",Normal,VATCodeExp,false,VATCodeSClass);
  CheckBox(h2,v+=20,0,"Вычислять налоговые сборы",Perceptions);
  if (StandardHansa==false) then begin
    CheckBox(h2,v+=16,0,"Вычислять удерживаемые налоги",Withholdings);
    EditField(h2=670,v=vm,50,"Ш-н расч. нал",Normal,TaxTemplateCode,false,TaxTemplateSClass);
    EditField(h2,v+=vs,50,VATZoneNameRUS & "ш-н расч. нал",Normal,TaxTemplateCodeEU,false,TaxTemplateSClass);
    EditField(h2,v+=vs,50,"Экс. ш-н расч. нал",Normal,TaxTemplateCodeExp,false,TaxTemplateSClass);
  end;

  if (GuiType==kGuiiPhone) then begin
    Tile(tilenr,70,false,tilenr,-);  tilenr = tilenr + 1;
    AttachmentDisplay(10,10,200,200);
//    PushButton(30,10,-80,40,ToolImagePicker,"Take picture");
//    ControlLabel(0,0,0,0,"Take picture","SystemFont",17,kTextStyleBold,AdjCenter,patM4ReportsTextBlue);
  end;

  Tile(tilenr,70,false,tilenr,VARMask);  tilenr = tilenr + 1;
  EditField(h,v=6,-40,"Маска варианта",Normal,VARMask,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"Порядок в отчете",Normal,VARRepOrder,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"Подмножества",Normal,VARSubsets,false,VARSubsetsSClass);

  Tile(tilenr,120,true,tilenr,Math);  tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-32,-40,-,99);
  MatCol(1,24,"Язык",0,LangCode,false,LangSClass);
  MatCol(1,94,"Текст",0,Text,false,0);
  EndMatrix;

  Tile(tilenr,230,false,tilenr,CostPerc);  tilenr = tilenr + 1;
  ButtonFrame(h=100,vm=(v=20),230,6,"Первичная модель стоимости");
  RadioButton(h,v,0,0,"По умолчанию",PrimaryCostModel);
  RadioButton(h,v+=16,1,0,"Стоимость покупки",PrimaryCostModel);
  RadioButton(h,v+=16,2,0,"% _от базовой цены",PrimaryCostModel);
  EditField(h+150,v,55,"%",Normal,CostPerc,true,0);
  RadioButton(h,v+=16,3,0,"Средневзвешенная",PrimaryCostModel);
  RadioButton(h,v+=16,4,0,"По очереди",PrimaryCostModel);
  RadioButton(h,v+=16,kCostModelNoneItem,0,"Нет",PrimaryCostModel);
  ButtonFrame(h,v+=40,230,3,"Модель стоимости по очереди");
  RadioButton(h,v,0,0,"По умолчанию",QueuedCostModel);
  RadioButton(h,v+=16,1,0,"FIFO цена",QueuedCostModel);
  RadioButton(h,v+=16,2,0,"LIFO цена",QueuedCostModel);

  ButtonFrame(h2=380,v=vm,200,3,"Стоимость на сер.номер");
  RadioButton(h2,v,0,0,"По умолчанию",FIFOPerSerialNr);
  RadioButton(h2,v+=16,1,0,"Стоимость не на серийный номер",FIFOPerSerialNr);
  RadioButton(h2,v+=16,2,0,"Стоимость на серийный номер",FIFOPerSerialNr);
  ButtonFrame(h2,v+=40,200,3,"Стоимость по складам");
  RadioButton(h2,v,0,0,"По умолчанию",FIFOPerLocation);
  RadioButton(h2,v+=16,1,0,"Стоимость по очереди не по складам",FIFOPerLocation);
  RadioButton(h2,v+=16,2,0,"Стоимость по очереди по каждому складу",FIFOPerLocation);
  ButtonFrame(h2,v+=40,200,3,"Средневзвешенная по складам");
  RadioButton(h2,v,0,0,"По умолчанию",WAPerLocation);
  RadioButton(h2,v+=16,1,0,"Средневзвешенная не по складам",WAPerLocation);
  RadioButton(h2,v+=16,2,0,"Средневзвешенная по каждому складу",WAPerLocation);
/*5.3
  ButtonFrame(h2,v+=40,200,3,"Cost Price per Location");
  RadioButton(h2,v,0,0,"Default",CostPricePerLocation);
  RadioButton(h2,v+=16,1,0,"Cost Price not per Location",CostPricePerLocation);
  RadioButton(h2,v+=16,2,0,"Cost Price per Location",CostPricePerLocation);
*/
  if (StandardHansa==false) then begin
    Tile(tilenr,240,false,tilenr,-); tilenr = tilenr + 1;
    h = 180; v = 6;
    label = UserDefined("INVc","UserStr1");
    if (nonblank(label)) then begin
      EditField(h,v=6 ,-40,label,Normal,UserStr1,false,0);
    end;
    label = UserDefined("INVc","UserStr2");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-40,label,Normal,UserStr2,false,0);
    end;
    label = UserDefined("INVc","UserStr3");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-40,label,Normal,UserStr3,false,0);
    end;
    label = UserDefined("INVc","UserStr4");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-40,label,Normal,UserStr4,false,0);
    end;
    label = UserDefined("INVc","UserStr5");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-40,label,Normal,UserStr5,false,0);
    end;
    label = UserDefined("INVc","UserVal1");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,50,label,Normal,UserVal1,true,0);
    end;
    label = UserDefined("INVc","UserVal2");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,50,label,Normal,UserVal2,true,0);
    end;
    label = UserDefined("INVc","UserVal3");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,50,label,Normal,UserVal3,true,0);
    end;
    label = UserDefined("INVc","UserDate1");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,80,label,Normal,UserDate1,true,PasteCurDate);
    end;
    label = UserDefined("INVc","UserDate2");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,80,label,Normal,UserDate2,true,PasteCurDate);
    end;
    label = UserDefined("INVc","UserDate3");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,80,label,Normal,UserDate3,true,PasteCurDate);
    end;
  end;

  EditField(h,v+=vs,80,"Начальная дата",Normal,StartDate,false,0); //01.09.11 INAU
  EditField(h,v+=vs,80,"Аналог",Normal,OrigItem,false,INSClass); //10.10.11 INAU
  EditField(h2,v,-20,"Замена",Normal,SubstItems,false,INSClass); //10.10.11 INAU

  Tile(tilenr,400,false,tilenr,Math2); tilenr = tilenr + 1;
  StaticText(50,v=20,"Записки",true);
  TextField(60,v-5,-20,370,Math2,0);
  if (HasCharts) then begin
    Tile(tilenr,400,false,tilenr,-); tilenr = tilenr + 1;
    ChartArea(10,6,-10,390,"$INDCLass_BIChart");
  end;

  Tile(tilenr, 240, false, tilenr, -);
  tilenr = tilenr + 1;
  h = 145;
  EditField(h, v = 6, 200, "Базовое наименование", Normal, BaseName, False, 0);
  EditField(h,v+=vs,-50,"Классификация",Normal,DispGroups,false,DISClass);
  ColourPushButton(-45,v,-15,v+16,"BtnShowClassOld","...",2);
  EditField(h,v+=vs,-50,"Классы",Normal,DispGroupsNew,false,VClassSClass);
  ColourPushButton(-45,v,-15,v+16,"BtnShowClassNew","...",2);

  SpecialMenu("Просмотр наименования",'',2,"ViewConcatName");
  SpecialMenu("Методики по работе с товаром",'',6,"tINMetDsm");
  SpecialMenu("Прейскурант",' ',3,"IItemsExport");

  if (UserCanReport("INInfoRn","",true)) then begin
    SpecialMenu("Справка по товару",'I',0,"INStatusINDsm");
  end;
  SpecialMenu("Создать товар поставщика",' ',1,"PIFromINDsm");
  SpecialMenu("Создать структуру",' ',2,"RecFromINDsm");
//  SpecMenuItem("Recalculate Price List",' ',2);
  if (UserCanReport("INrsRn","INrsRClass",true)) then begin
    SpecialMenu("История товара",'h',3,"INHistINDsm");//CMD H DOES HIDE HANSA
  end;
  SpecialMenu("Статус товара по складу",' ',4,"LocItemStatDsm");
  if (HasJewelleryInterface) and (UserCanReport("INInfoRn","",true)) then begin
    SpecialMenu("Статус товара по альт. коду",'S',5,"ItemStatusAltINDsm");
  end;
  EndWindow;


//=============================================== CLInVc
  WindowBegin("Приход в кассу",CLInDClass,CGview,-);
  SetWRect(20,80,700,550);
  UseView(CLInVc);
  ActiveFieldOnNew("TransDate");
  Sizeable(-1,-1,0,0);
  vs = 20; h = 130; h2=h+200; h3 = 472; v=6;
  if (HasOfficialSerNr and HasLocalization("POL")==false) then begin
  Tile(0,70,false,"",SerNr);
  end else begin
    Tile(0,50,false,"",SerNr);
  end;
  if (HasNumberSeries) then begin
    EditField(h,v,80,"Номер",St_i,SerNr,false,TSerSClass);
  end else begin
    EditField(h,v,80,"Номер",St_i,SerNr,false,0);
  end;
  EditField(h2,v,82,"Дата",Normal,TransDate,false,PasteCurDate);
  if (HasOfficialSerNr and HasLocalization("POL")==false) then begin
    EditField(h,v+=vs,135,"№ для печати",Normal,OfficialSerNr,false,LegalCLInNrSClass);
  end;
  tilenr = 1;
  TileButton(tilenr,"Суммы");  tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Валюта"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Платежи"); tilenr = tilenr + 1;
//  CheckBox(400,v,0,"OK",OKFlag);

  TileButton(tilenr, "История");
  tilenr = tilenr + 1;

  tilenr = 1;
  Tile(tilenr,300,false,tilenr,PayMode); tilenr = tilenr + 1;
  EditField(h,v=6,30,"Способ опл.",Normal,PayMode,false,PMSClass);
  EditField(h2,v,50,"Сотрудник",Normal,Person,false,UserSClass);
  CheckBox(400,v,0,"Инфор. в зап.опер.",ARonTR);
  EditField(h,v+=vs,120,"Счет расх.",Normal,CorspCode,false,CLCorspSClass);
  EditField(h2,v,-20,"Коммент.",Normal,CorspComment,false,0);
  EditField(h,v+=vs,120,"Клиент",Normal,CUCode,false,CUSClass);
  if (HasModNL) then begin
  EditField(h2,v,100,"Ссылка",Normal,RefStr,false,0);
  end;
  EditField(h,v+=vs,-20,"Наименование",Normal,CUName,false,0);
  EditField(h,v+=vs,-20,"Адрес",Normal,Addr0,false,0);
  EditField(h,v+=vs,-20,"",Normal,Addr1,false,0);
  EditField(h,v+=vs,-20,"",Normal,Addr2,false,0);
  EditField(h,v+=vs,-20,"",Normal,Addr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,Addr4,false,0);
  EditField(h,v+=vs,-20,"Основание",Normal,Comment,false,0);
  if (HasObjects) then begin
  EditField(h,v+=vs,-20,"Объекты",Normal,Objects,false,ObjSClass);
  end;
  CheckBox(20,-20,0,"OK",OKFlag);
  EditField(h,v+=vs,100,"Итого",Normal,Total,true,0);
  if (HasLocalization("POL")==false) then begin
  EditField(h2,v,50,"Код НДС",Normal,VATCode,false,VATCodeSClass);
  end;
  if (HasLanguages) then begin
  EditField(h3,v,50,"Язык",Normal,LangCode,true,LangSClass);
  end;
  EditField(h,v+=vs,100,"Нетто",Normal,NetVal,true,0);
  if (HasLocalization("POL")==false) then begin
  EditField(h2,v,80,"НДС",Normal,VATVal,true,0);
  end;
  if (HasExtTax) then begin
    EditField(h3,v,50,"НСП",Normal,TAX1Sum,true,0);
  end;

  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,CurncyCode); tilenr = tilenr + 1;
    vs = 20;
    EditField(h=110,v=6,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h,v+vs,50,"Осн. вал. 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h,v+vs,50,"Осн. вал. 1",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h,v+(vs*2),50,"Осн. вал. 2",Normal,BaseRate2,true,0);
      end;
    EditField(h2=295,v,50,"Курс",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осн. вал. 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Осн. вал. 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осн. вал. 1",false);
      end;
    end else begin
      EditField(h,v+=vs,50,"Осн. вал. 1",Normal,BaseRate1,true,0);
      EditField(h,v+=vs,50,"Осн. вал. 2",Normal,BaseRate2,true,0);
    end;
  end;

  Tile(tilenr,200,false,tilenr,Math); tilenr = tilenr + 1;
  h = 8; v=24; l = 35;
  MatrixBegin(4,v,-50,-10,-,99);
  Flip(1);
  MatTypedRow(stp);
  MatCol(t=1,h=34,"Тип",0,Type,false,SetSClass);
  if (HasLocalization("POL")  and IsStandardProduct) then begin
    MatCol(t,h+=120,"Number",0,TransOfficialSerNr,false,ARSClass);
  end else begin
  MatCol(t,h+=120,"Номер",0,TransNr,false,ARSClass);
  end;
  if (HasModSO) then begin
  MatCol(t,h+=70,"Счет",0,OrderNr,false,ORSClass);
  end;
  if (HasObjects) then begin
  MatCol(t,h+=70,"Объекты",0,Objects,false,ObjSClass);
  end;
  MatCol(t,-180,"Компания",ViewOnly,Company,false,0);
  MatCol(t,-80,"Сумма",0,Sum,true,0);
  MatText(t=2,h=34,"Скидка",true);
  MatCol(t,h+=80,"",0,Type,false,0);
  if (HasLocalization("POL") and IsStandardProduct) then begin
    MatCol(t,h+=200,"",0,TransOfficialSerNr,false,0);
  end else begin
  MatCol(t,h+=200,"",0,TransNr,false,0);
  end;
  MatCol(t,-180,"Компания",ViewOnly,Company,false,0);
  MatCol(t,-80,"Сумма",0,Sum,true,0);
  Flip(2);
  MatCol(t=1,h=34,"Тип",0,Type,false,SetSClass);
  MatCol(t,h+=120,"Счет расх.",ViewOnly,CorspCode,false,CLCorspSClass);
  MatCol(t,h+=80,"Способ опл.",Normal,PayMode,false,PMSClass);
  MatCol(t,h+=70,"Комментарий",0,Comment,false,0);
  MatText(t=2,h=34,"Скидка",true);
  MatCol(t,h+=120,"Счет расх.",ViewOnly,CorspCode,false,CLCorspSClass);
  MatCol(t,h+=70,"Коммент.",0,Comment,false,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 22;
  v=v+ 1; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");

  //18.03.13 INAU
  Tile(tilenr, 120, false, tilenr, LogNewUser);
  tilenr = tilenr + 1;
  EditField(h=130, v=16, 70, "Создал", ViewOnly, LogNewUser, false, 0);
  EditField(h+=80, v, 70, "", ViewOnly, LogNewDate, false, 0);
  EditField(h+=80, v, 50, "", ViewOnly, LogNewTime, false, 0);
  EditField(h=130, v+=vs, 70, "Сохранил", ViewOnly, LogSaveUser, false, 0);
  EditField(h+=80, v, 70, "", ViewOnly, LogSaveDate, false, 0);
  EditField(h+=80, v, 50, "", ViewOnly, LogSaveTime, false, 0);
  EditField(h=130, v+=vs, 70, "Утвердил (ОК)", ViewOnly, LogOKUser, false, 0);
  EditField(h+=80, v, 70, "", ViewOnly, LogOKDate, false, 0);
  EditField(h+=80, v, 50, "", ViewOnly, LogOKTime, false, 0);
  EditField(h=130, v+=vs, 70, "Aннулировал", ViewOnly, LogAnnulUser, false, 0);
  EditField(h+=80, v, 70, "", ViewOnly, LogAnnulDate, false, 0);
  EditField(h+=80, v, 50, "", ViewOnly, LogAnnulTime, false, 0);
  if (Usr.AccessGroup == "ADMIN") then
    begin
    EditField(h=130, v+=vs, 70, "SalesGroup", Normal, SalesGroup, false, 0);
    end;
  //
  if (HasModNL) then begin
  SpecialMenu("Открыть запись операции",'t',0,"OpenTRFromCLIn");
  end;
  if (IsEnterprise) then begin
  if (UserCanReport("CLInColIVRn","",true)) then begin
    SpecialMenu("Показать счета-фактуры",' ',0,"ShowColIVDsm");
    end;
  end;
  EndWindow;


//=============================================== CLOutVc
  WindowBegin("Расход из кассы",CLOutDClass,CGview,-);
  SetWRect(20,80,700,550);
  UseView(CLOutVc);
  ActiveFieldOnNew("TransDate");
  Sizeable(-1,-1,0,0);
  vs = 20; h = 100; h2=h+200; h3 = 430; v = 6;
  Tile(0,50,false,"",SerNr);
  if (HasNumberSeries) then begin
    EditField(h,v,80,"Номер",St_i,SerNr,false,TSerSClass);
  end else begin
    EditField(h,v,80,"Номер",Normal,SerNr,false,0);
  end;
  EditField(h+150,v,82,"Дата",Normal,TransDate,false,PasteCurDate);
//  EditField(h3,v,82,"Local Machine",ViewOnly,LocalMachineCode,false,0);
  tilenr = 1;
  TileButton(tilenr,"Суммы"); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Валюта"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Платежи"); tilenr = tilenr + 1;
//  CheckBox(400,v,0,"OK",OKFlag);

  TileButton(tilenr, "История");
  tilenr = tilenr + 1;

  tilenr = 1;
  Tile(tilenr,270,false,tilenr,PayMode); tilenr = tilenr + 1;
  EditField(h,v=6,30,"Способ опл.",Normal,PayMode,false,PMSClass);
  EditField(h2,v,50,"Сотрудник",Normal,Person,false,UserSClass);
  CheckBox(400,v,0,"Инф-ия в зап.опер.",ARonTR);
  EditField(h,v+=vs,120,"Счет расх.",Normal,CorspCode,false,CLCorspSClass);
  EditField(h2,v,-20,"Коммент.",Normal,CorspComment,false,0);
  if (HasModPL or HasModPO) then begin
    EditField(h,v+=vs,120,"Поставщик",Normal,CUCode,false,VESClass);
  end;
  if ((HasModNL and HasModPL==false) or (HasModNL==false and HasModPL==false)) then begin
    EditField(h2,v+=vs,100,"Ссылка",Normal,RefStr,false,0);
  end else begin
    EditField(h2,v,100,"Ссылка",Normal,RefStr,false,0);
  end;
  if (HasModPL or HasModPO) then begin
    EditField(h,v+=vs,-20,"Наименование",Normal,CUName,false,0);
    EditField(h,v+=vs,-20,"Адрес",Normal,Addr0,false,0);
    EditField(h,v+=vs,-20,"",Normal,Addr1,false,0);
    EditField(h,v+=vs,-20,"",Normal,Addr2,false,0);
    EditField(h,v+=vs,-20,"",Normal,Addr3,false,0);
    EditField(h,v+=vs,-20,"",Normal,Addr4,false,0);
  end;
  EditField(h,v+=vs,-20,"Основание",Normal,Comment,false,0);
  if (HasObjects) then begin
    EditField(h,v+=vs,-20,"Объекты",Normal,Objects,false,ObjSClass);
  end;
  CheckBox(20,-20,0,"OK",OKFlag);
  EditField(h,v+=vs,100,"Итого",Normal,Total,true,0);
  if (HasLocalization("POL")==false) then begin
    EditField(h2,v,50,"Код НДС",Normal,VATCode,false,VATCodeSClass);
  end;
  if (HasLanguages) then begin
    EditField(h3,v,50,"Язык",Normal,LangCode,true,LangSClass);
  end;
  EditField(h,v+=vs,100,"Нетто",Normal,NetVal,true,0);
  if (HasLocalization("POL")==false) then begin
    EditField(h2,v,80,"НДС",Normal,VATVal,true,0);
  end;
  if (HasExtTax) then begin
    EditField(h3,v,50,"НСП",Normal,TAX1Sum,true,0);
  end;

  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,CurncyCode); tilenr = tilenr + 1;
     vs = 20;
     EditField(h=110,v=6,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h,v+vs,50,"Осн. вал. 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h,v+vs,50,"Осн. вал. 1",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h,v+(vs*2),50,"Осн. вал. 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Курс",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осн. вал. 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Осн. вал. 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осн. вал. 1",false);
      end;
    end else begin
      EditField(h,v+=vs,50,"Осн. вал. 1",Normal,BaseRate1,true,0);
      EditField(h,v+=vs,50,"Осн. вал. 2",Normal,BaseRate2,true,0);
    end;
  end;

  Tile(tilenr,200,false,tilenr,Math); tilenr = tilenr + 1;
  h = 8; v=24; l = 35; t = 1;
  MatrixBegin(4,v,-50,-10,-,99);
  Flip(1);
  MatTypedRow(stp);
  MatCol(t=1,h=34,"Тип",0,Type,false,SetSClass);
  if (HasLocalization("POL") and IsStandardProduct) then begin
    MatCol(t,h+=120,"Number",0,TransOfficialSerNr,false,ARSClass);
  end else begin
  MatCol(t,h+=120,"Номер",0,TransNr,false,ARSClass);
  end;
  if (HasModSO) then begin
  MatCol(t,h+=70,"Счет",0,OrderNr,false,ORSClass);
  end;
  if (HasObjects) then begin
  MatCol(t,h+=70,"Объекты",0,Objects,false,ObjSClass);
  end;
  MatCol(t,-180,"Компания",ViewOnly,Company,false,0);
  MatCol(t,-80,"Сумма",0,Sum,true,0);
  MatText(t=2,h=34,"Скидка",true);
  MatCol(t,h+=80,"",0,Type,false,0);
  MatCol(t,h+=200,"",0,TransNr,false,0);
  MatCol(t,-180,"Компания",ViewOnly,Company,false,0);
  MatCol(t,-80,"Сумма",0,Sum,true,0);
  Flip(2);
  t=1; h = 34;
  if (HasModPL) then begin
    MatCol(t,h,"Тип",0,Type,false,SetSClass);
    h = h + 120;
  end;
  MatCol(t,h,"Счет затрат",ViewOnly,CorspCode,false,CLCorspSClass);
  MatCol(t,h+=80,"Режим платежа",Normal,PayMode,false,PMSClass);
  MatCol(t,h+=70,"Комментарий",0,Comment,false,0);
  MatText(t=2,h=34,"Скидка",true);
  MatCol(t,-180,"Компания",ViewOnly,Company,false,0);
  MatCol(t,-80,"Сумма",0,Sum,true,0);
  if (IsEnterprise) then begin
    Flip(3);
  MatCol(1,80,"Дата",0,ExpDate,false,PasteCurDate);
  pos = 155;
  if (HasModPL) then begin
    MatCol(1,pos,"Поставщик",0,Company,false,VESClass);
    pos = 225;
  end;
  MatCol(1,pos,"Идентификатор",0,Identifier,true,0);
  if (HasModPL) then begin
    MatCol(1,-365,"Наменование посатавщика",0,VEName,true,0);
  end;
  MatCol(1,-130,"Номер документа",0,DocNr,true,0);
  MatCol(1,-30,"Код НДС",0,VATCode,false,VATCodeSClass);
  end;
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 22;
  v=v+ 1; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  if (IsEnterprise) then begin
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  end;

  //18.03.13 INAU
  Tile(tilenr, 120, false, tilenr, LogNewUser);
  tilenr = tilenr + 1;
  EditField(h=130, v=16, 70, "Создал", ViewOnly, LogNewUser, false, 0);
  EditField(h+=80, v,70, "", ViewOnly, LogNewDate, false, 0);
  EditField(h+=80, v,50, "", ViewOnly, LogNewTime, false, 0);
  EditField(h=130, v+=vs, 70, "Сохранил", ViewOnly, LogSaveUser, false, 0);
  EditField(h+=80, v,70, "", ViewOnly, LogSaveDate, false, 0);
  EditField(h+=80, v,50, "", ViewOnly, LogSaveTime, false, 0);
  EditField(h=130, v+=vs, 70, "Утвердил (ОК)", ViewOnly, LogOKUser, false, 0);
  EditField(h+=80, v,70, "", ViewOnly, LogOKDate, false, 0);
  EditField(h+=80, v,50, "", ViewOnly, LogOKTime, false, 0);
  EditField(h=130, v+=vs, 70, "Aннулировал", ViewOnly, LogAnnulUser, false, 0);
  EditField(h+=80, v, 70, "", ViewOnly, LogAnnulDate, false, 0);
  EditField(h+=80, v, 50, "", ViewOnly, LogAnnulTime, false, 0);
  if (Usr.AccessGroup == "ADMIN") then
    begin
    EditField(h=130, v+=vs, 70, "SalesGroup", Normal, SalesGroup, false, 0);
    end;
  //
  if (HasModNL) then begin
  SpecialMenu("Открыть запись операции",'t',0,"OpenTRFromCLOut");
  end;
  if (IsEnterprise) then begin
  if (UserCanReport("CLOutColVIRn","",true)) then begin
    SpecialMenu("Показать счета-фактуры",' ',1,"ShowColVIDsm");
    end;
  end;
  EndWindow;


//=============================================== MasterWClass
  WindowBegin(CurrentDate,MasterWClass,CGother,RcType); //!!
  UseView(RcVc);
  Sizeable(-1,-1,0,0);
  SetWRect(20,65,880,590);
  ArchiveList(-354,32,-16,-1);

  HalPushButton(600, 2, 690, 20, "ShowBaseERVc", "Kурс");
  HalPushButton(700, 2, 790, 20, "IEditAndMailBaseERVc", "Рассылка");

  h = 20;
  v1 = 65;
  v = 5;
  es = 87;
  vs = 3;
  hfirst = h;

  BlackFrame(h,v=8,200,v+=20,"Модуль: $",kFrameShadeNone);
  AddBic(637,638,h,v,ToolModule,0,  "Модуль");
  AddBic(731,734,h+=es,v,ToolReport,0,"Отчеты");
  AddBic(718,750,h+=es,v,ToolDocument,0,"Документы");
  AddBic(737,738,h+=es,v,ToolSetup,0,"Настройки");
  AddBic(625,626,h+=es,v,ToolRoutines,0,"Функции");

  h = hfirst;  v = v + es + vs;
  AddBic(701+0,700,h,v,ToolRegister,1,"");
  AddBic(701+1,700,h+=es,v,ToolRegister,2,"");
  AddBic(701+2,700,h+=es,v,ToolRegister,3,"");
  AddBic(701+3,700,h+=es,v,ToolRegister,4,"");
  AddBic(701+4,700,h+=es,v,ToolRegister,5,"");

  h = hfirst;  v = v + es;
  AddBic(701+0,700,h,v,ToolRegister,6,"");
  AddBic(701+1,700,h+=es,v,ToolRegister,7,"");
  AddBic(701+2,700,h+=es,v,ToolRegister,8,"");
  AddBic(701+3,700,h+=es,v,ToolRegister,9,"");
  AddBic(701+4,700,h+=es,v,ToolRegister,10,"");

  h = hfirst;  v = v + es + vs;
  AddBic(701+0,700,h,v,ToolRegister,11,"");
  AddBic(701+1,700,h+=es,v,ToolRegister,12,"");
  AddBic(701+2,700,h+=es,v,ToolRegister,13,"");
  AddBic(701+3,700,h+=es,v,ToolRegister,14,"");
  AddBic(701+4,700,h+=es,v,ToolRegister,15,"");

  h = hfirst;  v = v + es;
  AddBic(701+0,700,h,v,ToolRegister,16,"");
  AddBic(701+1,700,h+=es,v,ToolRegister,17,"");
  AddBic(701+2,700,h+=es,v,ToolRegister,18,"");
  AddBic(701+3,700,h+=es,v,ToolRegister,19,"");
  AddBic(701+4,700,h+=es,v,ToolRegister,20,"");

  BottomBar;

  if (HasMetroTestFeatures) then begin
    SpecMenuGroup("Добавить ярлык",kSpecMenuGroupTypeMenuInBottomBarLeft,4306);
  end;
  if (GuiType!=kGuiCocoa) then begin
    SpecMenuItem("Присоединить файл",'a',mOpsMenuAttachFile);
    SpecMenuItem("Загрузить файл",' ',mOpsMenuDownloadFile);
    SpecMenuItem("Открыть запись",' ',mOpsMenuOpenRecord);
    SpecMenuItem("Редактировать комментарий связи",' ',mOpsMenuEditLinkComment);
    if (StandardHansa==false) then begin
      SpecMenuItem("Редактировать Web ссылку",' ',mEditWebLink);
    end;
//    SpecialMenu("Show To Links",' ',5,"ShowToLinksMasterWsm"); //can we connect Master Control to smthing ?
    SpecialMenu("(-",' ',6,"");
    SpecialMenu("Создать email",' ',10,"MailFromArchiveWsm");
    SpecialMenu("Создать записку",' ',7,"NoteFromMasterWsm");
    SpecialMenu("Создать архив",' ',8,"ArchiveFromMasterWsm");
    if (StandardHansa==false) then begin
      SpecialMenu("Создать Web Nav ссылку",' ',11,"TWebNavLinkFromArchiveWsm");
    end;
  end;
  SpecialMenu("Сменить пароль",' ',9,"ChangePasswdMasterWsm");
  if (nonblank(Usr.MinPLCode)) then begin
    SpecialMenu("Сменить пароль на скидку",' ',9,"ChangeDiscPasswdMasterWsm");
  end;
  SpecialMenu("(-",' ',10,"");
  if (StandardHansa==false) then begin
    SpecialMenu("Доступ к чату извне",' ',11,"ExtChatMasterWsm"); // This should be somewhere else...
//  SpecialMenu("Shares",' ',12,"SharesInfoWsm"); // This should be somewhere else...
    SpecMenuItem("Синхронизация",' ',mOpsMenuSync);
  end;
  if (UserCanAction("AllowNoClockInOut",true)) then begin
    if (StandardHansa==false) then begin
      SpecialMenu("Начать работу",' ',14,"ClockInMasterWsm");
      SpecialMenu("Завершить работу",' ',15,"ClockOutMasterWsm");
    end;
  end;
  SpecialMenu("Открыть фильтр импорта чата",' ',16,"OpenChatFilterWsm");

  EndWindow;


//=============================================== SHVc
  WindowBegin("Отгрузка",SHDClass,CGview,-);
  SetWRect(20,80,920,460);
  Sizeable(-1,-1,0,0);
  UseView(SHVc);
  vs = 20;
  Tile(0,110,false,"",SerNr);
  EditField(75,vm=(v=6),95,"№ отгрузки",Normal,SerNr,false,TSerSClass);

  if (HasOfficialSerNr) then begin
    EditField(h,vm=v,135,"Офиц. номер",Normal,OfficialSerNr,false,LegalInvNrSClass);
  end;
//  if (HasTREO) then begin
//    EditField(h+330,vm,95,"TREO Но.",Normal,TREONr,false,0);
//  end;
  EditField(h+330,v,80,"Cобрал",Normal,Gather,false,UserSClass)

  EditField(75,v+=20,95,"Клиент",ViewOnly,CustCode,false,0);
  EditField(h,v,270,"Наименование",Normal,Addr0,false,0);
  EditField(h+330, v, -40, "Прим.", Normal, Prim, false, 0);
  EditField(75,v+=vs,100,"Штрих-код",Normal,Barcode,false,0);
  EditField(h,v,80,"K-во",Normal,DelAddrCode,false,DelAddrSClass);
  EditField(h+180,v,-40,"Tовар",ViewOnly,IName,false,0);
  CheckBox(h, v+=vs , 0, "Прибавлять", Check1);
  EnterSkip(Math);
  CheckBox(h4=-100,v,0,"OK",OKFlag);

  tilenr = 1;
  if (IsEnterprise) then begin
    TileButton(tilenr,"Условия"); tilenr = tilenr + 1;
    TileButton(tilenr,"Товары"); tilenr = tilenr + 1;
    TileButton(tilenr,"Условия дост."); tilenr = tilenr + 1;
    TileButton(tilenr,"Упаковка"); tilenr = tilenr + 1;
    TileButton(tilenr,"Адрес доставки"); tilenr = tilenr + 1;
    TileButton(tilenr,"Комментарий"); tilenr = tilenr + 1;
    if (StandardHansa==false) then begin
      TileButton(tilenr,"Фрахт"); tilenr = tilenr + 1;
    end;
  end else begin
    TileButton(tilenr,"Коммент."); tilenr = tilenr + 1;
    TileButton(tilenr,"Товары"); tilenr = tilenr + 1;
    TileButton(tilenr,"Адрес"); tilenr = tilenr + 1;
    if (HasLocalization("PRT")) then begin
      if (HasModIN and HasModSL) then begin
        TileButton(tilenr,"Packaging"); tilenr = tilenr + 1;
      end;
      TileButton(tilenr,"Фрахт"); tilenr = tilenr + 1;
    end;
  end;

  TileButton(tilenr,"История"); //25.11.09 INAU
  tilenr = tilenr + 1;

  tilenr = 1;
  Tile(tilenr,70,false,tilenr,ShipDate); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Дата",Normal,ShipDate,false,PasteCurDate);
  if (HasMultiLocations) then begin
    v = v + vs;
    EditField(h1,v,82,"Склад",Normal,Location,false,LocationSClass);
  end;
  if (HasRoute) then begin
    v = v + vs;
    EditField(h1,v,82,"Маршрут",Normal,Sorting,false,DelRouteSClass);
  end;
  if (HasObjects) then begin
    EditField(h2,v=vm,135,"Объекты",Normal,Objects,false,ObjSClass);
  end;
  if (HasBranch) then begin
    v = v + vs;
    EditField(h2,v,135,"Филиал",ViewOnly,BranchID,false,0);
  end;
  if (HasMultiLocations) then begin
    v = v + vs;
  end;
  if (HasModTS) then begin
    EditField(h2,v,135,"Проект",ViewOnly,PRCode,false,0);
  end;
  if (HasObjects) then begin
    EditField(h3,v=vm,80,"Счет №",ViewOnly,OrderNr,false,0);
  end else begin
    if (IsEnterprise==false) then begin
      EditField(h2,v=vm,135,"Номер заказа",ViewOnly,OrderNr,false,0);
    end;
  end;
  if (IsEnterprise) then begin
    EditField(h3,v+=vs,80,"Вид счета",Normal,SHClass,false,OrderClassSClass);
    CheckBox(h4,v=6,0,"Сообщение",Check1);
  end;
  if (IsEnterprise==false) then begin
    if (HasMultiLocations) then begin
      EditField(h1,v+=2*vs,-40,"Коммент.",Normal,Comment,false,0);
    end else begin
      EditField(h1,v+=vs,-40,"Коммент.",Normal,Comment,false,0);
    end;
  end;
  Tile(tilenr,190,true,tilenr,Math); tilenr = tilenr + 1;
  v = 20;
  MatrixBegin(4,v,-50,-35,-,200);
  MatTypedRow(stp);
  Flip(0);
  MatCol(1,32,"Товар",0,ArtCode,false,ForSaleINSClass);
//  MatCol(1,94,"Var",0,VARList,false,VARSClass);
//  MatCol(1,144,"Description",0,Spec,false,0);
  MatCol(1,94,"Наименование",0,Spec,false,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,32,"Товар",0,ArtCode,false,ForSaleINSClass);
//  MatCol(t,94,"Var",0,VARList,false,VARSClass);
//  MatCol(t,144,"Description",0,Spec,false,0);
  MatCol(t,94,"Наименование",0,Spec,false,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  if (HasCustItem) then begin
    MatCol(1,-230,"Товар кл.",0,CustArtCode,false,CUINSClass);
  end;
  MatCol(1,-150,"Зак.",0,Ordered,true,0);
  MatCol(1,-98,"Скл.",0,InStock,true,0);
  MatCol(1,-50,"Своб.",0,Ship,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,-147,"Зак.",0,Ordered,true,0);
  if (HasCustItem) then begin
    MatCol(t,-233,"Код товара кл.",0,CustArtCode,false,CUINSClass);
  end;
  MatCol(t,-98,"Скл.",0,InStock,true,0);
  MatCol(t,-50,"Своб.",0,Ship,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  if (IsEnterprise==false) then begin
    if (HasSerialNumbers) then begin
      MatCol(1,-350,"Серийный номер",0,SerialNr,false,SerialNrSClass);
    end;
    if (HasObjects) then begin
      MatCol(1,-250,"Объекты",0,Objects,false,ObjSClass);
    end;
    MatCol(1,-98,"Знач. склада",0,FIFORowVal,false,0);
    if (HasLocalization("RUS")) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      MatCol(1,-230,"Ед-ца",0,UnitCode,false,UnitSClass);
      MatCol(1,-180,"Название",0,UnitComment,false,0);
    end;
  end else begin
    MatCol(1,-350,"Серийный номер",0,SerialNr,false,SerialNrSClass);
    MatCol(1,-250,"Срок годности",0,BestBefore,false,0);
    MatCol(1,-150,"Склад",0,Location,false,LocationSClass);
    if (StandardHansa==false) then begin
      MatCol(1,-50,"Место",0,PosCode,false,UsedPosSClass);
    end;
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,-350,"Серийный номер",0,SerialNr,false,SerialNrSClass);
    MatCol(t,-250,"Срок годности",0,BestBefore,false,0);
    MatCol(t,-150,"Склад",0,Location,false,LocationSClass);
    if (StandardHansa==false) then begin
      MatCol(t,-50,"Место",0,PosCode,false,UsedPosSClass);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,-400,"Ц.обр.закупки",0,BBCostPrice,false,0);
    MatCol(1,-320,"FIFO по строке",0,FIFORowVal,false,0);
    if (StandardHansa==false) then begin
      MatCol(1,-220,"Ср. взв.(вал.2)",0,WAB2,false,0);
    end;
    MatCol(1,-120,"Отпускная ц.",0,BasePrice,false,0);
    MatCol(1,-40,"Коэфф.",0,Coefficient,false,0);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,-400,"BuyBack Pr.",0,BBCostPrice,false,0);
    MatCol(t,-320,"FIFO по строке",0,FIFORowVal,false,0);
    if (StandardHansa==false) then begin
      MatCol(t,-220,"Ср. взв.(вал.2)",0,WAB2,false,0);
    end;
    MatCol(t,-120,"Отпускная цена",0,BasePrice,false,0);
    MatCol(t,-40,"Коэфф.",0,Coefficient,false,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,-400,"Структура",0,Recepy,false,0);
    MatCol(1,-320,"Источник",0,Source,false,SourceSClass);
    MatCol(1,-240,"Отфактурирован",0,Invd,false,0);
    if (StandardHansa==false) then begin
      MatCol(1,-160,"Дата отправки",0,DespatchRowDate,false,PasteCurDate);
      MatCol(1,-80,"Время отправки",0,DespatchRowTime,false,PasteCurTime);
    end;
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,-400,"Структура",0,Recepy,false,0);
    MatCol(t,-300,"Источник",0,Source,false,SourceSClass);
    MatCol(t,-240,"Отфактурирован",0,Invd,false,0);
    if (StandardHansa==false) then begin
      MatCol(t,-160,"Дата отправки",0,DespatchRowDate,false,PasteCurDate);
      MatCol(t,-80,"Время отправки",0,DespatchRowTime,false,PasteCurTime);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,-400,"Счет реал.",0,SalesAcc,false,AccSClass);
    MatCol(1,-330,"Счет стоим.",0,CostAcc,false,AccSClass);
    MatCol(1,-250,"Объекты",0,Objects,false,ObjSClass);
    MatCol(1,-135,"Шир.",0,UnitXval,true,0);
    MatCol(1,-90,"Выс.",0,UnitYval,true,0);
    MatCol(1,-45,"Выс.",0,UnitZval,true,0);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,-400,"Счет реал.",0,SalesAcc,false,AccSClass);
    MatCol(t,-330,"Счет стоим.",0,CostAcc,false,AccSClass);
    MatCol(t,-250,"Объекты",0,Objects,false,ObjSClass);
    MatCol(t,-135,"Шир.",0,UnitXval,true,0);
    MatCol(t,-90,"Выс.",0,UnitYval,true,0);
    MatCol(t,-45,"Выс.",0,UnitZval,true,0);
    if (StandardHansa==false) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      MatCol(1,-300,"Упаковок",0,RowPackages,false,0);
      MatCol(1,-220,"Тип",0,PackageType,false,PackTypeSClass);
      MatCol(1,-170,"Описание",0,PackageDesc,false,0);
      MatCol(1,-70,"Акциз",0,ExciseNr,false,0);
      MatCol(t=kInvoiceRowTypeStructuredItemComponent,-300,"Упаковок",0,RowPackages,false,0);
      MatCol(t,-220,"Тип",0,PackageType,false,PackTypeSClass);
      MatCol(t,-170,"Описание",0,PackageDesc,false,0);
      MatCol(t,-70,"Акциз",0,ExciseNr,false,0);
    end;
  end;
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 22;
  v = 21;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;

//  CheckBox(20,-20,0,"OK",OKFlag);
  if (HasLocalization("PRT")) then begin
    EditField(120,-20,150,"Tax Auth. Approval",Normal,TaxAdminServSeal,false,0);
//    SoftEditField(120,-20,150,"Tax Auth. Approval",Normal,"TaxAdminServSeal",false,0,M4Str,200);
  end;
  EditField(-131,-20,80,"Общее кол-во",ViewOnly,TotQty,true,0);
  if (IsEnterprise) then begin
    Tile(tilenr,90,false,tilenr,ShipMode); tilenr = tilenr + 1;
    vs = 20;
    EditField(h1,v=vm,82,"Способ отгр.",Normal,ShipMode,false,DMSClass);
    EditField(h1,v+=vs,80,"Сумма налога",ViewOnly,TAX1Sum,true,0);
    if (StandardHansa==false) then begin
      EditField(h1,v+=vs,80,"Заявлен. значение",Normal,DeclaredVal,true,0);
      EditField(h1,v+=vs,-20,"Статус отгрузки",ViewOnly,EShipStatus,false,0);
      if (HasLocalization("BRA,BOL,PRT")) then begin
      EditField(h1,v+=vs,80,"Утв. нал. службы",Normal,TaxAdminServSeal,false,0);
      end;
    end;
    EditField(h2,v=vm,80,"Итого кол-во",ViewOnly,TotQty,true,0);
    EditField(h2,v+=vs,80,"Итого вес",Normal,TotWeight,true,0);
    EditField(h2,v+=vs,80,"Итого объем",Normal,TotVolume,true,0);
    CheckBox(473,v=vm,0,"Использовать адрес для выст. счета",Check2);
    if (StandardHansa==false) then begin
      CheckBox(473,v+=16,0,"Создана электронная отгрузка",EShipmentCreated);
      CheckBox(473,v+=16,0,"Собрана электронная отгрузка",EShipCollected);
    end;
    Tile(tilenr,110,false,tilenr,Packages); tilenr = tilenr + 1;
    h2 = 310;
    EditField(h1,v=6,82,"Трансп. №",Normal,TransportNumber,false,0);
    EditField(h1,v+=vs,82,"Упаковки",Normal,Packages,true,0);
    if (HasLanguages) then begin
    EditField(h1,v+=vs,82,"Языка",Normal,LangCode,false,LangSClass);
    end;
    EditField(h1,v+=vs,82,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
    if (StandardHansa==false) then begin
      EditField(h1,v+=vs,-20,"Инстр.по трансп.",Normal,TransportDirect,false,0);
      EditField(h1,v+=vs,80,"План. дата отпр.",Normal,PlanSendDate,false,PasteCurDate);
      EditField(h1,v+=vs,80,"План. время отпр.",Normal,PlanSendTime,false,PasteCurTime);
    end;

    EditField(h2,v=6,135,"Из города",Normal,FromCity,false,0);
    EditField(h2,v+=vs,135,"В город",Normal,ToCity,false,0);
    EditField(h2,v+=vs,135,"Из дока",Normal,FromDock,false,0);
    EditField(h2,v+=vs,135,"В док",Normal,ToDock,false,0);
    if (StandardHansa==false) then begin
      EditField(h2,v+=2*vs,80,"План. дата приб.",Normal,PlanArrDate,false,PasteCurDate);
      EditField(h2,v+=vs,80,"План. время  приб.",Normal,PlanArrTime,false,PasteCurTime);
    end;
  end;
  Tile(tilenr,150,false,tilenr,Addr1); tilenr = tilenr + 1;
  vs = 20;
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
      EditField(h1,v=6,80,"Код адреса",Normal,DelAddrCode,false,DelAddr3SClass);
      EditField(h1,v+=vs,-20,"Отгрузка",Normal,Addr1,false,0);
    end else begin
      EditField(h1,v=6,-20,"Адрес",Normal,Addr1,false,0);
    end;
    EditField(h1,v+=vs,-20,"Адрес",Normal,Addr2,false,0);
  end else begin
    EditField(h1,v=6,-20,"Адрес",Normal,Addr1,false,0);   // From dict
    EditField(h1,v+=vs,-20,"",Normal,Addr2,false,0);
  end;
  EditField(h1,v+=vs,-20,"",Normal,Addr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
  if (HasCountryPerCustomer) then begin
    EditField(h1,v+=vs,80,"Страны",Normal,DelCountry,false,CountrySClass);
    if (HasLocalization("BRA")) then begin
      EditField(h2-109,v,232,"",ViewOnly,DelCountryName,false,0);
    end;
  end;
  if (IsEnterprise) then begin
    EditField(h3,v,-20,"Регион",Normal,Region,false,RegionSClass);
    Tile(tilenr,30,false,tilenr,Comment); tilenr = tilenr + 1;
    EditField(h1+10,v=6,-20,"Комментарий",Normal,Comment,false,0);
    EditField(h1+10,v+=20,-20,"Основание",Normal,ORCOType,false,0); // NEWTRANSLATE
    if (HasNumberSeries and HasLocalization("PRT")) then begin
      if (HasOfficialSerNr) then begin
        EditField(h1+10,v+=vs,100,"Official Ser No. 2",Normal,OfficialSerNr2,false,0);
        EditField(h2,v,135,"Status",Normal,Status,false,SetSClass);
      end;
    end;
  end else begin
    if (HasLocalization("RUS")) then begin
      EditField(h1,v+=vs,80,"Итого вес",Normal,TotWeight,true,0);
    end;
  end;
  if (IsStandardProduct and HasLocalization("PRT") and HasModIN and HasModSL) then begin
    Tile(tilenr,110,false,tilenr,PlanSendDate); tilenr = tilenr + 1;
    h2 = 310;
    EditField(h1,v=6,80,"Plan. Sent Date",Normal,PlanSendDate,false,PasteCurDate);
    EditField(h1,v+=vs,80,"Plan. Sent Time",Normal,PlanSendTime,false,PasteCurTime);
    EditField(h2,v=6,80,"Plan. Arrival Date",Normal,PlanArrDate,false,PasteCurDate);
    EditField(h2,v+=vs,80,"Plan. Arrival Time",Normal,PlanArrTime,false,PasteCurTime);
  end;
  if (IsEnterprise or HasLocalization("PRT")) and (StandardHansa==false) then begin
    Tile(tilenr,130,false,tilenr,FreightCode); tilenr = tilenr + 1;
    if (IsEnterprise) then begin
      HalPushButton(473,2,600,22,"UpdateSHPackages","Определить упаковку");
    end;
    EditField(h1,v=6,80,"Трансп. компания",Normal,FreightCode,false,FreightCompanySClass);
    EditField(h1,v+=vs,-20,"Название",Normal,FreightCompany,false,0);
    EditField(h1,v+=vs,-20,"ИНН",Normal,FreightCompanyRegNr,false,0);
    EditField(h1,v+=vs,-20,"Инф-ия о машине",Normal,TruckInfo,false,0);
    EditField(h1,v+=vs,-20,"Водитель",Normal,Driver,false,0);
    EditField(h1,v+=vs,-20,"CMR",Normal,CMRText,false,0); // International transporting number
  end;

  //Добавлено 25.11.09 INAU
  Tile(tilenr, 130, false,  tilenr, LogNewUser);
  tilenr = tilenr + 1;
  EditField(h=130,v=20,70,"Создал",ViewOnly,LogNewUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogNewDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogNewTime,false,0);
  EditField(h=130,v=40,70,"Сохранил",ViewOnly,LogSaveUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogSaveDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogSaveTime,false,0);
  EditField(h=130,v=60,70,"Закрыл (OK)",ViewOnly,LogOKUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogOKDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogOKTime,false,0);
  //Добавлено 11.12.09 INAU
  EditField(h=130,v=80,70,"Распечатал",ViewOnly,LogPrintUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogPrintDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogPrintTime,false,0);

  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Статус товара",'I',2,"ItemStatusSHDsm");
    if (HasModNL) then begin
      SpecialMenu("Открыть запись операции",'t',3,"OpenTRFromSH");
    end;
    SpecialMenu("Печать этикеток фрахта",'l',0,"PrintSHLabSHDsm");
    if (IsEnterprise or HasLocalization("PRT") or IsSberbankProduct) then begin
      SpecialMenu("Создать возврат товаров",'B',5,"RetFromSHSpec");
    end;
  end else begin
  SpecialMenu("Печать этикеток фрахта",'l',0,"PrintSHLabSHDsm");
  if (IsEnterprise) then begin
    SpecialMenu("Пересчитать вес",'w',1,"SHCalcWeightDsm");
  end;
  SpecialMenu("Статус товара",'I',2,"ItemStatusSHDsm");
  if (HasModNL) then begin
    SpecialMenu("Открыть запись операции",'t',3,"OpenTRFromSH");
  end;
  if (HasLocalization("SWE")) then begin
    SpecialMenu("Экспорт ASG",' ',4,"ASGEnSHDsm"); /* Specific for Sweden */
  end;
  if (HasLocalization("NOR")) then begin
    SpecialMenu("Winedi Export",' ',4,"WinEDIEnSHDsm"); /* Specific for Norway */
  end;
  if (IsEnterprise or HasLocalization("PRT")) then begin
    SpecialMenu("Создать возврат товаров",'B',5,"RetFromSHSpec");
  end;
  if (HasLocalization("PRT")) then begin
    if (HasETaxDocuments) then begin
    SpecialMenu("Send to Tax Authorities",'',10,"EShipPRTDsm");  //tax authorities server is down
    end;
  end;
  if (IsEnterprise) then begin
    SpecialMenu("Заполнить серийные номера партий",' ',6,"INBatchSHSpec");
    if (StandardHansa==false) then begin
      SpecialMenu("Разделить строку",' ',7,"SplitRowSHDsm");
    end;
  end;
  if (HasModWHM) then begin
    SpecialMenu("Утвердить складские перемещения",' ',8,"OKStockMovSHrDsm");
    SpecialMenu("Список комплектаций по складу",' ',9,"PickingListDsm");
  end;
//  SpecialMenu("Calculate Manually",' ',10,"CalcSHMan"); /* Specific for one customer in Portugal, you may comment it out */
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
      SpecialMenu("Зарегестрировать электронную отгрузку",' ',9,"EShipRegisterDsm");
    end;
    if (GuiType==kGuiiPhone) then begin
      SpecialMenu("Подписать",' ',10,"SignSHDsm");
    end;
  end;
  end;

  SpecialMenu("Показать недостающие позиции",' ',10,"DOtgrMenu");
  SpecialMenu("сделать экспорт штрих-кодов",' ',11,"DBarCodeOtgrMenu");
  SpecialMenu("импортировать собранное кол-во",' ',11,"DImpOtgrMenu");
  SpecialMenu("распечатать стикера",' ',12,"DDItemStikMenu");
  SpecialMenu("Сканировать",'S',13,"ScanIt");
  SpecialMenu("Oчистить",'O',14,"ClearIt");
  SpecialMenu("Печать стикеров",' ',15,"SHIStickerDsm"); //06.04.10 INAU

  EndWindow;


//=============================================== IPVc
  WindowBegin("Платеж клиента",IPDClass,CGview,-);
  SetWRect(20,80,700,380);
  Sizeable(-1,-1,0,0);
  UseView(IPVc);
  ActiveFieldOnNew("TransDate");
  h = 100; h2 = 262; h3 = 470;v = 6; vs = 20;
  Tile(0,120,false,"",SerNr);
  TileButton(1,"Oперация");
  TileButton(2,"История"); //26.11.09 INAU


  if (HasNumberSeries) then begin
    EditField(h,v, 80,"Сер. номер",St_i,SerNr,false,TSerSClass);
  end else begin
    EditField(h,v,80,"Номер",St_i,SerNr,false,0);
  end;
  EditField(h2,v,82,"Дата опер.",Normal,TransDate,false,PasteCurDate);
  EnterSkip(PayMode);
  if (IsEnterprise) then begin
    EditField(h3,v,-40,"Ссылка",Normal,RecNumber,false,0);
  end else begin
    CheckBox(h4=-100,v,0,"OK",OKFlag);
  end;
  EditField(h,v+=20,30,"Способ оплаты",Normal,PayMode,false,PMSClass);
  EnterSkip(Math);
  EditField(h2,v,-40,"Комментарий",Normal,Comment,false,0);
  EditField(h,v+=20,-40,"Oбъекты",Normal,Objects,false,ObjSClass);//t+
  if (IsEnterprise) then begin
    EditField(h,v+=20,80,"Код авториз.",ViewOnly,AuthorizationCode,false,0);
    CheckBox(-300,v,0,"Инф-ция о клиенте в записи",ARonTR);
    CheckBox(h4=-100,v,0,"OK",OKFlag);
  end else begin
    if (Left(BuildProductCode,5)=="Books") then begin
      EditField(h2,v+=vs,-40,"Reference",Normal,RecNumber,false,0);
    end;
  end;
  if (HasLocalization("PRT")) then begin  v = v + vs;
    if (HasOfficialSerNr) then begin
      EditField(h,v,135,"Official No.",Normal,OfficialSerNr,false,LegalInvNrSClass);
      if (HasNumberSeries) then begin
        EditField(h2+104,v,100,"Official Ser No. 2",Normal,OfficialSerNr2,false,0);
        EditField(h3+90,v,135,"Status",Normal,Status,false,SetSClass);  v = v + vs;
      end;
      v2 = 20;
    end;
  end;
  EnterSkip(Math);

  Tile(1,150,true,"1",Math);

  if (HasMultiCurrency) then begin
    fl = 40;
//    if (GuiType==kGuiiPhone) then begin fl = 70; end;
    EditField(-267,-21,fl,"Валюта",Normal,PayCurCode,false,CurncyCodeSClass);
  end;
  EditField(-142,-21,-40,"Получено",Normal,CurPayVal,true,0);
  h=4; v=20+v2;
  if (HasMultiCurrency or (HasLocalization("RUS") and HasModSL) or Left(BuildProductCode,5)=="Books") then begin
    MatrixBegin(h,v,-50,-24,-,299);
  end else begin
    MatrixBegin(h,v,-30,-24,-,99);
  end;
  vm = v;
  MatTypedRow(stp);
  MatOverStrike(ovst);
  Flip(0);
  if (HasPreferedOfficialSerNr) then begin
    if (HasLocalization("POL,RUS")) then begin
      MatCol(t=kReceiptRowTypeNormal,30,"№ сч/ф",0,InvoiceOfficialSerNr,false,ARSClass);
    end else begin
      MatCol(t=kReceiptRowTypeNormal,30,"№ сч/ф",0,InvoiceNr,false,ARSClass);
    end;
  end else begin
    MatCol(t=kReceiptRowTypeNormal,30,"№ сч/ф",0,InvoiceNr,false,ARSClass);
  end;
  EnterSkip(RecVal);
  MatCol(t,125,"Клиент",0,CustCode,false,CUSClass);
  if (HasPreferedOfficialSerNr) then begin
    MatCol(t=kReceiptRowTypeSettlementDiscount,30,"",0,InvoiceOfficialSerNr,false,ARSClass);
  end else begin
    MatCol(t=kReceiptRowTypeSettlementDiscount,30,"",0,InvoiceNr,false,ARSClass);
  end;
  MatText(t,125,"Скидка",false);
  if (HasObjects) then begin
    MatCol(t,190,"Объект",0,Objects,false,ObjSClass);
  end;
  MatCol(t,-390,"Вал.сч/ф",0,InvCurncy,true,0);
  MatCol(t,-350,"Сумма сч/ф",0,InvVal,true,0);
  MatCol(t,-260,"Вал. банка",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-220,"На р/с",0,BankVal,true,0);
  MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Получено",0,RecVal,true,0);
  if (HasPreferedOfficialSerNr) then begin
    EnterSkip(InvoiceOfficialSerNr);
    MatCol(t=kReceiptRowTypeWriteoff,30,"",0,InvoiceOfficialSerNr,false,ARSClass);
  end else begin
    EnterSkip(InvoiceNr);
    MatCol(t=kReceiptRowTypeWriteoff,30,"",0,InvoiceNr,false,ARSClass);
  end;
  MatText(t,125,"Списание",false);
  MatCol(t,-460,"",0,WriteOffAcc,false,AccSClass);
  MatCol(t=kReceiptRowTypeBankFee,30,"",0,InvoiceNr,false,ARSClass);
  MatText(t,105,"Ком.банка",false);
  MatCol(t,-390,"Вал.сч/ф",0,InvCurncy,true,0);
  MatCol(t,-350,"Сумма сч/ф",0,InvVal,true,0);
  MatCol(t,-260,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-220,"Сумма банка",0,BankVal,true,0);
  MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Получено",0,RecVal,true,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  EnterSkip(PayDate);
  MatCol(t=kReceiptRowTypeNormal,200,"Текст",0,CustName,false,0);
  if (IsEnterprise) then begin
    MatCol(t,-350,"Дата оплаты",0,PayDate,false,0);
  end;
  if (HasObjects and IsEnterprise==false) then begin
    MatCol(t,190,"Объект",0,Objects,false,ObjSClass);
  end;
  EnterSkip(RecVal);
  if (HasMultiCurrency) then begin
    MatCol(t,-260,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
    MatCol(t,-220,"На р/с",0,BankVal,true,0);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    MatCol(t=kReceiptRowTypeWriteoff,-390,"Вал.",0,InvCurncy,true,0);
    MatCol(t,-350,"Сумма сч/ф",0,InvVal,true,0);
    MatCol(t,-260,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
    MatCol(t,-220,"На р/с",0,BankVal,true,0);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
  end else begin
    MatCol(t,-270,"Сумма сч.",0,InvOutstand,false,0);
    MatCol(t,-180,"Сумма к зачисл.",0,InvVal,true,0);
    MatCol(t,-90,"Получ. сумма",0,RecVal,true,0);
    MatCol(t=kReceiptRowTypeWriteoff,-270,"Сумма сч.",0,InvOutstand,false,0);
    MatCol(t,-180,"Сумма к зачисл.",0,InvVal,true,0);
    MatCol(t,-90,"Получ. сумма",0,RecVal,true,0);
  end;
  if (HasMultiCurrency) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=kReceiptRowTypeNormal,190,"Текст",0,CustName,false,0);
    MatCol(t,-350,"Вал.",0,InvCurncy,true,0);
    MatCol(t,-310,"Сумма отк. сч.",0,InvOutstand,true,0);
    MatCol(t,-220,"Сумма сч/ф",0,InvVal,true,0);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    MatCol(t=kReceiptRowTypeWriteoff,-390,"Вал.",0,InvCurncy,true,0);
    MatCol(t,-350,"Сумма сч/ф",0,InvVal,true,0);
    MatCol(t,-260,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
    MatCol(t,-220,"На р/с",0,BankVal,true,0);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    if (HasLocalization("POL")) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      MatCol(t=kReceiptRowTypeNormal,190,"Текст",0,CustName,false,0);
      MatCol(t,-310,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
      MatCol(t,-270,"На р/с",0,BankVal,true,0);
      MatCol(t,-200,"К осн. в.1",0,ToRateB1BankVal,true,0);
      MatCol(t,-160,"Сум.осн. в вал.1",0,B1BankVal,true,0);
    end;
  end;
  if (IsEnterprise) then begin
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=kReceiptRowTypeNormal,190,"Текст",0,CustName,false,0);
    MatCol(t,-270,"Сп.опл.",0,PayMode,false,PMSClass);
    if (StandardHansa==false) then begin
      MatCol(t,-220,"№ чека",0,ChequeNr,false,0);
    end;
    MatCol(t,-130," Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    MatCol(t=kReceiptRowTypeWriteoff,-390,"Вал. ",0,InvCurncy,true,0);
    MatCol(t,-350,"Сумма сч/ф",0,InvVal,true,0);
    MatCol(t,-260,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
    MatCol(t,-220,"На р/с",0,BankVal,true,0);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=kReceiptRowTypeNormal,190,"Текст",0,CustName,false,0);
    MatCol(t,-320,"№ счета",0,OrderNr,false,ORSClass);
    MatCol(t,-230,"№ предоп.",0,CUPNr,false,ARPaySClass);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    MatCol(t=kReceiptRowTypeWriteoff,-390,"Вал.",0,InvCurncy,true,0);
    MatCol(t,-350,"Сумма сч/ф",0,InvVal,true,0);
    MatCol(t,-260,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
    MatCol(t,-220,"На р/с",0,BankVal,true,0);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=kReceiptRowTypeNormal,190,"Текст",0,CustName,false,0);
    if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
      MatCol(1,-310,"Налог",0,TaxTemplateCode,false,TaxTemplateSClass);
    end else begin
      MatCol(1,-310,"НДС",0,VATCode,false,VATCodeSClass);
    end;
    MatCol(t,-270,"Сумма НДС",0,VATVal,false,0);
    MatCol(t,-200,"Экстра НДС",0,TAX1Sum,false,0);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    MatCol(t=kReceiptRowTypeWriteoff,-390,"Вал. ",0,InvCurncy,true,0);
    MatCol(t,-350,"Сумма сч/ф",0,InvVal,true,0);
    MatCol(t,-260,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
    MatCol(t,-220,"На р/с",0,BankVal,true,0);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=kReceiptRowTypeNormal,190,"Текст",0,CustName,false,0);
    MatCol(t,-260,"Объекты",0,Objects,false,ObjSClass);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    MatCol(t=kReceiptRowTypeWriteoff,-390,"Вал.",0,InvCurncy,true,0);
    MatCol(t,-350,"Сумма сч/ф",0,InvVal,true,0);
    MatCol(t,-260,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
    MatCol(t,-220,"На р/с",0,BankVal,true,0);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=kReceiptRowTypeNormal,190,"Счет округл.",0,RoundOffAcc,false,AccSClass);
    MatCol(t,-360,"Округление",0,RoundOff,true,0);
    if (StandardHansa==false) then begin
      MatCol(t,-300,"Взнос",0,InstNr,false,ARInstallSClass);
    end;
    MatCol(t,-170,"Ссылка",0,rkRecNumber,false,0);
    MatCol(t=kReceiptRowTypeWriteoff,-390,"Вал.",0,InvCurncy,true,0);
    MatCol(t,-350,"Сумма сч/ф",0,InvVal,true,0);
    MatCol(t,-260,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
    MatCol(t,-220,"На р/с",0,BankVal,true,0);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=kReceiptRowTypeNormal,190,"Дебиторы",0,ARAcc,false,AccSClass);
    if (StandardHansa==false) then begin
      MatCol(t,-320,"№ кред.договор.",0,CredManNr,false,CredManSClass);
    end;
    MatCol(t,-220,"Комментарий",0,Comment,false,0);
    MatCol(t=kReceiptRowTypeWriteoff,-390,"Вал.",0,InvCurncy,true,0);
    MatCol(t,-350,"Сумма сч/ф",0,InvVal,true,0);
    MatCol(t,-260,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
    MatCol(t,-220,"На р/с",0,BankVal,true,0);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=kReceiptRowTypeNormal,200,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
    MatCol(t,-410,"На р/с",0,BankVal,true,0);
  //  MatCol(t,-340,"Bank Fee",0,BankFeeVal,true,0);
    MatCol(t,-280,"К осн. в.1",0,ToRateB1BankVal,true,0);
    MatCol(t,-210,"Сум.осн. в вал.1",0,B1BankVal,true,0);
    MatCol(t,-105,"Сум.осн. в вал.2",0,B2BankVal,true,0);
  //  MatCol(t,-200,"Fee %",0,BankFeePrc,true,0); /* What was this ?? */
  //  MatCol(t,-70,"Coef. Value",0,Coef,true,0);
    MatCol(t=kReceiptRowTypeWriteoff,-390,"Вал.",0,InvCurncy,true,0);
    MatCol(t,-350,"Сумма сч/ф",0,InvVal,true,0);
    MatCol(t,-260,"Вал.",0,BankCurncy,true,CurncyCodeSClass);
    MatCol(t,-220,"На р/с",0,BankVal,true,0);
    MatCol(t,-130,"Вал.",0,RecCurncy,true,CurncyCodeSClass);
    MatCol(t,-90,"Получено",0,RecVal,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=1,-470,"Вал. банка",0,BankCurncy,true,CurncyCodeSClass);
    MatCol(t,-430,"На р/с",0,BankVal,true,0);
    MatCol(t,-350,"Курс",0,FrRateBankVal,true,0);
    MatCol(t,-310,"К осн. в.1",0,ToRateB1BankVal,true,0);
    MatCol(t,-240,"К осн. в.2",0,ToRateB2BankVal,true,0);
    MatCol(t,-170,"Осн.вал. 1",0,BaseRate1BankVal,true,0);
    MatCol(t,-95,"Осн.вал. 2",0,BaseRate2BankVal,true,0);
//    MatCol(t,-10,"Received Value",0,RecVal,true,0);
  end else begin
    if (HasRussianPrepayment) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      MatCol(t=kReceiptRowTypeNormal,190,"Текст",0,CustName,false,0);
      MatCol(1,-265,"НДС",0,VATCode,false,VATCodeSClass);
      MatCol(t,-230,"Знач.НДС",0,VATVal,false,0);
      MatCol(t,-170,"Счет №",0,OrderNr,false,ORSClass);
      MatCol(t,-85,"Предоплата",0,CUPNr,false,ARPaySClass);
    end else begin
      if (Left(BuildProductCode,5)=="Books") then begin
        Flip(flipnr); flipnr = flipnr + 1;
        MatCol(t=kReceiptRowTypeNormal,-265,"НДС",0,VATCode,false,VATCodeSClass);
        MatCol(t,-230,"Знач.НДС",0,VATVal,false,0);
        MatCol(t,-170,"Дата опл.",0,PayDate,false,0);
        MatCol(t,1,"Ссылка",0,rkRecNumber,false,0);
      end;
    end;
  end;
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 22;
  v = v + 1;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  vs = 20;

  //Добавлено 26.11.09 INAU
  Tile(2,250,false,"2",LogNewUser);
  EditField(h=130,v=20,70,"Cоздал",ViewOnly,LogNewUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogNewDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogNewTime,false,0);
  EditField(h=130,v+=20,70,"Cохранил",ViewOnly,LogSaveUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogSaveDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogSaveTime,false,0);
  EditField(h=130,v+=20,70,"Закрыл (OK)",ViewOnly,LogOKUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogOKDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogOKTime,false,0);
  EditField(h=130,v+=20,70,"Распечатал",ViewOnly,LogPrintUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogPrintDate,false,0);
  //==26.11.09

  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Добавить комиссию банка",' ',2,"NewFeeIPDsm");
    SpecialMenu("Добавить списание",' ',1,"NewWriteoffIPDsmV");
    SpecialMenu("Проверить сумму платежа",' ',6,"IPInfoIPDsm");
    if (HasModNL) then begin
      SpecialMenu("Открыть запись операции",'t',9,"OpenTRFromIP");
    end;
    SpecialMenu("Создать счет-фактуру на аванс",' ',7,"DownPayFromIPDsm");
  end else begin
    if (HasSettlementDiscount or Left(BuildProductCode,5)=="Books") then begin
      SpecialMenu("Доб. скидку",' ',0,"CashDiscountIPDsm");
    end;
    SpecialMenu("Добавить списание",' ',1,"NewWriteoffIPDsmV");
    if (IsEnterprise or Left(BuildProductCode,5)=="Books") then begin
      SpecialMenu("Добавить комиссию банка",' ',2,"NewFeeIPDsm");
    end;
    if (HasWithholdingTax) then begin
      SpecialMenu("Добавить удержания",' ',8,"IPPasteWithholdingIPDsm");
    end;
    if (IsEnterprise) then begin
      if (StandardHansa==false) then begin
        SpecialMenu("Распределить чеки",' ',13,"DistributeChequesIPDsm");
//        SpecialMenu("Print #Cheques#",' ',9,"PrintChequesIPDsm");
      end;
    end;
    if (IsEnterprise or Left(BuildProductCode,5)=="Books") then begin
      SpecialMenu("Распределить сумму",' ',3,"IPExpandIPDsm");
    end;
    if (IsEnterprise) then begin
      SpecialMenu("Рассчитать сумму",'=',4,"CalculateFieldIPDsm");
      SpecialMenu("Списать аванс",' ',5,"WriteofPrepayIPDsm");
    end;
    if (IsEnterprise or Left(BuildProductCode,5)=="Books") then begin
      SpecialMenu("Проверить сумму платежа",' ',6,"IPInfoIPDsm");
    end;
    if (HasModNL) then begin
      SpecialMenu("Открыть запись операции",'t',9,"OpenTRFromIP");
    end;
    if (HasTaxMatrix) then begin
        SpecialMenu("Открыть налоговую матрицу",' ',25,"OpenVatMatrixIPDsm");
    end;
    if (HasModCRM or HasStandardCRM) then begin
      SpecialMenu("Создать деятельность",'c',14,"ActFromIPDsm");
    end;
    if (IsEnterprise) then begin
      SpecialMenu("Создать приходный ордер",' ',11,"CLInFromIPDsm");
      if (StandardHansa==false) then begin
        SpecialMenu("Создать чек",'e',9,"CreateCheckIPDsm");
      end;
      SpecialMenu("Создать счет-фактуру на аванс",' ',7,"DownPayFromIPDsm");
    end;
    if (HaseMail) then begin
      SpecialMenu("Создать E-Mail",'m',18,"CreateMailFromIPDsm");
    end;
    if (HasRussianPrepayment) then begin
      SpecialMenu("Создать сч/ф на предоплату",' ',10,"IVFromPrepIPDsm");
    end;
    if (IsEnterprise) then begin
      if (StandardHansa==false) then begin
        if (HasLocalization("HRV,SRB,SLV,UKR")) then begin
        	SpecialMenu("Создать коррекцию НДС книги продаж",' ',17,"VATCorrectionIPDsm");
        end;
        SpecialMenu("Платёж кредитной картой",' ',15,"CCPayIPDsm");
      end;
      SpecialMenu("Выписка банка",' ',16,"BankStIPDsm");
      SpecialMenu("Распечатать ПКО-РКО",' ',8,"PrintCashInOutIPDsm");
    end else begin
      if (HasLocalization("HRV")) then begin
        SpecialMenu("Create #VAT# Correction #S/L#",' ',17,"VATCorrectionIPDsm");
      end;
    end;
  end;
  EndWindow;


//=============================================== PPVc
  WindowBegin("Выплата",PPDClass,CGview,-);
  SetWRect(20,80,927,350);
  Sizeable(-1,-1,0,0);
  UseView(PPVc);
  FormName(PersPayForm);
  ActiveFieldOnNew("PayDate");
  h = 80; h2 = 222; h3 = 444; v = 6;
  if (IsEnterprise or HasMultiCurrency or HasBase2) then begin
    Tile(0,50+24+24,false,"",PayMode);
  end;
  EditField(h,v, 60,"Номер",St_i,SerNr,false,TSerSClass);
  EditField(h2,v,80,"Дата вып.",Normal,PayDate,false,PasteCurDate);
  if (HasModNL) then begin
    EditField(h3,v,85,"Дата опер.",Normal,TransDate,false,PasteCurDate);
  end;
  EditField(h,v+=20,30,"Способ опл.",Normal,PayMode,false,PMSClass);
  EditField(h2,v,80,"Код сорт.",Normal,SortCode,false,0);
  EditField(h3,v,200,"Собств. банк. счет",Normal,BankAcc,false,0);
//  EditField(-225,v,85,"Reference",Normal,PayNumber,false,0); // no such field...
  EditField(h, v+=20, 70, "Подписи:", ViewOnly, Sign, false, 0);
  EnterSkip(Math);
  EditField(h2, v, 70, "", ViewOnly, BankName, false, 0);

  tilenr = 1;
  if (IsEnterprise or HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Суммы"); tilenr = tilenr + 1;
  end;
  if (IsEnterprise or HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Валюты"); tilenr = tilenr + 1;
   end;
    TileButton(3,"История");
  tilenr = 1;
  if (IsEnterprise or HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,171,true,tilenr,Math); tilenr = tilenr + 1;
  end;
  if (HasMultiCurrency or HasBase2) then begin
    EditField(-300,-41,85,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
  end;
  if (IsEnterprise) then begin
    EditField(-300,-21,85,"Комис.банка",Normal,ExtraCost,true,0);
  end;
  EditField(-125,-41,85,"Сумма",ViewOnly,PayVal,true,0);
  if (IsEnterprise) then begin
    EditField(-125,-21,85,"Выплачено",ViewOnly,BasePayVal,true,0);
  end;
  if (tilenr>1) then begin
    v = 24;
  end else begin
    v = v+40;
  end;
  h=4;
  MatrixBegin(h,v,-50,-50,-,99);
  MatTypedRow(stp);
  MatOverStrike(ovst);
  Flip(0);
  MatCol(1,24,"Сотр.",0,Person,false,UserSClass);
  MatCol(1  ,100,"Коммент.",0,Comment,false,0);
  MatCol(1 ,-327,"Сумма",0,PayVal,true,0);
  //if (HasObjects) then begin
  //  MatCol(t  ,195,"Способ опл.",0,PayMode,false,PMSClass);
  //  MatCol(t  ,-380,"Объект",0,Objects,false,ObjSClass);
  //end else begin
  //  MatCol(t  ,-290,"Способ опл.",0,PayMode,false,PMSClass);
  //end;

  Flip(1);
  MatCol(1 ,-260,"Спос.опл.",0,PayMode,false,PMSClass);
  MatCol(1  ,-200,"Объект",0,Objects,false,ObjSClass);

  Flip(2);
  if (HasModCheck) then begin
    MatCol(t  ,-327,"Чек",0,ChequeNr,false,OwnCheckSClass);
  end;
  MatCol(1  ,-260,"Счет в банке",0,BankAcc,false,0);
  MatCol(1  ,-150,"Номер ссылки",0,rkPayNumber,false,0); //new nk
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 20;
  v = 18; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  CheckBox(25,v=-42,0,"Заказано",SentFlag); //OrderedFlag
  CheckBox(115,v=-42,0,"Утверждено",OrderedFlag);
  CheckBox(25,v=-25,0,"OK",DoneFlag);

  if (IsEnterprise or HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
    vs = 20; h1 = 110; h2 = 295;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
    EditField(h1,v=6,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h1,v+vs,50,"Осн. валюта 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h1,v+vs,50,"Осн. валюта",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h1,v+(vs*2),50,"Осн. валюта 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Курс",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осн. валюта 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Осн. валюта 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осн. валюта",false);
      end;
    end else begin
      EditField(h1,v+=vs,50,"Осн. валюта 1",Normal,BaseRate1,true,0);
      EditField(h1,v+=vs,50,"Осн. валюта 2",Normal,BaseRate2,true,0);
    end;
  end;
  //18.03.13 INAU
  Tile(3, 180, false, "", LogNewUser);
  EditField(h=130, v=16, 70, "Создал", ViewOnly, LogNewUser, false, 0);
  EditField(h+=80, v,70, "", ViewOnly, LogNewDate, false, 0);
  EditField(h+=80, v,50, "", ViewOnly, LogNewTime, false, 0);
  EditField(h=130, v+=vs, 70, "Сохранил", ViewOnly, LogSaveUser, false, 0);
  EditField(h+=80, v,70, "", ViewOnly, LogSaveDate, false, 0);
  EditField(h+=80, v,50, "", ViewOnly, LogSaveTime, false, 0);
  EditField(h=130, v+=vs, 70, "Заказал", ViewOnly, LogSentUser, false, 0);
  EditField(h+=80, v,70, "", ViewOnly, LogSentDate, false, 0);
  EditField(h+=80, v,50, "", ViewOnly, LogSentTime, false, 0);
  EditField(h=130, v+=vs, 70, "Подтвердил", ViewOnly, LogOrderedUser, false, 0);
  EditField(h+=80, v,70, "", ViewOnly, LogOrderedDate, false, 0);
  EditField(h+=80, v,50, "", ViewOnly, LogOrderedTime, false, 0);
  EditField(h=130, v+=vs, 70, "OK", ViewOnly, LogDoneUser, false, 0);
  EditField(h+=80, v,70, "", ViewOnly, LogDoneDate, false, 0);
  EditField(h+=80, v,50, "", ViewOnly, LogDoneTime, false, 0);
  EditField(h=130, v+=vs, 70, "Aннулировал", ViewOnly, LogAnnulUser, false, 0);
  EditField(h+=80, v, 70, "", ViewOnly, LogAnnulDate, false, 0);
  EditField(h+=80, v, 50, "", ViewOnly, LogAnnulTime, false, 0);
  //
  if (IsEnterprise) then begin
    SpecialMenu("Распечатать кассовую книгу",' ',0,"PrintCashInOutPPDsm");
  end;
  if (HasModNL) then begin
    SpecialMenu("Открыть запись операции",'t',1,"OpenTRFromPP");
  end;
  //=== t+
	SpecialMenu("Подписать", ' ', 4, "SignIt");
	SpecialMenu("Оборотно-сальдовая",' ',5,"OSVed");
  //===
  if (IsEnterprise) then begin
    SpecialMenu("Банк. выписка",' ',3,"BankStPPDsm");
    if (StandardHansa==false) then begin
      SpecialMenu("Подготовить Чек",'e',9,"PrepChequePPDsm");
      SpecialMenu("Распечатать Чек",' ',9,"PrintChequesPPDsm");
    end;
  end;
  EndWindow;


  WindowBegin("Определите журнал выплат подотчетным лицам",PPJRClass,CGRcW,RcType);
  SetWRect(20,80,425,250);
  vs = 20; h = 170;
  EditFieldTL(h,v=10, 150,"Номер",   M4Str,Normal,30,f1,false,0);
  PeriodField(h,v+=vs,"Период");
  EditFieldTL(h,v+=vs ,20,"Способ оплаты",M4Code,Normal,2,f3,false,PMSClass);
  //EditFieldTL(h,v+=vs ,120,"Создал",M4Code,Normal,20,f4,false,UserSClass);
  //EditFieldTL(h,v+=vs ,120,"Подписал",M4Code,Normal,20,f5,false,UserSClass);
  //EditFieldTL(h,v+=vs ,120,"Утвердил",M4Code,Normal,20,f6,false,UserSClass);
  CheckBox(h,20+v+=vs,0,"неутвержденные",flags[0]);
  CheckBox(h,v+=16,0,"утвержденные",flags[1]);
  CheckBox(h,v+=16,0,"выплаченные",flags[2]);
  EndWindow;


  WindowBegin("Определите журнал выплат подотчетным лицам",PPJ1RClass,CGRcW,RcType); //Только для учредителей и админов
  SetWRect(20,80,465,250);
  vs = 20; h = 170;
  EditFieldTL(h,v=10, 150,"Номер",   M4Str,Normal,30,f1,false,0);
  PeriodField(h,v+=vs,"Период");
  EditFieldTL(h,v+=vs ,20,"Способ оплаты",M4Code,Normal,2,f3,false,PMSClass);
  EditFieldTL(h,v+=vs ,120,"Создал",M4Code,Normal,20,f4,false,UserSClass);
  EditFieldTL(h,v+=vs ,120,"Подписал",M4Code,Normal,20,f5,false,UserSClass);
  EditFieldTL(h,v+=vs ,120,"Утвердил",M4Code,Normal,20,f6,false,UserSClass);
  CheckBox(h,20+v+=vs,0,"неутвержденные",flags[0]);
  CheckBox(h,v+=16,0,"утвержденные",flags[1]);
  CheckBox(h,v+=16,0,"выплаченные",flags[2]);
  EndWindow;


//=============================================== ExpVc
  WindowBegin("Авансовый отчет",ExpDClass,CGview,-);
  Sizeable(-1,-1,0,0);
  UseView(ExpVc);
  FormName(ExpForm);
  ActiveFieldOnNew("DocDate");
  SetWRect(20,80,665,350);
  h = 100; h2 = 320;
  if (HasMultiCurrency or HasApprovals) then begin
    tilenr = 0;
    Tile(tilenr,70+18,false,"",Person); tilenr = tilenr + 1;
  end;
  EditField(h,v=6, 55,"Номер",   Normal,SerNr,false,TSerSClass);//St_i
  EditField(242,v,82,"Дата действия",Normal,DocDate,false,PasteCurDate);
  if (HasModNL) then begin
    EditField(402,v,82,"Дата транз.",Normal,TransDate,false,PasteCurDate);
  end;
  EditField(h,v+=20,55,"Сотрудник",Normal,Person,false,UserSClass);
  EnterSkip(OKSign);
  EditField(242,v,-100,"Наим.",Normal,Name,false,0);
  v = v + 20;
  if (HasApprovals) then begin
    EditField(h,v,55,"Подписавшийся",ViewOnly,OKSign,false,0);
  end;
  if (HasMultiCurrency or HasBase2) then begin
    EditField(242,v,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
  end;
  if ((HasLocalization("LVA")) or (IsEnterprise and StandardHansa==false)) then begin
    EditField(242+200,v,-100,"Налог. орган ID",Normal,TaxAuthID,false,0);
  end;
  if (HasMultiCurrency or HasBase2 or HasApprovals) then begin
    tilenr = 1;
    TileButton(tilenr,"Ст-ть"); tilenr = tilenr + 1;
  end;
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Валюта"); tilenr = tilenr + 1;
  end;
  if (HasApprovals) then begin
    TileButton(tilenr,"Другое"); tilenr = tilenr + 1;
  end;
    TileButton(4,"История");

  tilenr = 1;
//  CheckBox(242,vm,0,"OK",OKFlag);
  EnterSkip(Math);
  if (HasMultiCurrency or HasBase2 or HasApprovals) then begin
    Tile(tilenr,120,true,tilenr,Math); tilenr = tilenr + 1;
  end;
 // CheckBox(24,-21,0,"OK",OKFlag);
  CheckBox(24,-21,0,"Подписано",OKFlag);
  CheckBox(120,-21,0,"Оформлено",FormalizedFlag);

//  EditField(70,-21,50,"Currency",Normal,CurncyCode,false,CurncyCodeSClass);
 // EditField(220,-21,50,"№ док.",Normal,NrofRecs,true,0);
 // EditField(320,-21,100,"НДС",ViewOnly,CalcVATVal,true,0);
  EditField(-140,-21,100,"ВСЕГО",ViewOnly,PayVal,true,0);
  EnterSkip(Math);
  h=4;
  if (HasMultiCurrency or HasBase2 or HasApprovals) then begin
    MatrixBegin(h,v=24,-50,-26,-,199);
  end else begin
    MatrixBegin(h,v+=40,-50,-26,-,199);
  end;
  MatTypedRow(stp);
  flipnr = 0;
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,32,"Счет",0,AccNumber,false,AccSClass);
  pos = 90;
  Flip(flipnr); flipnr = flipnr + 1;
  if (HasObjects) then begin
    MatCol(1,pos,"Объекты",0,Objects,false,ObjSClass);
    pos = 180;
  end;
 // if (HasAdvancedAccounting) then begin
 //   MatCol(1,pos,"Кратк.",0,ACShort,false,ACShortSClass);
 //   pos = 240;
 // end;
  MatCol(1,pos,"Опис.",0,Comment,false,0);
  MatCol(1,-210,"Сумма с НДС",0,Sum,true,0);
  MatCol(1,-100,"НДС",0,VATSum,true,0);
  MatCol(1,-30,"Код НДС",0,VATCode,false,VATCodeSClass);
  MatText(t=kExpenseRowTypePersonnelPayment,32,"Номер выплаты",true);
  MatCol(t,133,"",0,PPNr,true,PPSClass);
//  MatCol(t,-300,"",0,PPRow,true,0);
  MatCol(t,-213,"",0,Comment,false,0);
  MatCol(t,-103,"",0,Sum,true,0);
  if (HasModTS or HasObjects) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    if (HasObjects) then begin
      MatCol(1,80,"Объекты",0,Objects,false,ObjSClass);
    end;
//    if (HasAdvancedAccounting) then begin
//      MatCol(1,130,"Кратк.",0,ACShort,false,ACShortSClass);
//    end;
    MatCol(1,180,"Опис.",0,Comment,false,0);
    MatCol(1,-280,"Сумма вкл. НДС",0,Sum,true,0);
    MatCol(1,-170,"Товар",0,Item,false,INSClass);
    if (HasModTS) then begin
      MatCol(1,-120,"К-во",0,qty,true,0);
      MatCol(1,-75,"Проект",0,PRCode,false,PRSClass);
    end;
  end;
//  MatCol(1,-30,"#V-Cd#",0,VATCode,false,VATCodeSClass);
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,80,"Дата",0,ExpDate,false,PasteCurDate);
  pos = 155;
  if (HasModPL) then begin
    MatCol(1,pos,"Поставщик",0,VECode,false,VESClass);
    pos = 225;
  end;
  if (IsEnterprise) then begin
    MatCol(1,pos,"Identifier",0,Identifier,true,0);  pos = -345;
  end else begin
    pos = -515;
  end;
  if (HasModPL) then begin
    MatCol(1,pos,"Наим. пост-ка",0,VEName,false,0); pos = pos + 95;
  end;
  MatCol(1,pos,"Номер документа",0,DocNr,false,0);
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,80,"Опис.",0,Comment,false,0);
  if (HasLocalization("ARG")) then begin
    MatCol(1,-535,"CAE/CAI Expiry Date",Normal,CAEExpiry,false,PasteCurDate);
    MatCol(1,-425,"CAE/CAI Code",Normal,CAE,false,0);
    MatCol(1,-340,"Пробег",0,WayList,true,WayListSClass);
    MatCol(1,-260,"Проект",0,PRCode,false,PRSClass);
  end else begin
    if (IsEnterprise) then begin
    MatCol(1,-340,"Пробег",0,WayList,true,WayListSClass);
      MatCol(1,-280,"Офиц.",0,LegalInvNr,true,0);
    end;
  end;
  if (IsEnterprise) then begin
  MatCol(1,-185,"Налог. орган ID",0,TaxAuthID,true,0);
  MatCol(1,-105,"Налог. орган ID копия",0,TaxAuthIDCC,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,80,"Опис.",0,Comment,false,0);
  MatCol(1,-400,"Юрид. номер сч.",0,LegalInvNr,true,0);
  MatCol(1,-300,"Ссылка",0,RefStr,false,0);
  MatCol(1,-80,"Суточные возмещения",0,DANr,false,DASClass);
  end;
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;

  vs = 22;
  v = 18;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
       v = v + vs;
    end;
  end;
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
    vs = 20; h=110; h2=295;
    if (HasBase2) then begin
      h = h + 20;
    end;
    EditField(h,v=6,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h,v+vs,50,"Осн. валюта 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h,v+vs,50,"Осн. валюта",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h,v+(vs*2),50,"Осн. валюта 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Курс",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осн. валюта 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Осн. валюта 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осн. валюта",false);
      end;
    end else begin
      EditField(h,v+=vs,50,"Осн. валюта 1",Normal,BaseRate1,true,0);
      EditField(h,v+=vs,50,"Осн. валюта 2",Normal,BaseRate2,true,0);
    end;
  end;
  if (HasApprovals) then begin
    Tile(tilenr,120,false,tilenr,-); tilenr = tilenr + 1;
    vs = 20;
    ButtonFrame(h3=520,v=16,123,6,"Статус одобр.");
    RadioButton(h3,v,kAcceptanceStateNotRequired,0,"Не треб.",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"Не нач.",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"Не запрош.",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStatePending,0,"Ожид.",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"Согл.",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"Откл.",AcceptanceStatus);
  end;
   //18.03.13 INAU
  Tile(tilenr,150,false,tilenr,-); tilenr = tilenr + 1;
  //Tile(3, 150, false, "", LogNewUser);
  EditField(h=130, v=16, 70, "Создал", ViewOnly, LogNewUser, false, 0);
  EditField(h+=80, v,70, "", ViewOnly, LogNewDate, false, 0);
  EditField(h+=80, v,50, "", ViewOnly, LogNewTime, false, 0);
  EditField(h=130, v+=vs, 70, "Сохранил", ViewOnly, LogSaveUser, false, 0);
  EditField(h+=80, v,70, "", ViewOnly, LogSaveDate, false, 0);
  EditField(h+=80, v,50, "", ViewOnly, LogSaveTime, false, 0);
  EditField(h=130, v+=vs, 70, "Оформил", ViewOnly, LogFormalizedUser, false, 0);
  EditField(h+=80, v,70, "", ViewOnly, LogFormalizedDate, false, 0);
  EditField(h+=80, v,50, "", ViewOnly, LogFormalizedTime, false, 0);
  EditField(h=130, v+=vs, 70, "ОК", ViewOnly, LogOKUser, false, 0);
  EditField(h+=80, v,70, "", ViewOnly, LogOKDate, false, 0);
  EditField(h+=80, v,50, "", ViewOnly, LogOKTime, false, 0);
  EditField(h=130, v+=vs, 70, "Aннулировал", ViewOnly, LogAnnulUser, false, 0);
  EditField(h+=80, v, 70, "", ViewOnly, LogAnnulDate, false, 0);
  EditField(h+=80, v, 50, "", ViewOnly, LogAnnulTime, false, 0);

  if (HasModNL) then begin
    SpecialMenu("Открыть запиьс операции",'t',0,"OpenTRFromExp");
  end;
 // if (IsEnterprise and StandardHansa==false) then begin
 //   SpecialMenu("Авториз.",' ',1,"AuthExpsm");
 // end;
  if (HasApprovals) then begin
  SpecialMenu("Статус расхода",'r',4,"ExpStatusDsm");
  end;
  if (HaseMail) then begin
    SpecialMenu("Создать e-mail",'m',12,"CreateMailFromExpDsm");
  end;
  if (HasApprovals) then begin
    SpecialMenu("Отпр. на утверждение",' ',2,"ExpSendforAcceptanceExpDsm");
    SpecialMenu("Отменить запрос на одобр.",' ',2,"CancelApprovalRequestDsm");
  end;
  SpecialMenu("Соединить с перс. выплатой",' ',3,"ConnectToPPExpDsm");
  SpecialMenu("Подписать",' ',1,"AuthExpsm");
  EndWindow;


  WindowBegin("Определите журнал авансовых отчетов",ExpJRClass,CGRcW,RcType);
  SetWRect(20,80,465,250);
  v= 10; vs = 20;
  EditFieldTL(150,v, 150,"Номер",   M4Str,Normal,30,f1,false,0);
  PeriodField(150,v+=vs,"Период");
  EditFieldTL(150,v+=vs ,75,"Сотрудник",M4UStr,Normal,20,f2,false,UserSClass);
  EditFieldTL(150,v+=vs ,75,"Объект PODR",M4UStr,Normal,20,f3,false,ObjPODRSClass);
  EditFieldTL(150,v+=vs ,75,"Объект FN1",M4UStr,Normal,20,f4,false,ObjSClass);
  h = 90; vm=v+50; v=vm;
  ButtonFrame(h,v,123,2,"ФункциЯ");
  RadioButton(h,v,0,0,"Сводный",ArtMode);
  RadioButton(h,v+=16,1,0,"Подробный",ArtMode);
  h= h+148; v = vm;
  ButtonFrame(h,v,123,2,"Статус");
  CheckBox(h,v,0,"неподписанные",flags[1]);
  CheckBox(h,v+=16,0,"подписанные",flags[3]);
  CheckBox(h,v+=16,0,"утвержденные",flags[2]);
  EndWindow;


//=============================================== RetVc
  WindowBegin("Возврат товаров от клиента",RetDClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(RetVc);
  ActiveFieldOnNew("CustCode");
  Tile(0,110,false,"",TransDate);
  v = 6; vs = 20;
  EditField(75,vm=(v=6),95,"Но.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Клиент",Normal,CustCode,false,CUSClass);
  EditField(h=275,v=vm,-40,"Наимен.",Normal,CustName,false,0);
  if (HasOfficialSerNr) then begin
    EditField(h,vm=(v+=20),135,"Оф. номер",Normal,OfficialSerNr,false,LegalInvNrSClass);
  end;

  EditField(75,v+=20,130,"Штрих-код",Normal,Barcode,false,0);
  EnterSkip(BQuant);
  EditField(h2,v,60,"K-во",Normal,BQuant,false,0);
  CheckBox(h2 + 100, v, 0, "Прибавлять", AddIt);
  EditField(75 ,v += 20, 200,"Tовар",ViewOnly,IName,false,0);
//  EditField(h+210,v,82, "Employee",Normal,EMCode,false,UserSClass);
  CheckBox(h4=-100,v,0,"ОК",OKFlag);
  TileButton(1,"Условия");
  TileButton(2,"Товары");
  TileButton(3,"Валюта");
  TileButton(4,"Комментарий");
  TileButton(5,"История"); //25.11.09 INAU

  Tile(1,90,false,"1",Location);
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -110;
  EditField(h1,vm=(v=6),82,"Дата",Normal,TransDate,false,PasteCurDate);
  if (HasMultiLocations) then begin
    EditField(h1,v+=vs,82,"Склад",Normal,Location,false,LocationSClass);
  end;
  EditField(h1,v+=vs,82,"Причина",Normal,Reason,false,StandProblemsSClass);
  if (HasObjects) then begin
    EditField(h1,v+=vs,82,"Объекты",Normal,Objects,false,ObjSClass);
  end;
  EditField(h2,v=vm,135,"Номер счета",ViewOnly,OrdNr,false,0);
  EditField(h2,v+=vs,135,"Номер отгр.",ViewOnly,SHNr,false,0);
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,135,"№ зак. на обсл.",ViewOnly,SVONr,false,0);
    EditField(h2,v+=vs,135,"№ табл. работ",ViewOnly,WSNr,false,0);
  end;
  EnterSkip(Math);
  ButtonFrame(h3=h3-70,v=vm+10,140,2,"Уменьшить количество");
  RadioButton(h3,v,0,0,"Только отгруженные",Type);
  RadioButton(h3,v+=16,1,0,"Заказанные и отгруж.",Type);
  CheckBox(h4,v=vm+10,0,"Обновить склад",UpdStockFlag);
  CheckBox(h4,v+=16,0,"Цена вкл. НДС",InclVAT);
  CheckBox(h4,v+=16,0,"Без кр. сч/ф",Closed);
  Tile(2,79,true,"2",Math);
  v = 24;
  MatrixBegin(4,v,-50,-22,-,199);
  Flip(0);
  MatCol(1,32,"Товар",0,ArtCode,false,ForSaleINSClass);
//  MatCol(1,84,"Var",0,VARList,true,VARSClass);
//  MatCol(1,144,"Qty",0,Quant,true,0);
  MatCol(1,94,"Кол-во",0,Quant,true,0);
  Flip(1);
//  MatCol(1,194,"Description",0,Spec,false,0);
  MatCol(1,144,"Наимен.",0,Spec,false,0);
  MatCol(1,-228,"Цена",0,UPrice,true,0);
  MatCol(1,-160,"Накладные расходы",0,Extra,true,0);
  MatCol(1,-80,"Стоимость",0,CostPrice,true,0);
  Flip(2);
  MatCol(1,134,"Объекты",0,Objects,false,ObjSClass);
  if (HasMultiLocations) then begin
    MatCol(1,264,"Сч/ф",0,Invd,false,0);
    MatColTL(1,-300,"Склад",0,M4UStr,ViewOnly,0,Location,false,0);
  end else begin
    MatCol(1,-300,"Сч/ф",0,Invd,false,0);
  end;
  MatColTL(1,-240,"Счет склада",0,M4UStr,ViewOnly,0,CostAcc,false,AccSClass);
  MatCol(1,-180,"Серийный №",0,SerialNr,false,SerialNrSClass);
  MatCol(1,-80,"Срок годности",0,BestBefore,false,0);
  Flip(3);
  if (HasObjects) then begin
    MatCol(1,144,"Объекты",0,Objects,false,ObjSClass);
  end;
  if (StandardHansa==false) then begin
    MatCol(1,-380,"Стоим. обратной закупки",0,BBCostPrice,false,0);
    MatCol(1,-300,"Место",0,PosCode,false,FreePosSClass);
  end;
  MatColTL(1,-240,"Структура",0,M4Ustr,ViewOnly,0,Recepy,false,0);
  MatCol(1,-180,"Ширина",0,UnitXval,true,0);
  MatCol(1,-120,"Высота",0,UnitYval,true,0);
  MatCol(1,-60,"Глубина",0,UnitZval,true,0);
  if (StandardHansa==false) then begin
    Flip(4);
    MatCol(1,144,"Описание",0,Spec,false,0);
    MatCol(1,-225,"Тип товара",0,WSIVType,false,SetSClass);
    if (HasSerialNumbers) then begin
      MatCol(1,-150,"Осн. серийн. номер",0,MotherNr,false,SerialNrSClass);
    end;
  end;
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 20;
  v = 18; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  if (StandardHansa==false) then begin
    v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  end;
//  CheckBox(20,-20,0,"OK",OKFlag);
  EditField(110,-20,50,"Total Qty",ViewOnly,SumQuant,true,0);
  Tile(3,70,false,"3",FrRate);
  vs = 20;
  EditField(h1,v=6,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
  if (HasMultiCurrency) then begin
    if (HasBase2) then begin
      EditField(h1,v+vs,50,"Осноная валюта 1",Normal,BaseRate1,true,0);
    end else begin
      EditField(h1,v+vs,50,"Осноная валюта",Normal,BaseRate1,true,0);
    end;
    if (HasBase2) then begin
      EditField(h1,v+(vs*2),50,"Осноная валюта 2",Normal,BaseRate2,true,0);
    end;
    EditField(h2=295,v,50,"Курс",Normal,FrRate,true,0);
    if (HasBase2) then begin
      RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осноная валюта 1",false);
      RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Осноная валюта 2",false);
    end else begin
      RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осноная валюта",false);
    end;
  end else begin
    EditField(h1,v+=vs,50,"Осноная валюта 1",Normal,BaseRate1,true,0);
    EditField(h1,v+=vs,50,"Осноная валюта 2",Normal,BaseRate2,true,0);
  end;
  Tile(4,30,false,"5",Comment);
  EditField(h1,v=6,-20,"Комментарий",Normal,Comment,false,0);
  if (HasNumberSeries and HasLocalization("PRT")) then begin
    if (HasOfficialSerNr) then begin
      EditField(h1,v+=vs,100,"Official Ser No. 2",Normal,OfficialSerNr2,false,0);
      EditField(h2,v,135,"Status",Normal,Status,false,SetSClass);
    end;
  end;
   //ƒобавлено 25.11.09 INAU
  Tile(5,130,false,"5",LogNewUser);
  EditField(h=130,v=20,70,"Создал",ViewOnly,LogNewUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogNewDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogNewTime,false,0);
  EditField(h=130,v=40,70,"Сохранил",ViewOnly,LogSaveUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogSaveDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogSaveTime,false,0);
  EditField(h=130,v=60,70,"Закрыл (OK)",ViewOnly,LogOKUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogOKDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogOKTime,false,0);
  //25.11.09

  SpecialMenu("Поиск товара",'f',1,"ItemSearchDsm");
  if (HasModNL) then begin
    SpecialMenu("Открыть запись операции",'t',0,"OpenTRFromRet");
  end;
  SpecialMenu("Выписать кредитный счет",'F',1,"CreditIVFromRetsm");
  if (HasQualityControl) then begin
    SpecialMenu("Контроль качества",'u',10,"QualConFromRetDsm");
  end;
  SpecialMenu("Cканировать",'S',2,"ScanItRet");
  SpecialMenu("Oчистить",'O',3,"ClearItRet");

  EndWindow;


//=============================================== SDDClass
  WindowBegin("Списание со склада",SDDClass,CGview,-);
  SetWRect(20,80,560,350);
  Sizeable(-1,-1,0,0);
  FormName(SDForm);
  UseView(SDVc);
  ActiveFieldOnNew("TransDate");
  if (IsEnterprise) then begin
    Tile(0,110,false,"",TransDate);
  end;
  vs = 20; h2 = 260; h3 = 430; h4 = 580;

  EditField(h=80,v=6, 82,"Номер",Normal,SerNr,false,TSerSClass);
  EditField(h2,v,82,"Дата операции",Normal,TransDate,false,PasteCurDate);
  if (IsEnterprise) then begin
  //  EditField(h3,v,100,"Причина",Normal,Reason,false,StandProblemsSClass);
    CheckBox(h4,v,0,"OK",OKFlag);
  end;
  if (IsEnterprise) then begin
    EditField(h,v+=vs,82,"Счет оприх.",Normal,CostAcc,false,AccSClass);
    EditField(h2,v,82,"Класс",Normal,SDClass,false,OrderClassSClass);
    EditField(h3,v,100,"Ссылка",Normal,RefStr,false,0);
    v = v + vs;
  end else begin
    CheckBox(h4,v,0,"OK",OKFlag);
    v = v + vs;
  end;
  if (HasMultiLocations) then begin
    EditField(h,v,82,"Склад",Normal,Location,false,LocationSClass);
  end;
  if (HasAdvancedAccounting) then begin
    EditField(h2,v,82,"Кратк. код",Normal,ACShort,false,ACShortSClass);
  end;
  if (HasModTS) then begin
    EditField(h3,v,100,"Проект",Normal,PRCode,false,PRSClass);
  end;
  if (HasObjects) then begin
    EditField(h2,v+=vs,270,"Объекты",Normal,Objects,false,ObjSClass);
  end;
  EnterSkip(Math);

//  CheckBox(450,6,0,"OK",OKFlag);
  if (IsEnterprise) then begin
    TileButton(1,"Товары");
	TileButton(2,"История");
    if (StandardHansa==false) then begin
      TileButton(3,"Другое");
    end;
    Tile(1,200,true,"1",Math);
  end;
  if (IsEnterprise) then begin
    v = 24;
    vm = v + 1;
    MatrixBegin(4,v,-50,-35,-,200);
  end else begin
    MatrixBegin(4,v+=40,-40,-15,-,99);
  end;
  Flip(0);
  if (HasJewelleryInterface) then begin
    MatCol(1,24,"Серийный номер",0,SerialNr,false,SerialNrSClass);
    EnterSkip(Quant);
    MatCol(1,130,"Товар",0,ArtCode,false,INSClass);
    if (HasVarieties) then begin
      MatCol(1,192,"Кол-во",0,Qty,true,MATVARINSClass);
    end else begin
      MatCol(1,192,"Кол-во",0,Qty,true,0);
    end;
    MatCol(1,254,"Описание",0,Spec,false,0);
  end else begin
    MatCol(1,32,"Товар",0,ArtCode,false,INSClass);
//  MatCol(1,94,"Var",0,VARList,false,VARSClass);
//  MatCol(1,144,"Qty",0,Qty,true,0);
    if (HasVarieties) then begin
      MatCol(1,94,"Кол-во",0,Qty,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Кол-во",0,Qty,true,0);
    end;
    MatCol(1,154,"Описание",0,Spec,false,0);
  end;
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  if (HasJewelleryInterface==false) and (HasSerialNumbers) then begin
    MatCol(1,-280,"Серийный номер",0,SerialNr,false,SerialNrSClass);
  end;
  if (HasMultiLocations) then begin
    MatCol(1,-160,"Местопол.",0,Location,false,LocationSClass);
  end;
  if (HasPositions) then begin
    MatCol(1,-100,"Позиция",0,PosCode,false,UsedPosSClass);
  end;
  if (IsEnterprise) then begin
    MatCol(1,-40,"Коэф.",0,Coefficient,false,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,-270,"Кратк. код",0,ACShort,false,ACShortSClass);
    MatCol(1,-200,"Счет стоим.",0,CostAcc,false,AccSClass);
    MatCol(1,-100,"Объекты",0,Objects,false,ObjSClass);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,-210,"FIFO",0,FIFO,true,0);
    MatCol(1,-125,"FIFO по стр.",0,FIFORowVal,true,0);
    MatCol(1,-40,"Коэф.",0,Coefficient,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,-240,"Рецепт",0,Recepy,false,RecSClass);
    if (StandardHansa==false) then begin
      MatCol(1,-180,"Проект",0,PRCodeRow,false,PRSClass);
    end;
    MatCol(1,-120,"Баз. цена",0,BasePrice,true,0);
    MatCol(1,-40,"Коэф.",0,Coefficient,false,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,-140,"Ширина",0,UnitXval,true,0);
    MatCol(1,-95,"Высота",0,UnitYval,true,0);
    MatCol(1,-50,"Глубина",0,UnitZval,true,0);
  end else begin
    if (HasModNL) then begin
      MatCol(1,-200,"Счет ст-ти",0,CostAcc,false,AccSClass);
    end;
    MatCol(1,-100,"Стоим-ть ед.",0,FIFO,true,0);
  end;
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 22;
  v = vm;/* 28 */
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
//  CheckBox(20,-20,0,"OK",OKFlag);
  EditField(h=150,-20,70,"Общ. кол-во",ViewOnly,TotQty,false,0);
  EditField(h=290,-20,-40,"Коммент.",Normal,Comment,false,0);

	  //Добавлено 26.11.12 TGOR
	Tile(2,400,false,"2",LogNewUser);
	EditField(h=270,v=20,70,"Создал",ViewOnly,LogNewUser,false,0);
	EditField(h+=80,v,70,"",ViewOnly,LogNewDate,false,0);
	EditField(h+=80,v,50,"",ViewOnly,LogNewTime,false,0);
	EditField(h=270,v=40,70,"Сохранил",ViewOnly,LogSaveUser,false,0);
	EditField(h+=80,v,70,"",ViewOnly,LogSaveDate,false,0);
	EditField(h+=80,v,50,"",ViewOnly,LogSaveTime,false,0);
	EditField(h=270,v=60,70,"Закрыл (OK)",ViewOnly,LogOKUser,false,0);
	EditField(h+=80,v,70,"",ViewOnly,LogOKDate,false,0);
	EditField(h+=80,v,50,"",ViewOnly,LogOKTime,false,0);
	//26.11.12


  if (HasApprovals) then begin
    Tile(3,200,true,"1",AcceptanceStatus);
    ButtonFrame(h3=-163,v=16,123,6,"Статус утверждения");
    RadioButton(h3,v,kAcceptanceStateNotRequired,0,"не обязательно",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"не начато",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"не запрошено",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStatePending,0,"в ожидании",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"утверждено",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"отклонено",AcceptanceStatus);
  end;
  SpecialMenu("Статус товара",'I',0,"ItemStatusSDDsm");
  if (HasAdvancedStock) then begin
    SpecialMenu("Статус списания со склада",'r',4,"SDStatusDsm");
  end;
  if (HasApprovals) then begin
    SpecialMenu("Отправить для утверждения",' ',1,"SDSendforAcceptanceSDDsm");
    SpecialMenu("Отменить запрос на утверждение",' ',2,"CancelApprovalRequestDsm");
  end;
  if (HasModNL) then begin
    SpecialMenu("Открыть запись операции",'t',1,"OpenTRFromSD");
  end;
  if (HasQualityControl) then begin
    if (StandardHansa==false) then begin
      SpecialMenu("Контроль качества",'u',2,"QualConFromSDDsm");
    end;
  end;
  SpecialMenu("Поиск товара",'f',1,"ItemSearchDsm");
  EndWindow;


//=============================================== ActVc
  WindowBegin("Деятельность",ActDClass,CGview,ActView);
  BlockLoad(LMb);
  SetWRect(64,80,760,500);
  BrowseButtons(false);
  Sizeable(-1,-1,0,0);
  UseView(ActVc);
  ActiveFieldOnNew("Comment");
  FormName(ActDocForm);

  showapprovaltile = false;
  if (StandardHansa==false and LMb.ApprovalTypeActDClass!=0) then begin
    wn = CurWindow;
    if (wn>0) then begin
      if (GetWindowClass(wn)=="ActDClass") then begin
        GetWindowRecord(wn,Actr);
        showapprovaltile = ActivityIsForAcceptanceOrFYI(Actr,true,false);
      end;
    end;
  end;

  v = 6; vs = 20; h = 100; h2 = 270; h3 = 420; h4 = 450; fs = 100;
  CommunicateButton;
  Tile(0,130,false,"",Comment);
  EditField(h,vm=6,-40,"Комментарий",Normal,Comment,false,0);
  EditField(h,v+=vs,80,"Вид",Normal,ActType,false,ActTypeSClass);//ActType2SClass
  EnterSkip(StartTime);
  EditField(h,v+=vs,80,"Язык",Normal,LangCode,false,LangSClass);
  EditField(h,v+=vs,80,"Приоритет",Normal,PrioLevel,false,0);
  EditField(h2,v=vm+vs,-40,"",Normal,ActTypeComment,false,0);
  EditField(h2,v+=vs,140,"Сотрудники",Normal,MainPersons,false,UserSClass);
  EditField(h4,v,-40,"Cc",Normal,CCPersons,false,UserSClass);
  EditField(h2,v+=vs,80,"Контролер",Normal,Supervisor,false,UserSClass);
  EditField(h4,v,-40,"Перенапр. утв.",Normal,ApprovalFwdPersons,false,UserSClass);
  EditField(h4,v+=vs,60,"Результат",Normal,ActResult,false,ActTypeSClass);
  tilenr = 1;
  if (showapprovaltile) then begin
    TileButton(tilenr,"Утверждение"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Время"); tilenr = tilenr + 1;
  TileButton(tilenr,"Клиент"); tilenr = tilenr + 1;
  TileButton(tilenr,"Текст"); tilenr = tilenr + 1;
  TileButton(tilenr,"Под-задачи"); tilenr = tilenr + 1;
  TileButton(tilenr,"Оповещения"); tilenr = tilenr + 1;
  if (StandardHansa==false) then begin
    TileButton(tilenr,"Ресурсы"); tilenr = tilenr + 1;
    TileButton(tilenr,"Обслуживание"); tilenr = tilenr + 1;
    TileButton(tilenr,"Опред. пользователем"); tilenr = tilenr + 1;
  end;
  CheckBox(-150,v,0,"Личное",PrivateFlag);
  CheckBox(-80,v,0,"Выполнено",OKFlag);
  tilenr = 1;
  if (showapprovaltile) then begin
    Tile(tilenr,100,false,"",-); tilenr = tilenr + 1;
    ButtonFrame(h=100,v=18,440,2,"Утверждение");
    HalPushButton(h+=5,v+=5,h+100,v+20,"ActDClassApproveActivity","Утвердить");
    HalPushButton(h+=110,v,h+100,v+20,"ActDClassForwardActivity","Перенаправить");
    HalPushButton(h+=110,v,h+100,v+20,"ActDClassRejectActivity","Отменить");
    HalPushButton(h+=110,v,h+100,v+20,"ActDClassSendFYI","Отправить для инф.");
    HalPushButton(h=105,v+=40,h+100,v+20,"ActDClassOpenApprovalRecord","Открыть запись");
    HalPushButton(h+=110,v,h+120,v+20,"ActDClassOpenApprovalAttach","Открыть вложенный файл");
  end;
  Tile(tilenr,90,false,"1",StartTime); tilenr = tilenr + 1;
  h = 100; h2 = 270;
  EditField(h,v=6,60,"Время начала",Normal,StartTime,false,PasteCurTime);
  EditField(h,v+=vs,60,"Время оконч.",Normal,EndTime,false,PasteCurTime);
  EditField(h,v+=vs,60,"Итого времени",Normal,CostTime,false,PasteCurTime);
  if (StandardHansa==false) then begin
    EditField(h,v+=vs,60,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
  end;
//    EditField(h,v+=vs,60,"New Dur.",Normal,TestDuration,false,0);
  EditField(h2,v=6 ,80,"Дата начала",Normal,TransDate,false,PasteCurDate);
  EditField(h2,v+=vs,80,"Дата оконч.",Normal,EndDate,false,PasteCurDate);
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,80,"Класс времени",Normal,TimeClass,false,TimeClassSClass);
    EditField(h2,v+=vs,80,"Сумма",Normal,Value,true,0);
  end;
  v = 18;
  ButtonFrame(h3=h2+120,vm=v,120,4,"Тип задач");
  RadioButton(h3,v,kTodoFlagCalendar,0,"Календарь",TodoFlag);
  RadioButton(h3,v+=16,kTodoFlagTodo,0,"План",TodoFlag);
  RadioButton(h3,v+=16,kTodoFlagTimedTodo,0,"План на время",TodoFlag);
  if (StandardHansa==false) then begin
    RadioButton(h3,v+=16,kTodoFlagWorkHours,0,"Рабочие часы",TodoFlag);
  end;
  EndFrame;
//  RadioButton(h3,v+=16,kTodoFlagBanner,0,"Banner",TodoFlag); // When will we do something behind this radio button?
  h3 = h3+160;
  ButtonFrame(h3,v=vm,120,3,"Календарь");
  RadioButton(h3,v,kCalTimeFlagTime,0,"Время",CalTimeFlag);
  RadioButton(h3,v+=16,kCalTimeFlagProfile,0,"Прогноз",CalTimeFlag);
  RadioButton(h3,v+=16,kCalTimeFlagNoshow,0,"Не показывать",CalTimeFlag);
  EnterSkip(PRCode);
  Tile(tilenr,70,false,"2",PRCode); tilenr = tilenr + 1;
  vm = 6;
  v = 6;
  if (HasProjects) then begin
    EditField(h,v,80,"Проект",Normal,PRCode,false,PRSClass);
    v = v+vs;
  end;
  EditField(h,v,80,"Клиент",Normal,CUCode,false,AllCUSClass);
  if (StandardHansa==false) then begin
    EditField(h,v+=vs,80,"Товар сч/ф",Normal,ItemCode,false,INSClass);
  end;
  EnterSkip(Math);
  EditField(h2,v=vm,-40,"Наименование",Normal,CUName,false,0);
  EditField(h2,v+=vs,-40,"Телефон",Normal,Phone,false,0);
  EditField(h2,v+=vs,-40,"Контакт",Normal,Contact,false,ContactSClass);
  EnterSkip(Math);
  Tile(tilenr,100,true,"3",Math); tilenr = tilenr + 1;
  MatrixBegin(4,v=24,-32,-30,ActRowType,199);
  DeleteRowTest;
  InsertRowTest;
  MatCol(1,32,"Код",0,TextCode,false,TextTypeSClass);
  MatColTL(1,84,"Подпись", 0, M4Code, ViewOnly, 20, Signature, false, 0);
  MatCol(1,184,"Текст",0,Text,false,0);

//  MatColMLT(1,84,"Text",0,Text,false,0);
  EndMatrix;
  if (GuiType!=kGuiiPhone and GuiType!=kGuiAndroid) then begin
    HalPushButton(-140,-30,-40,-10,"ActDEndActivity","ActDEndActivity");
  end else begin
    HalPushButton(600,500,700,520,"ActDEndActivity","Завершить");
  end;
  Tile(tilenr,200,true,"4",Comment); tilenr = tilenr + 1;
  v = 10;
  HalPushButton(h,v,h+100,v+20,"ActDClassCreateSubTask","Нов. подзадача");
  HalPushButton(h2,v,h2+100,v+20,"ActDClassDeleteSubTask","Удалить подзадачу");
  v = v + vs;
  RecordList2(10,v+=vs,-30,-39,"ActVc");
  RlColKey(4,4,"Задача",Comment,false,ActComment);
  RlColKey(-50,-50,"Все",Comment,false,Comment);
  Tile(tilenr,140,false,"5",-); tilenr = tilenr + 1;
  h3 = 40;
  ButtonFrame(h3,v=18,130,4,"Тип оповещения");
  RadioButton(h3,v,0,0,"Нет",AlarmType);
  RadioButton(h3,v+=16,1,0,"Сообщение",AlarmType);
  RadioButton(h3,v+=16,2,0,"SMS",AlarmType);
  RadioButton(h3,v+=16,3,0,"E-mail",AlarmType);
  ButtonFrame(h3+=160,v=18,130,7,"Оповещение");
  RadioButton(h3,v,0,0,"Минут до",AlarmWhen);
  RadioButton(h3,v+=16,1,0,"Часов до",AlarmWhen);
  RadioButton(h3,v+=16,2,0,"Дней до",AlarmWhen);
  RadioButton(h3,v+=16,3,0,"Минут после",AlarmWhen);
  RadioButton(h3,v+=16,4,0,"Часов после",AlarmWhen);
  RadioButton(h3,v+=16,5,0,"Дней после",AlarmWhen);
  EditField(h3+75,v+=17,50,"Единиц до",Normal,AlarmUnits,false,0);
  ButtonFrame(h4=h3+160,v=18,130,4,"Символ");
  RadioButton(h4,v,1,0,"Звонок",SymbNr);
  RadioButton(h4,v+=16,2,0,"Встреча",SymbNr);
  RadioButton(h4,v+=16,3,0,"Офис",SymbNr);
  RadioButton(h4,v+=16,0,0,"Другое",SymbNr);
  if (StandardHansa==false) then begin
    Tile(tilenr,30,false,"6",Resources); tilenr = tilenr + 1;
    EditField(h,v=6,300,"Ресурсы",Normal,Resources,false,ResSClass);
    EditField(h+400,v, fs,"Актив",Normal,InventoryNr,false,AT2UnitSClass);
    Tile(tilenr,70,false,"7",SVOSerNr); tilenr = tilenr + 1;
    EditField(h,v=6, fs,"Серийный №",Normal,SerialNr,false,SVOSerSClass);
    EditField(h+200,v,fs,"Товар",Normal,ArtCode,false,INSClass);
    EditField(h+400,v, fs,"Опер. пр-ва",Normal,ProdOpSerNr,false,0);
    EditField(h,v+=vs, fs,"Заказ на обсл.",Normal,SVOSerNr,false,SVOSClass);
    EditField(h+200,v,fs,"Товар сч/ф",Normal,ItemCode,false,INSClass);
    EditField(h+400,v, fs,"Производство",Normal,ProdSerNr,false,0);
    EditField(h,v+=vs, fs,"С наимен. файла",ViewOnly,FromFileName,false,0);
    EditField(h+200,v, fs,"С №",ViewOnly,FromSerNr,false,0);
    EditField(h+400,v, fs,"Соб.инд.туриз.",ViewOnly,RsrtEventSerNr,false,0);
    Tile(tilenr,240,false,"8",-); tilenr = tilenr + 1;
    fs = 80;
    h = 180;
    label = UserDefined("ActVc","UserStr1");
    if (nonblank(label)) then begin
      EditField(h,v=6 ,-20,label,Normal,UserStr1,false,0);
    end;
    label = UserDefined("ActVc","UserStr2");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-20,label,Normal,UserStr2,false,0);
    end;
    label = UserDefined("ActVc","UserStr3");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-20,label,Normal,UserStr3,false,0);
    end;
    label = UserDefined("ActVc","UserStr4");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-20,label,Normal,UserStr4,false,0);
    end;
    label = UserDefined("ActVc","UserStr5");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-20,label,Normal,UserStr5,false,0);
    end;
    label = UserDefined("ActVc","UserVal1");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,50,label,Normal,UserVal1,true,0);
    end;
    label = UserDefined("ActVc","UserVal2");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,50,label,Normal,UserVal2,true,0);
    end;
    label = UserDefined("ActVc","UserVal3");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,50,label,Normal,UserVal3,true,0);
    end;
    label = UserDefined("ActVc","UserDate1");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,80,label,Normal,UserDate1,true,PasteCurDate);
    end;
    label = UserDefined("ActVc","UserDate2");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,80,label,Normal,UserDate2,true,PasteCurDate);
    end;
    label = UserDefined("ActVc","UserDate3");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,80,label,Normal,UserDate3,true,PasteCurDate);
    end;
  end;
  SpecialMenu("Создать e-mail",'m',1,"MailFromActDsm");
  SpecialMenu("Создать письмо",'l',2,"LetFromActDsm");
  SpecialMenu("Создать письмо с комм. предл.",' ',2,"LetWithQuoteFromActDsm");
  SpecialMenu("Создать счет",'G',3,"ORFromActDsm");
  SpecialMenu("Создать коммерческое предложение",' ',4,"QTFromActDsm");
  SpecialMenu("Нов. под-задача",'T',9,"ActDClassCreateSubTask");
  SpecialMenu("Создать следующий этап деятельности",'n',9,"ActDClassCreateNextStep");
  if (StandardHansa==false) then begin
    SpecialMenu("Создать путевой лист",' ',8,"WayListFromActDsm");
  end;
  if (UserCanAction("EnabINF",false)) then begin
    SpecialMenu("Информация о ключе",' ',5,"EnablerInfoDsm");
  end;
  if (UserCanReport("CustPSRn","",true)) then begin
    SpecialMenu("Статус клиента",'e',6,"CUStatusActDsm");
  end;
  if (ClientMode and LicenseMode!=kLicenseModeServer) then begin
  SpecialMenu("Послать приглашение",' ',7,"SendInvitationDsm");
  end;
  SpecialMenu("Открыть запись операции",'t',0,"OpenTRFromAct");
  SpecialMenu("Открыть основную задачу",'o',4,"OpenMainTaskActDsm");
  if (GuiType==kGuiCocoa) then begin
    SpecialMenu("Копировать в iCal",' ',7,"CopyToLocalCalendarDsm");
  end;
  if (GuiType==kGuiiPhone) then begin
    SpecialMenu("Подпись",' ',8,"SignActDsm");
  end;
  EndWindow;


//=============================================== PIVc
  WindowBegin("Товар поставщика",PIDClass,CGview,-);
  SetWRect(20,80,527,380);
//  Sizeable(-1,-1,0,0);
  UseView(PIVc);
  Tile(0,120,false,"",ItemCode);
  v = 10; vs = 20; h = 80; h2 = 230; h3 = 380;
  EditField(h,v, 82,"Товар",Normal,ItemCode,false,INSClass);
  EditField(h2,v,-40,"Наим.",Normal,Comment,false,0);
  EditField(h,v+=vs ,82,"Поставщик",Normal,VECode,false,VESClass);
  EditField(h2,v,-40,"Наим.",Normal,VEName,false,0);
  EditField(h,v+=vs,-40,"Классификация",Normal,ProdClass,false,IClassSClass);
  EditField(h,v+=vs ,82,"Склад",Normal,Location,false,LocationSClass);
  TileButton(1,"Цена");
  TileButton(2,"Параметры");
  TileButton(3,"Текст");
  CheckBox(h2+100,v,0,"По умолчанию",DefaultChoice);
  Tile(1,190,false,"1",PurPrice);
  EditField(h=120,v=6 ,82,"Цена",Normal,PurPrice,true,0);
  EditField(h3,v ,70,"Стоимость покупки",Normal,PurchaseCost,true,0);
  EditField(h,v+=vs,50,"Валюта",Normal,CurncyCode,true,CurncyCodeSClass);
  EditField(h3,v ,70,"Преобразование кол-ва",Normal,PIFactor,true,0);
  EditField(h,v+=vs ,82,"Код товара пост.",Normal,VEItemCode,false,0);
  EditField(h3,v ,70,"Единица измерения",Normal,VEUnit,false,UnitSClass);
/*  EditField(h,v+=vs ,200,"Comment",Normal,Comment,false,0);*/
  EditField(h,v+=vs ,82,"Обычно заказ. к-во",Normal,NormPOQty,true,0);
  EditField(h3,v ,82,"Миним. заказ. кол-во",Normal,MinPOQty,true,0);
  EditField(h,v+=vs ,82,"Производитель",Normal,Manufacturer,false,VESClass);
  EditField(h3,v ,50,"Страна производителя",Normal,OrgCountry,false,CountrySClass);
  if (HasSalesman) then begin
    EditField(h,v+=vs,60,"Продавец",Normal,SalesMan,false,UserSClass);
    if (StandardHansa==false) then begin
      EditField(h3,v,60,"Группа продажи",Normal,SalesGroup,false,SalesGroupSClass);
    end;
  end;
  EditField(h,v+=vs ,50,"Дней на доставку",Normal,PlannedDelDays,false,0);
  if (StandardHansa==false) then begin
    ButtonFrame(h3,v+=vs,123,2,"Опред. тип склада");
    RadioButton(h3,v,kStockTypePurchased,0,"Приобретение",DefStockType);
    RadioButton(h3,v+=16,kStockTypeConsignment,0,"Комиссия",DefStockType);
  end;
    Tile(2,180,false,"2",Packing);
  EditField(h=120,v=6 ,82,"Фасовка",Normal,Packing,true,0);
  EditField(h3-50,v ,70,"Кол.шт в спайке",Normal,Quantity,true,0);
  EditField(h,v+=vs,50,"Масса",Normal,Mass,true,0);
  EditField(h3-50,v ,70,"Длина",Normal,Length,true,0);
  EditField(h,v+=vs ,82,"Ширина",Normal,Width,false,0);
  EditField(h3-50,v ,70,"Высота",Normal,Height,false,0);
  ButtonFrame(h2-80, v += 50, 123, 2, "Стикер");
  RadioButton(h2-50, v, 0, 0, "есть",Sticker);
  RadioButton(h2-50, v += 20, 1, 0, "нет",Sticker);
  Tile(3,100,true,"3",Math);

  MatrixBegin(4,v=24,-32,-20,-,99);
  MatCol(1,24,"Текст",0,Text,false,0);
  EndMatrix;
  EndWindow;


//=============================================== PUVc
  WindowBegin("Поступление товаров на склад",PUDClass,CGview,-);
  if (HasJewelleryInterface) then begin
    SetWRect(20,80,870,620);
  end else begin
    SetWRect(20,80,750,460);
  end;
  Sizeable(-1,-1,0,0);
  UseView(PUVc);
  ActiveFieldOnNew("VECode");
  FormName(PurchaseForm);
  Tile(0,74,false,"",TransDate);
  EditField(75,vm=(v=6),95,"Номер",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Поставщик",Normal,VECode,false,VESClass);
  EnterSkip(TransDate);
  EditField(h=255,v=vm,-40,"Наим-ие",Normal,VEName,false,0);
  CheckBox(h4=-100,v+=20,0,"ОК",OKFlag);
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
  CheckBox(h4,v+=16,0,"Цена вкл. НДС",InclVAT);
  end else begin
    CheckBox(h4,v+=16,0,"Цена вкл. НДС",InclVAT);
  end;
  tilenr = 1;
  TileButton(tilenr,"Условия"); tilenr = tilenr + 1;
  TileButton(tilenr,"Товары"); tilenr = tilenr + 1;
  if (HasMultiCurrency) then begin
    TileButton(tilenr,"Валюта"); tilenr = tilenr + 1;
  end;
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
      TileButton(tilenr,"Доп. издержки"); tilenr = tilenr + 1;
      TileButton(tilenr,"Фрахт"); tilenr = tilenr + 1;
    end;
    TileButton(tilenr,"Коммент."); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"История"); tilenr = tilenr + 1;
  tilenr = 1;

  vs = 20; h1 = 110; h2 = 300; h3 = 550; h4 = -100;
  Tile(tilenr,70,false,tilenr,TransDate); tilenr = tilenr + 1;
  EditField(h1,vm=(v=6),82,"Дата опер.",Normal,TransDate,false,PasteCurDate);
  if (IsEnterprise==false) then begin
    EditField(h2,v,-20,"Коммент.",Normal,Comment,false,0);
  end;
  if (HasMultiLocations) then begin
    v = v + vs;
    EditField(h1,v,82,"Склад",Normal,Location,false,LocationSClass);
  end;

  if (HasRoute) then begin
    v = v + vs;
    EditField(h1,v,82,"Маршрут",ViewOnly,Sorting,false,0);
  end;
  v = v + vs;
  SoftEditField(h1,v,82,"Сканировать штрих код",Normal,"scanbarcode",false,0,M4Str,60);
  EditField(h3,v,130,"Штрих-код",Normal,Barcode,false,0);
  if (HasObjects) then begin
    if (IsEnterprise) then begin
      EditField(h2,v=vm,135,"Объекты",Normal,Objects,false,ObjSClass);
    end else begin
      if (HasMultiLocations) then begin
        EditField(h2,v,135,"Объекты",Normal,Objects,false,ObjSClass);
      end else begin
        v = v + vs;
        EditField(h2,v,135,"Объекты",Normal,Objects,false,ObjSClass);
      end;
    end;
  end;
  if (HasModPO) then begin
    if (HasObjects) then begin
      v = v + vs;
    end;
    EditField(h2,v,135,"№ заказ пост.",ViewOnly,PONr,false,0);
  end;
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
      v = v + vs;
      EditField(h2,v,135,"Контрак пост.",ViewOnly,POCOSerNr,true,POCOSClass);
    end;
    EditField(h3,v=vm,80,"Вид заказа пост.",ViewOnly,PUClass,false,0);
  end;
  if (HasLanguages) then begin
    v = v + vs;
    EditField(h3,v,80,"Язык",Normal,LangCode,false,LangSClass);
  end;
  if (IsEnterprise) then begin
    v = v + vs;
    EditField(h3,v,80,"Номер там. декл.",Normal,CustomsNr,false,0);
  end;
  if (HasLocalization("ARG,MEX,USA")) then begin
    v = v + vs;
    EditField(h3,v,80,"Dispatch Number",Normal,DispatchNumber,false,0);
  end;
//  CheckBox(h4,v=vm,0,"Price Incl. #VAT#",InclVAT);
  EnterSkip(Math);
  Tile(tilenr,220,true,tilenr,Math); tilenr = tilenr + 1;
  v = 24;
  if (HasSerialNumbers) then begin
    MatrixBegin(4,v,-50,-50,-,299);
  end else begin
    MatrixBegin(4,v,-25,-50,-,299);
  end;
  MatTypedRow(stp);
  MatOverStrike(ovst);
  Flip(0);
  MatCol(1,28,"Товар",0,ArtCode,false,INSClass);
//  MatCol(1,84,"Var",0,VARList,true,VARSClass);
//  MatCol(1,144,"Qty",0,Quant,true,0);
  if (HasVarieties) then begin
    MatCol(1,94,"Кол-во",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(1,94,"Кол-во",0,Quant,true,0);
  end;
  EnterSkip(Spec);
  MatText(t=3,28,"Подпись",true);
  MatCol(t,100,"",0,Sign,false,0);
  MatText(t,160,"Дата исправления",true);
  MatCol(t,290,"Дата обн.",0,UpdDate,false,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  if (HasJewelleryInterface) then begin
    MatColTL(1,144,"Ед.",0,M4Code,ViewOnly,5,UnitCode,false,UnitSCLass);
    MatCol(1,184,"Описание",0,Spec,false,0);
    MatCol(1,-485,"Склад",0,Location,false,LocationSClass);
    MatCol(1,-430,"Серийный номер",0,SerialNr,false,SerialNrSClass);
    MatCol(1,-320,"Тип склада",0,StockType,false,SetSClass);
  end else begin
    MatColTL(1,164,"Ед.",0,M4Code,ViewOnly,5,UnitCode,false,UnitSCLass);
    MatCol(1,204,"Наим.",0,Spec,false,0);
  end;
  MatCol(1,-240,"Цена",0,UPrice,true,0);
  MatCol(1,-160,"Себест.",0,CostPrice,true,0);
  MatCol(1,-80,"Сумма",0,Sum,true,0);
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,144,"Наим.",0,Spec,false,0);
    MatCol(1,-350,"Склад",0,Location,false,LocationSClass);
    MatCol(1,-280,"Серийный номер",0,SerialNr,false,SerialNrSClass);
    MatCol(1,-150,"Срок годности",0,BestBefore,false,0);
    MatCol(1,-60,"Ст. партии",0,BatchStatus,false,BatchStatusSClass);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,144,"Наим.",0,Spec,false,0);
    MatColTL(1,-404,"Стоимость товара",0,-1,ViewOnly,-1,InPrice,false,0);
    if (StandardHansa==false) then begin
      MatColTL(1,-324,"Изменение цены",0,-1,ViewOnly,-1,VarianceAmount,false,0);
      MatCol(1,-244,"Цена",0,UPrice,true,0);
      MatCol(1,-174,"Накл. расходы",0,Extra,true,0);
      MatCol(1,-104,"Стоимость",0,CostPrice,true,0);
    end else begin
      MatCol(1,-324,"Фрахт",0,ShipCost,true,0);
      MatCol(1,-244,"Доп. затраты",0,Extra,true,0);
      MatCol(1,-164,"Таможня",0,CustomsCost,true,0);
    end;
    if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
      MatCol(1,-34,"Налог",0,TaxTemplateCode,false,TaxTemplateSClass);
    end else begin
      MatCol(1,-34,"НДС",0,VATCode,false,VATCodeSClass);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,144,"Наим.",0,Spec,false,0);
    MatCol(1,-350,"Товар пост.",0,VEItemCode,false,0);
    MatColTL(1,-270,"Ед. пост.",0,M4Code,ViewOnly,5,VEUnit,false,UnitSCLass);
    MatCol(1,-200,"Кол-во пост.",0,VEQuant,true,0);
    if (StandardHansa==false) then begin
      MatCol(1,-140,"Коэффициент",0,Coefficient,true,0);
    end;
    MatCol(1,-90,"Отпускная цена",0,BasePrice,false,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,144,"Наим.",0,Spec,false,0);
    if (StandardHansa==false) then begin
      MatCol(1,-400,"Тип склада",0,StockType,false,SetSClass);
    end;
    if (HasTREO) then begin
      MatCol(1,-310,"TREO",0,TREO,false,SetSClass);
    end;
    MatCol(1,-220,"Счет склада",0,CostAcc,false,AccSClass);
    MatCol(1,-155,"Счет покупок",0,CredAcc,false,AccSClass);
    MatCol(1,-90,"Объекты",0,Objects,false,ObjSClass);
    if (StandardHansa==false) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      MatCol(1,144,"ГТД.",0,CustomsNr,false,0);
      MatCol(1,-340,"Дата ГТД",0,CustomsDate,false,PasteCurDate);
      MatCol(1,-240,"Страна",0,CountryOfOrg,false,CountrySClass);
      MatCol(1,-140,"С места",0,PosCode,false,PosSClass);
      MatCol(1,-70,"На место",0,ToPosCode,false,FreePosSClass);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,144,"Наим.",0,Spec,false,0);
    MatCol(1,-250,"Сер. номер",0,SerialNr,false,SerialNrSClass);
    MatCol(1,-135,"Ширина",0,UnitXval,true,0);
    MatCol(1,-90,"Высота",0,UnitYval,true,0);
    MatCol(1,-45,"Глубина",0,UnitZval,true,0);
    if (StandardHansa==false) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      MatCol(1,144,"Доб.стоимость",0,Extra,true,0);
    MatCol(1,-420,"Фрахт",0,ShipCost,true,0);
    MatCol(1,-360,"Таможня",0,CustomsCost,true,0);
      label = UserDefined("AccBlock","PUCost1");
      if (blank(label)) then begin label = "Затр. 1";end;
      MatCol(1,-300,label,0,RowCost1,false,0);
      label = UserDefined("AccBlock","PUCost2");
      if (blank(label)) then begin label = "Затр. 2";end;
      MatCol(1,-240,label,0,RowCost2,false,0);
      label = UserDefined("AccBlock","PUCost3");
      if (blank(label)) then begin label = "Затр. 3";end;
      MatCol(1,-180,label,0,RowCost3,false,0);
      label = UserDefined("AccBlock","PUCost4");
      if (blank(label)) then begin label = "Затр. 4";end;
      MatCol(1,-120,label,0,RowCost4,false,0);
      label = UserDefined("AccBlock","PUCost5");
      if (blank(label)) then begin label = "Затр. 5";end;
      MatCol(1,-60,label,0,RowCost5,false,0);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,144,"№ заказа",0,PONr,false,POSClass);
    MatCol(1,194,"Строка заказа",0,OrdRow,false,0);
    MatCol(1,-370,"Свер.зак.",0,PORecon,false,0);
    MatCol(1,-310,"Коммен.",0,POReconComment,false,0);
    MatCol(1,-200,"Свер.сч/ф",0,VIRecon,false,0);
    MatCol(1,-130,"Коммен.",0,VIReconComment,false,0);
  end else begin
    if (HasSerialNumbers) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      MatCol(1,144,"Описание",0,Spec,false,0);
      MatCol(1,-150,"Сер. номер",0,SerialNr,false,SerialNrSClass);
    end;
/*
    MatCol(1,-280,"Цена ед.",0,UPrice,true,0);
    MatCol(1,-210,"Фрахт",0,ShipCost,true,0);
    MatCol(1,-140,"Доп. затраты",0,Extra,true,0);
    MatCol(1,-70,"Стоимость",0,CostPrice,true,0);
*/
  end;
  if (HasLocalization("ARG,MEX,USA")) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=1,144,"Описание",0,Spec,false,0);
    MatCol(t,-250,"Номер отправки",0,DispatchNumber,false,0);
  end;
  if (HasJewelleryInterface) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=1,144,"Описание",0,Spec,false,0);
    MatCol(t,-350,"Пост. сер. номер",0,SuppSerialNr,true,0);
    MatCol(t,-200,"Метал",0,Metal,true,0);
    MatCol(t,-150,"Вес",0,RowWeight,true,0);
    MatCol(t,-100,"Размер",0,Size,true,0);
    MatCol(t,-50,"Длина",0,Length,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=1,144,"Описание",0,Spec,false,0);
    MatCol(t,-350,"Осн. камень",0,MajStoneDet,true,0);
    MatCol(t,-250,"Цвет",0,Colour,true,0);
    MatCol(t,-200,"Прозрачность",0,Clarity,true,0);
    MatCol(t,-150,"Серт.",0,Cert,true,0);
    MatCol(t,-100,"Мин. камень",0,MinStoneDet,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=1,144,"Описание",0,Spec,false,0);
    MatCol(t,-400,"Марка часов",0,WatchBrand,true,0);
    MatCol(t,-300,"Наим. стиля",0,StyleName,true,0);
    MatCol(t,-200,"Метал часов",0,WatchMetal,true,0);
    MatCol(t,-100,"Движение",0,Movement,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(t=1,144,"Описание",0,Spec,false,0);
    MatCol(t,-400,"Брк/Стр",0,BrcStr,true,0);
    MatCol(t,-300,"Род",0,Gender,true,0);
    MatCol(t,-200,"Проч.",0,Other,true,0);
    MatCol(t,-100,"Проч. 2",0,Other2,true,0);
  end;
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 20;
  v = 18;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  EditField(110,-41,70,"Итого кол-во",ViewOnly,SumQuant,true,0);
//  EditField(110,-21,70,"Price Subtotal",Normal,SubTotal,true,0); //Shows the same as SumCostPrice?
  EditField(260,-41,70,"Фрахт",Normal,ShipCost,true,0);
  if (IsEnterprise) then begin
    EditField(260,-21,70,"Таможня",Normal,CustomsCost,true,0);
  end;
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
  EditField(410,-41,70,"НДС",Normal,VATVal,true,0);
  if (HasExtTax) then begin
    EditField(410,-21,70,"Вн. налог",ViewOnly,TAX1Sum,true,0);
    end;
  end else begin
    EditField(410,-41,70,"НДС",Normal,VATVal,true,0);
  end;
  EditField(-169,-41,118,"Подытог",ViewOnly,SumCostPrice,true,0);
  EditField(-169,-21,118,"ИТОГО",ViewOnly,PayVal,true,0);
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
    vs = 20;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
    EditField(h1,v=6,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h1,v+vs,50,"Осноная валюта 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h1,v+vs,50,"Осн. валюта",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h1,v+(vs*2),50,"Осноная валюта 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Курс",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осноная валюта 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Осноная валюта 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осноная валюта",false);
      end;
    end else begin
      EditField(h1,v+=vs,50,"Осноная валюта 1",Normal,BaseRate1,true,0);
      EditField(h1,v+=vs,50,"Осноная валюта 2",Normal,BaseRate2,true,0);
    end;
  end;
  if (IsEnterprise and StandardHansa==false) then begin
    Tile(tilenr,120,false,tilenr,Cost1); tilenr = tilenr + 1;
    vs = 20;
    label = UserDefined("AccBlock","PUCost1");
    if (blank(label)) then begin label = "Накл. расходы 1";end;
    EditField(h=110,v=6,70,label,Normal,Cost1,false,0);
    label = UserDefined("AccBlock","PUCost2");
    if (blank(label)) then begin label = "Накл. расходы 2";end;
    EditField(h2=295,v,70,label,Normal,Cost2,false,0);
    label = UserDefined("AccBlock","PUCost3");
    if (blank(label)) then begin label = "Накл. расходы 3";end;
    EditField(h,v+=vs,70,label,Normal,Cost3,false,0);
    label = UserDefined("AccBlock","PUCost4");
    if (blank(label)) then begin label = "Накл. расходы 4";end;
    EditField(h2,v,70,label,Normal,Cost4,false,0);
    label = UserDefined("AccBlock","PUCost5");
    if (blank(label)) then begin label = "Накл. расходы 5";end;
    EditField(h,v+=vs,70,label,Normal,Cost5,false,0);
    //====
    EditField(110,v+=vs,70,"Таможня",Normal,CustomsCost,true,0);
    EditField(h2, v, 70, "Тамож.объект", Normal, CustomsObj, false, ObjSClass);
    EnterSkip(Cost1);
    EditField(110,v+=vs, 255, "Наименование", ViewOnly, CommentObj, false, 0);
	//====
    ButtonFrame(h3=400,v=16,130,2,"Расчет накл. затрат");
    RadioButton(h3,v,0,0,"Стоимость",ExtraCostsCalculation);
    RadioButton(h3,v+=16,1,0,"Вес",ExtraCostsCalculation);
    ButtonFrame(h3=-163,v=16,123,6,"Статус утверждения");
    RadioButton(h3,v,kAcceptanceStateNotRequired,0,"не обязательно",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"не начато",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"не запрошено",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStatePending,0,"в ожидании",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"утверждено",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"отклонено",AcceptanceStatus);
    Tile(tilenr,130,false,tilenr,FreightCode); tilenr = tilenr + 1;
    EditField(h1,v=6,80,"Трансп. компания",Normal,FreightCode,false,FreightCompanySClass);
    EditField(h1,v+=vs,-20,"Наим.",Normal,FreightCompany,false,0);
    EditField(h1,v+=vs,-20,"ИНН",Normal,FreightCompanyRegNr,false,0);
    EditField(h1,v+=vs,-20,"Инф. о машине",Normal,TruckInfo,false,0);
    EditField(h1,v+=vs,-20,"Водитель",Normal,Driver,false,0);
    EditField(h1,v+=vs,-20,"ТТН",Normal,CMRText,false,0); // International transporting number
    Tile(tilenr,30,false,tilenr,Comment); tilenr = tilenr + 1;
    EditField(h1,v=6,-20,"Коммент.",Normal,Comment,false,0);
  end;
  if (StandardHansa==true) then begin
    Tile(tilenr,30,false,tilenr,Comment); tilenr = tilenr + 1;
    EditField(h1,v=6,-20,"Коммент.",Normal,Comment,false,0);   // From dict
  end;

  //Добавлено 25.11.09 INAU
  Tile(tilenr,30,false,tilenr,LogNewUser); tilenr = tilenr + 1;
  EditField(h=130,v=20,70,"Создал",ViewOnly,LogNewUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogNewDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogNewTime,false,0);
  EditField(h=130,v=40,70,"Сохранил",ViewOnly,LogSaveUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogSaveDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogSaveTime,false,0);
  EditField(h=130,v=60,70,"Закрыл (OK)",ViewOnly,LogOKUser,false,0);
  EditField(h+=80,v,70,"",ViewOnly,LogOKDate,false,0);
  EditField(h+=80,v,50,"",ViewOnly,LogOKTime,false,0);
  //25.11.09


  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Статус поступления",'r',4,"PUStatusDsm");
    SpecialMenu("Генерировать серийные номера",' ',2,"GenSerialNosPUDsm");
    if (HasModNL) then begin
      SpecialMenu("Открыть запись операции",'t',4,"OpenTRFromPU");
    end;
    if (HasModPL) then begin
      SpecialMenu("Создать счет-фактуру поставщика",'F',3,"VIFromPUDsm");
    end;
    if (IsEnterprise or (HasLocalization("PRT") and HasModIN)) then begin
      SpecialMenu("Возврат товара поставщику",'B',7,"RetPUFromPUDsm");
    end;
  end else begin
  if (IsEnterprise) then begin
    SpecialMenu("Поиск товара",'f',1,"ItemSearchDsm");
    SpecialMenu("Статус поступления",'r',4,"PUStatusDsm");
  end;
  if (HasSerialNumbers) then begin
    SpecialMenu("Генерировать серийные номера",' ',2,"GenSerialNosPUDsm");
    if (StandardHansa==false) then begin
      SpecialMenu("Открыть спецификацию партии",' ',5,"OpenBatchPUDsm");
    end;
  end;
  if (HasModNL) then begin
    SpecialMenu("Открыть запись операции",'t',4,"OpenTRFromPU");
  end;
  if (HasTaxMatrix) then begin
    SpecialMenu("Открыть нал. матрицу",' ',25,"OpenVatMatrixPUDsm");
  end;
  SpecialMenu("Распечатать этикетки",'e',0,"PrintPULabPUDsm");
  if (HasApprovals) then begin
    if (StandardHansa==false) then begin
      SpecialMenu("Отправить для утверждения",' ',14,"PUSendforAcceptancePUDsm");
      SpecialMenu("Отменить запрос на утверждение",' ',2,"CancelApprovalRequestDsm");
      SpecialMenu("Разделить строку",' ',7,"SplitRowPUDsm");
    end;
    SpecialMenu("Обновить цены",' ',1,"UpdatePricesPUDsm");

    if (StandardHansa==false) then begin
      SpecialMenu("Принять складские перемещения",' ',9,"OKStockMovPUrDsm");
    end;
  end;
  if (HasModPL) then begin
    SpecialMenu("Создать счет-фактуру поставщика",'F',3,"VIFromPUDsm");
  end;
  if (HasQualityControl) then begin
    SpecialMenu("Контроль качества",'u',10,"QualConFromPUDsm");
//  SpecialMenu("Update Mark",' ',6,"UpdateMarkPUDsm");
  end;
  if (HasAdvancedStock or (HasLocalization("PRT") and HasModIN)) then begin
    SpecialMenu("Возврат товара поставщику",'B',7,"RetPUFromPUDsm");
  end;
  if (HasModRent) then begin
//  SpecialMenu("Create #Stock# Movement",' ',5,"StockMovFromPUSpec");
//  SpecialMenu("Scan",' ',8,"ScanBarCodePUDsm");
    SpecialMenu("Создать складское перемещение",' ',8,"INTransFromPUsm");
  end;
  end;
  SpecialMenu("Создать кредитовую сч-ф",' ',10,"CNInvFromPUrDsm");
  SpecialMenu("Cканировать",'S',11,"ScanItPU");
  SpecialMenu("Создать задачу",'Q',0,"QAFromPUDsm"); //TGOR 04-04-13

  EndWindow;


//=============================================== POVc
  WindowBegin("Заказ поставщику",PODClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(POVc);
  CommunicateButton;
  ActiveFieldOnNew("VECode");
  Tile(0,74,false,"",VECode);
  EditField(75,vm=(v=6),95,"Номер",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Поставщик",Normal,VECode,false,VESClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Наим.",Normal,Addr0,false,0);
  if (IsEnterprise) then begin
    EditField(h,vm=(v+=20),95,"Подписи",Normal,OKPersons,false,UserSClass);
    CheckBox(h4=-100,v,0,"ОК",OKFlag);
  end else begin
    CheckBox(h4=-100,v+=vs,0,"OK",OKFlag);
  end;
  tilenr = 1;
  TileButton(tilenr,"Условия"); tilenr = tilenr + 1;
  TileButton(tilenr,"Товары"); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Валюта"); tilenr = tilenr + 1;
  end;
  if (HasModIN) then begin
    TileButton(tilenr,"Усл. отгрузки"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Комментарий"); tilenr = tilenr + 1;
  TileButton(tilenr,"Адрес зак."); tilenr = tilenr + 1;
  TileButton(tilenr,"Адрес дост."); tilenr = tilenr + 1;
  if (IsEnterprise and StandardHansa==false) then begin
    TileButton(tilenr,"Доп. затр."); tilenr = tilenr + 1;
  end;
  tilenr = 1;
  Tile(tilenr,90,false,tilenr,TransDate); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Дата",Normal,TransDate,false,PasteCurDate);
  EditField(h1,v+=vs,25,"Условия оплаты",Normal,PayDeal,false,PDSClass);
  if (IsEnterprise) then begin
    EditField(h1,v+=vs,82,"Действителен до",Normal,ValidUntil,false,PasteCurDate);
  end;
  if (HasModIN) then begin
    EditField(h1,v+=vs,82,"Заплан.отгрузка",Normal,PlanShip,false,PasteCurDate);
  end;
  EditField(h2,v=vm,135,"Наша ссылка",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Внимание",Normal,VEContact,false,ContactSClass);
  if (HasObjects) then begin
    EditField(h2,v+=vs,135,"Объекты",Normal,Objects,false,ObjSClass);
  end;
  if (HasModIN) then begin
    EditField(h2,v+=vs,135,"Рекомендатель",Normal,Reference,false,0);
  end;
  if (HasSalesman) then begin
    EditField(h3,v=vm,80,"Продавец",Normal,SalesMan,false,UserSClass);
  end;
  if (HasModTS) then begin
    EditField(h3,v+=vs,80,"Проект",Normal,PRCode,false,PRSClass);
  end;
  if (IsEnterprise) then begin
    EditField(h3,v+=vs,80,"Вид заказа пост.",Normal,POClass,false,POrderClassSClass);
    EditField(h3,v+=vs,80,"Тип счета",ViewOnly,OrderType,false,0);
  end;
  CheckBox(h4,v=6,0,"Закрыт",Closed);
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
  CheckBox(h4,v+=16,0,"Цена вкл. НДС",InclVAT);
  end else begin
    CheckBox(h4,v+=16,0,"Цена вкл. НДС",InclVAT);
  end;
  EnterSkip(Math);
  Tile(tilenr,120,true,tilenr,Math); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    EditField(110,-41,70,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
  end;
  if (IsEnterprise and StandardHansa==false) then begin
    EditField(110,-21,70,"Паллеты",ViewOnly,TotPalletNr,true,0);
    EditField(260,-41,70,"Фрахт",Normal,ShipCost,true,0);
    EditField(260,-21,70,"Таможня",Normal,CustomsCost,true,0);
  end;
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
  EditField(410,-41,70,"НДС",ViewOnly,Sum3,true,0);
  if (HasExtTax) then begin
    EditField(410,-21,70,"Внеш. налог",ViewOnly,TAX1Sum,false,0);
    end;
  end else begin
    EditField(410,-41,70,"НДС",ViewOnly,Sum3,true,0);
  end;
  EditField(-169,-41,118,"Подытог",ViewOnly,Sum1,true,0);
  EditField(-169,-21,118,"Итого",ViewOnly,Sum4,true,0);
//  CheckBox(20,-21,0,"OK",OKFlag);
  v = 24;
  if (HasModIN or HasModPL or HasObjects) then begin
    MatrixBegin(3,v,-50,-44,-,199);
  end else begin
    MatrixBegin(3,v,-25,-44,-,199);
  end;
  MatTypedRow(stp);
  Flip(0);
  MatCol(1,28,"Товар",0,ArtCode,false,INSClass);
//  MatCol(1,84,"Var",0,VARList,true,VARSClass);
//  MatCol(1,144,"Qty",0,Quant,true,0);
  if (HasVarieties) then begin
    MatCol(1,94,"Кол-во",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(1,94,"Кол-во",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
//  MatCol(1,194,"Description",0,Spec,false,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  MatColTL(1,164,"Ед.",0,M4Code,ViewOnly,5,UnitCode,false,UnitSCLass);
  MatCol(1,204,"Наименование",0,Spec,false,0);
  if (HasJewelleryInterface) then begin
    MatCol(1,-337,"Тип склада",0,StockType,false,SetSClass);
  end;
  MatCol(1,-237,"Цена",0,Price,true,0);
  MatCol(1,-151,"%",0,vRebate,true,0);
  MatCol(1,-116,"Сумма",0,Sum,true,0);
  if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
    MatCol(1,-30,"Ш.н.",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(1,-30,"НДС",0,VATCode,false,VATCodeSClass);
  end;
  if (HasObjects) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,164,"Наименование",0,Spec,false,0);
    if (IsEnterprise) then begin
      MatCol(1,-310,"Счет опр.",0,CostAcc,false,AccSClass);
    end;
    MatCol(1,-240,"Объекты",0,Objects,false,ObjSClass);
    if (IsEnterprise) then begin
      MatCol(1,-170,"Товар пост.",0,VEArtCode,false,PISClass);
      MatColTL(1,-100,"Ед.пост.",0,M4Code,ViewOnly,5,VEUnit,false,UnitSCLass);//MatCol(1);
      MatCol(1,-50,"Кол. пост.",0,VEQuant,true,0);
    end;
  end;
  if (HasModIN) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,164,"Наименование",0,Spec,false,0);
    MatCol(1,-330,"Пост. 1",0,Shipd1,true,0);
    MatCol(1,-270,"Пост. 2",0,Shipd2,true,0);
    if (HasModPL) then begin
      MatCol(1,-210,"Сч/ф",0,Invd,true,0);
    end;
    if (IsEnterprise and StandardHansa==false) then begin
      MatCol(1,-150,"№ паллеты",0,PalletNr,true,0);
      MatCol(1,-90,"Проект",0,PRCode,true,PRSClass);
      MatCol(1,-40,"№ ТР.",0,WSNr,true,0);
    end;
  end;
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    if (StandardHansa==false) then begin
      MatCol(1,164,"Тип заказа",0,OrderType,false,0);
      MatCol(1,-400,"Тип склада",0,StockType,false,SetSClass);
    end else begin
      MatCol(1,164,"Наименование",0,Spec,false,0);
    end;
    if (HasTREO) then begin
      MatCol(1,-300,"TREO",0,TREO,false,SetSClass);
    end;
    MatCol(1,-200,"Запл. отгрузка",0,PlanShipRow,true,PasteCurDate);
    MatCol(1,-100,"Комментарий",0,Comment,true,0);
    if (StandardHansa==false) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      MatCol(1,164,"Наименование",0,Spec,false,0);
      MatCol(1,-420,"Фрахт",0,ShipCost,true,0);
      MatCol(1,-360,"Таможня",0,CustomsCost,true,0);
      label = UserDefined("AccBlock","PUCost1");
      if (blank(label)) then begin label = "Затраты 1";end;
      MatCol(1,-300,label,0,RowCost1,true,0);
      label = UserDefined("AccBlock","PUCost2");
      if (blank(label)) then begin label = "Затраты 2";end;
      MatCol(1,-240,label,0,RowCost2,true,0);
      label = UserDefined("AccBlock","PUCost3");
      if (blank(label)) then begin label = "Затраты 3";end;
      MatCol(1,-180,label,0,RowCost3,true,0);
      label = UserDefined("AccBlock","PUCost4");
      if (blank(label)) then begin label = "Затраты 4";end;
      MatCol(1,-120,label,0,RowCost4,true,0);
      label = UserDefined("AccBlock","PUCost5");
      if (blank(label)) then begin label = "Затраты 5";end;
      MatCol(1,-60,label,0,RowCost5,true,0);
    end;
  end;
  DeleteRowTest;
  InsertRowTest;
  EndMatrix;
  vs = 20;
  v = 18;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
    vs = 20; h = 110; h2 = 295;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
    EditField(h1,v=6,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h1,v+vs,50,"Осноная валюта 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h1,v+vs,50,"Осноная валюта",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h1,v+(vs*2),50,"Осноная валюта 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Курс",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осноная валюта 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Осноная валюта 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осноная валюта",false);
      end;
    end else begin
      EditField(h1,v+=vs,50,"Осноная валюта 1",Normal,BaseRate1,true,0);
      EditField(h1,v+=vs,50,"Осноная валюта 2",Normal,BaseRate2,true,0);
    end;
  end;
  if (HasModIN) then begin
    Tile(tilenr,90,false,tilenr,ShipDeal); tilenr = tilenr + 1;
    vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
    EditField(h1,v=6,80,"Условия доставки",Normal,ShipDeal,false,ShipDealSClass);
    if (IsEnterprise) then begin
      EditField(h1,v+=vs,80,"Метод доставки",Normal,ShipMode,false,DMSClass);
    end;
    if (HasMultiLocations) then begin
      EditField(h1,v+=vs,80,"Склад",Normal,Location,false,LocationSClass);
    end;
    if (IsEnterprise) then begin
      if (StandardHansa==false) then begin
        EditField(h1,v+=vs,80,"Подразделение",ViewOnly,BranchID,false,AllCUSClass);
//  EditField(h2,v=vm,80,"Total Quantity",ViewOnly,TotQty,true,0);
//  EditField(h2,v+=vs,80,"Total Weight",ViewOnly,TotWeight,true,0);
//  EditField(h2,v+=vs,80,"Total Volume",ViewOnly,TotVolume,true,0);
        EditField(h2,v=vm,80,"Заказ на обсл.",Normal,SVONr,false,0);
        EditField(h2,v+=vs,80,"№ зак. на работу",Normal,WONr,false,0);
        EditField(h2,v+=vs,80,"№ процесса",Normal,POCQStatNr,true,POCQStatSClass);
        EditField(h2,v+=vs,80,"№ контракта",ViewOnly,POCOSerNr,true,0);
      end;
      CheckBox(473,v=vm,0,"Счет перед поступл. товара",InvBeforePU);
      CheckBox(473,v+=vs,0,"Обнулить поступление товара",SetZeroPUQuant);
      EditField(h3,v+=vs,80,"Код транспорта интрастат",Normal,IntrastatTransCode,false,IntrastatTransCodeSClass);
    end;
  end;
  if (IsEnterprise) then begin
    Tile(tilenr,90,false,tilenr,LangCode); tilenr = tilenr + 1;
    EditField(h1,v=6,80,"Дискон. матрица",Normal,RebCode,false,RebSClass);
    if (StandardHansa==false) then begin
      EditField(h1,v+=vs,80,"Факторинг",Normal,VEFactoring,false,VESClass);
    end;
    EditField(h1,v+=vs,80,"№ заказа",Normal,OrdNr,false,0);
    EditField(h1,v+=vs,-20,"Комментарий",Normal,Comment,false,0);
    if (StandardHansa==false) then begin
      EditField(h2,v=vm,80,"Группа продаж",Normal,SalesGroup,false,SalesGroupSClass);
      EditField(h2,v+=vs,80,"Сч/ф на",Normal,InvoiceToCode,false,VESClass);
    end;
    EditField(h2,v+=vs,80,"Ст-сть покупки",Normal,CostPerUnit,true,0);
    if (HasLanguages) then begin
      EditField(h3,v=vm,80,"Язык",Normal,LangCode,false,LangSClass);
    end;
  end else begin
    Tile(tilenr,20,false,tilenr,Comment); tilenr = tilenr + 1;
    if (HasAdvancedPricing) then begin
      EditField(h1,v=6,80,"Дискон. матрица",Normal,RebCode,false,RebSClass);
    end else begin
      EditField(h1,v=6,-20,"Коммент.",Normal,Comment,false,0);
    end;
  end;
  Tile(tilenr,230,false,tilenr,Addr1); tilenr = tilenr + 1;
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Ordering"; end;
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "Адрес"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,vm=(v+=vs), -20,label,Normal,InvAddr4,false,0);
  vm = vm + 40;
  if (HasApprovals) then begin
    ButtonFrame(h3=h+4,v=vm,123,6,"Статус утверждения");
    RadioButton(h3,v,kAcceptanceStateNotRequired,0,"не обязательно",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"не начато",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"не запрошено",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStatePending,0,"в ожидании",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"утверждено",AcceptanceStatus);
    RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"отклонено",AcceptanceStatus);
  end;
  if (HasVATZone) then begin
    v = VATZoneButtonsLabelsRUS(h3=290,v=vm,140,16);
  end;
  if (IsEnterprise) then begin
    EditField(h2=-170,v=vm,150,"Регион",Normal,Region,false,RegionSClass);
//  EditField(h2,v+=vs,150,"ИНН",Normal,VATNr,false,0);
//  EditField(h2,v+=vs,150,"Telephone",Normal,Phone,false,0);
//  EditField(h2,v+=vs,150,"Fax",Normal,Fax,false,0);
  end;
  Tile(tilenr,130,false,tilenr,ShipAddr0); tilenr = tilenr + 1;
  EditField(h,v=6,-20,"Доставка",Normal,ShipAddr0,false,0);
  EditField(h,v+=vs,-20,"Адрес",Normal,ShipAddr1,false,0);
  EditField(h,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,DelAddr4,false,0);
  if (IsEnterprise and StandardHansa==false) then begin
    Tile(tilenr,70,false,tilenr,ShipCost); tilenr = tilenr + 1;
    vs = 20; h2 = 290; h3 = 530;
    label = UserDefined("AccBlock","PUCost1");
    if (blank(label)) then begin label = "Накл. расходы 1";end;
    EditField(h1,v=6,70,label,Normal,Cost1,true,0);
    label = UserDefined("AccBlock","PUCost2");
    if (blank(label)) then begin label = "Накл. расходы 2";end;
    EditField(h2,v,70,label,Normal,Cost2,true,0);
    label = UserDefined("AccBlock","PUCost3");
    if (blank(label)) then begin label = "Накл. расходы 3";end;
    EditField(h1,v+=vs,70,label,Normal,Cost3,true,0);
    label = UserDefined("AccBlock","PUCost4");
    if (blank(label)) then begin label = "Накл. расходы 4";end;
    EditField(h2,v,70,label,Normal,Cost4,true,0);
    label = UserDefined("AccBlock","PUCost5");
    if (blank(label)) then begin label = "Накл. расходы 5";end;
    EditField(h1,v+=vs,70,label,Normal,Cost5,true,0);
    EnterSkip(TransDate);
    ButtonFrame(h3,v=16,130,2,"Расчет накл. затрат");
    RadioButton(h3,v,0,0,"Стоимость",ExtraCostsCalculation);
    RadioButton(h3,v+=16,1,0,"Вес",ExtraCostsCalculation);
  end;
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    if (HasModIN) then begin
      SpecialMenu("Статус товара",'I',2,"ItemStatusPODsm");
    end;
    SpecialMenu("Статус заказа поставщику",'r',5,"POStatRnPODsm");
    if (HasModIN) then begin
      SpecialMenu("Создать поступление",'L',0,"PUFromPODsm");
    end;
    if (HasModPL) then begin
      SpecialMenu("Создать реализацию",'F',1,"VIFromPODsm");
    end;
    if (IsEnterprise) then begin
      SpecialMenu("Создать возврат товаров",'B',6,"RetPUFromPODsm");
    end;
/*
  if (HaseMail) then begin
    SpecialMenu("Создать e-mail",'m',3,"CreateMailFromPODsm");
  end;
*/
  end else begin
  if (HasModIN) then begin
    SpecialMenu("Создать поступление",'L',0,"PUFromPODsm");
  end;
  if (IsEnterprise and StandardHansa==false) then begin
    SpecialMenu("Создать уведомл. об отгр.",'l',0,"DropSHFromPODsm");
  end;
  if (HasModPL) then begin
    SpecialMenu("Создать реализацию",'F',1,"VIFromPODsm");
  end;
  if (HasApprovals) then begin
    SpecialMenu("Отправить для подтверждения",' ',6,"POSendforAcceptancePODsm");
    SpecialMenu("Отменить запрос на утверждение",' ',2,"CancelApprovalRequestDsm");
  end;
  if (HasModIN) then begin
    SpecialMenu("Статус товара",'I',2,"ItemStatusPODsm");
  end;
  SpecialMenu("Поиск товара",'f',1,"ItemSearchDsm");
  if (HaseMail) then begin
    SpecialMenu("Создать e-mail",'m',3,"CreateMailFromPODsm");
  end;
  if (IsEnterprise) then begin
    SpecialMenu("Цены предыдущей покупки",' ',4,"POLastPPrsm");
  end;
  SpecialMenu("Статус заказа поставщику",'r',5,"POStatRnPODsm");
  if (IsEnterprise) then begin
    SpecialMenu("Создать возврат товаров",'B',6,"RetPUFromPODsm");
    SpecialMenu("Резервирования",' ',6,"POReservPODsm");
  end;
  if (HasTaxMatrix) then begin
    SpecialMenu("Открыть нал. матрицу",' ',25,"OpenVatMatrixPODsm");
  end;
  end;
  SpecialMenu("Экспорт в Excel",' ',7,"POToExcelDsm");
  EndWindow;


//=============================================== TRVc
  WindowBegin("Запись операции",TRDClass,CGview,-);
  if (HasExtraNLComment) then begin
    SetWRect(20,80,900,400);
  end else begin
    SetWRect(20,80,640,400);
  end;
  UseView(TRVc);
  Sizeable(-1,-1,0,0);
  FormName(PrintTRD);
  ActiveFieldOnNew("TransDate");
  vs=20;
  if (HasNumberSeries) then begin
    EditField(80,v=6,80, "Номер",Normal,Number,false,TSerSClass);
  end else begin
    EditField(80,v=6,80,"Номер",Normal,Number,false,0);
  end;
  EditField(240,v,82,"Дата",Normal,TransDate,false,PasteCurDate);
  EnterSkip(Comment);
  if (HasAdvancedAccounting) or (HasLocalization("POL")) then begin
    EditField(396,v,100,"Ссылка",Normal,RefStr,false,0);
//  EditField(570,v,80,"Doc No.",Normal,SeqNr,false,0);
  end;
  EditField(80,v+=vs,-40,"Комм.",Normal,Comment,false,0);
//  CheckBox(450,v,0,"E_xported",Expf);
  EnterSkip(Math);
  if (HasBase2) then begin
    EditField(120,-41,88,"Разница баз.1",ViewOnly,DiffVal,true,0);
  end else begin
    EditField(120,-41,88,"Разница",ViewOnly,DiffVal,true,0);
  end;
  if (HasBase2 or HasMultiCurrency) then begin
    EditField(-250,-41,88,"Итого",ViewOnly,DSum,true,0);
    EditField(-157,-41,88,"",ViewOnly,CSum,true,0);
    if (HasBase2) then begin
      EditField(120, -21,88,"Разница баз.2",ViewOnly,Diff2Val,true,0);
      EditField(-250,-21,88,"Всего",ViewOnly,DSum2,true,0);
      EditField(-157,-21,88,"",ViewOnly,CSum2,true,0);
    end;
  end else begin
    EditField(-250,-41,88,"Итого",ViewOnly,DSum,true,0);
    EditField(-157,-41,88,"",ViewOnly,CSum,true,0);
    if (HasBase2) then begin
      EditField(120, -21,88,"Разница баз.2",ViewOnly,Diff2Val,true,0);
      EditField(-250,-21,88,"Всего",ViewOnly,DSum2,true,0);
      EditField(-157,-21,88,"",ViewOnly,CSum2,true,0);
    end;
  end;
  h=4; v=v+(vs+17);
  if (HasMultiCurrency or HasBase2 or HasMultiCurrency) then begin
    MatrixBegin(5,vm=v,-50,-46,-,500);
  end else begin
    MatrixBegin(5,vm=v,-25,-46,-,500);
  end;
  MatTypedRow(stp);
  MatOverStrike(ovst);
  Flip(0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,32,"Счет",0,AccNumber,false,AccSClass);
  if (HasObjects) then begin
    MatCol(1,98,"Объекты",0,Objects,false,ObjSClass);
//  MatCol(1,-400,"Short.",0,ACShort,false,ACShortSClass); // what the hell is this? Karl
    if (HasExtraNLComment) then begin
      MatCol(1,-550,"Комментарий",0,Comment,false,0); // -349
      MatCol(1,-380,"Дополнительный комментарий",0,ExtraComment,false,0); // -349
    end else begin
      MatCol(1,-400,"Комментарий",0,Comment,false,0); // -349
    end;
  end else begin
//  MatCol(1,-400,"Short.",0,ACShort,false,ACShortSClass); // what the hell is this? Karl
    if (HasExtraNLComment) then begin
      MatCol(1,-550,"Описание",0,Comment,false,0); // -349
      MatCol(1,-380,"Доп. описание",0,ExtraComment,false,0); // -349
    end else begin
      MatCol(1,-550,"Описание",0,Comment,false,0); // -349
    end;
  end;
  if (HasMultiCurrency) then begin
    if (GuiType==kGuiiPhone) then begin
      MatCol(1,-290,"Дт осн. 1",0,DebVal,true,0);
      MatCol(1,-230,"Кт осн. 2",0,CredVal,true,0);
    end else begin
      MatCol(1,-210,"Дт осн. 1",0,DebVal,true,0);
      MatCol(1,-120,"Кт осн. 2",0,CredVal,true,0);
    end;
  end else begin
    if (GuiType==kGuiiPhone) then begin
      MatCol(1,-290,"Дебет",0,DebVal,true,0);
      MatCol(1,-230,"Кредит",0,CredVal,true,0);
    end else begin
      MatCol(1,-210,"Дебет",0,DebVal,true,0);
      MatCol(1,-120,"Кредит",0,CredVal,true,0);
    end;
  end;
  MatCol(1,-30,"НДС",0,VATCode,false,VATCodeSClass);
  MatText(2,32,"Подпись",true);
  MatColTL(2,108,"",0,M4Code,ViewOnly,0,Sign,false,0);
  MatText(2,160,"Дата старой записи",true);
  MatColTL(2,290,"",0,-1,ViewOnly,-1,OldTransDate,false,0);
  MatText(3,32,"Исправлено записью",true);
  MatColTL(3,215,"",0,M4AppCode,ViewOnly,0,CorrNr,false,0);
  MatText(3,315,"Дата исправления",true);
  MatCol(3,385,"",0,CorrDate,false,0);
  MatText(4,32,"Исправление записи",true);
  MatColTL(4,215,"",0,M4AppCode,Normal,0,CorrNr,false,0);
  if (HasBase2) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,32,"Счет",0,AccNumber,false,AccSClass);
    if (HasObjects) then begin
      MatCol(1,98,"Объекты",0,Objects,false,ObjSClass);
    end else begin
      MatCol(1,-550,"Описание",0,Comment,false,0);
    end;
    MatCol(1,-400,"Дт осн.1",0,DebVal,true,0);
    MatCol(1,-300,"Кт осн.1",0,CredVal,true,0);
    MatCol(1,-200,"Дт осн.2",0,DebVal2,true,0);
    MatCol(1,-100,"Кт осн.2",0,CredVal2,true,0);
    MatText(2,32,"Подпись",true);
    MatCol(2,108,"",0,Sign,false,0);
    MatText(2,160,"Дата старой записи",true);
    MatColTL(2,290,"",0,-1,ViewOnly,-1,OldTransDate,false,0);
    MatText(3,32,"Исправлено записью",true);
    MatColTL(3,215,"",0,M4AppCode,ViewOnly,0,CorrNr,false,0);
    MatText(3,315,"Дата исправления",true);
    MatCol(3,385,"",0,CorrDate,false,0);
    MatText(4,32,"Исправление записи",true);
    MatColTL(4,215,"",0,M4AppCode,Normal,0,CorrNr,false,0);
  end;
  if (HasMultiCurrency) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,32,"Счет",0,AccNumber,false,AccSClass);
    if (HasObjects) then begin
      MatCol(1,98,"Объекты",0,Objects,false,ObjSClass);
    end else begin
      MatCol(1,-550,"Описание",0,Comment,false,0);
    end;
    if (HasBase2) then begin
      MatCol(1,-410,"Осн.1 Дт",0,DebVal,true,0);
      MatCol(1,-330,"Осн.1 Кт",0,CredVal,true,0);
    end else begin
      MatCol(1,-410,"Дебет",0,DebVal,true,0);
      MatCol(1,-330,"Кредит",0,CredVal,true,0);
    end;
    MatCol(1,-250,"Валюта",0,Curncy,false,CurncyCodeSClass);
    MatCol(1,-200,"Дт в валюте",0,CurDebVal,true,0);
    MatCol(1,-100,"Кт в валюте",0,CurCredVal,true,0);
    MatText(2,32,"Подпись",true);
    MatCol(2,108,"",0,Sign,false,0);
    MatText(2,160,"Дата старой записи",true);
    MatColTL(2,290,"",0,-1,ViewOnly,-1,OldTransDate,false,0);
    MatText(3,32,"Исправлено записью",true);
    MatColTL(3,215,"",0,M4AppCode,ViewOnly,0,CorrNr,false,0);
    MatText(3,315,"Дата исправления",true);
    MatCol(3,385,"",0,CorrDate,false,0);
    MatText(4,32,"Исправление записи",true);
    MatColTL(4,215,"",0,M4AppCode,Normal,0,CorrNr,false,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,32,"Счет",0,AccNumber,false,AccSClass);
    if (HasObjects) then begin
      MatCol(1,98,"Объекты",0,Objects,false,ObjSClass);
    end else begin
      MatCol(1,-550,"Описание",0,Comment,false,0);
    end;
    if (HasBase2) then begin
      MatCol(1,-400,"Валюта",0,Curncy,false,CurncyCodeSClass);
      MatCol(1,-350,"Курс осн.1",0,BaseRate1,true,0);
      MatCol(1,-280,"Курс осн.2",0,BaseRate2,true,0);
    end else begin
      MatCol(1,-300,"Валюта",0,Curncy,false,CurncyCodeSClass);
    end;
    MatCol(1,-210,"За...ед.",0,FrRate,true,0);
    MatCol(1,-140,"по кур.1",0,ToRateB1,true,0);
    if (HasBase2) then begin
      MatCol(1,-70,"по кур.2",0,ToRateB2,true,0);
    end;
    MatText(2,32,"Подпись",true);
    MatCol(2,108,"",0,Sign,false,0);
    MatText(2,160,"Дата старой записи",true);
    MatColTL(2,290,"",0,-1,ViewOnly,-1,OldTransDate,false,0);
    MatText(3,32,"Исправлено записью",true);
    MatColTL(3,215,"",0,M4AppCode,ViewOnly,0,CorrNr,false,0);
    MatText(3,315,"Дата исправления",true);
    MatCol(3,385,"",0,CorrDate,false,0);
    MatText(4,32,"Исправление записи",true);
    MatColTL(4,215,"",0,M4AppCode,Normal,0,CorrNr,false,0);
  end;
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,32,"T",0,Typ,false,SetSClass);
    MatCol(1,52,"Номер",0,SerNr,false,ARSClass);
    MatCol(1,112,"Срок опл.",0,DueDate,false,PasteCurDate);
    MatCol(1,184,"Наимен.",0,CompCode,false,CUSClass);
    if (HasExtraNLComment) then begin
      MatCol(1,-550,"Комментарий",0,Comment,false,0);
      MatCol(1,-410,"Дополнительный комментарий",0,ExtraComment,false,0);
    end else begin
      MatCol(1,-400,"Коммент.",0,Comment,false,0);
    end;
    MatCol(1,-290,"Счет",0,AccNumber,false,AccSClass);
    MatCol(1,-210,"Дебет",0,DebVal,true,0);
    MatCol(1,-120,"Кредит",0,CredVal,true,0);
    MatCol(1,-30,"НДС",0,VATCode,false,VATCodeSClass);
    MatText(2,32,"Подпись",true);
    MatCol(2,108,"",0,Sign,false,0);
    MatText(2,160,"Дата старой записи",true);
    MatColTL(2,290,"",0,-1,ViewOnly,-1,OldTransDate,false,0);
    MatText(3,32,"Исправлено записью",true);
    MatColTL(3,215,"",0,M4AppCode,ViewOnly,0,CorrNr,false,0);
    MatText(3,315,"Дата исправления",true);
    MatCol(3,385,"",0,CorrDate,false,0);
    MatText(4,32,"Исправление записи",true);
    MatColTL(4,215,"",0,M4AppCode,Normal,0,CorrNr,false,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,32,"Счет",0,AccNumber,false,AccSClass);
    if (HasObjects) then begin
      MatCol(1,98,"Объект",0,Objects,false,ObjSClass);
    end;
    if (HasExtraNLComment) then begin
      MatCol(1,-590,"Комментарий",0,Comment,false,0);
      MatCol(1,-450,"Additional Description",0,ExtraComment,false,0);
    end else begin
      MatCol(1,-420," Коммент.",0,Comment,false,0);
    end;
    MatCol(1,-330,"Номинал",0,NomVal,true,0);
    MatCol(1,-230,"Дебет",0,DebVal,true,0);
    MatCol(1,-130,"Кредит",0,CredVal,true,0);
    MatCol(1,-30,"Корр.",0,CorspSer,false,0);
    MatText(2,32,"Подпись",true);
    MatCol(2,108,"",0,Sign,false,0);
    MatText(2,160,"Дата старой записи",true);
    MatColTL(2,290,"",0,-1,ViewOnly,-1,OldTransDate,false,0);
    MatText(3,32,"Исправлено записью",true);
    MatColTL(3,215,"",0,M4AppCode,ViewOnly,0,CorrNr,false,0);
    MatText(3,315,"Дата рег-ции",true);
    MatCol(3,385,"",0,CorrDate,false,0);
    MatText(4,32,"Исправление на запись",true);
    MatColTL(4,215,"",0,M4AppCode,Normal,0,CorrNr,false,0);
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,32,"Счет",0,AccNumber,false,AccSClass);
    if (HasObjects) then begin
      MatCol(1,98,"Объекты",0,Objects,false,ObjSClass);
    end;
    if (HasExtraNLComment) then begin
      MatCol(1,-550,"Комментарий",0,Comment,false,0);
      MatCol(1,-380,"Дополнительный комментарий",0,ExtraComment,false,0);
    end else begin
      MatCol(1,-420,"Комментарий",0,Comment,false,0);
    end;
    if (StandardHansa==false) then begin
      MatCol(1,-260,"Налог. счет",0,TAccNumber,false,TAccSClass);
      MatCol(1,-180,"Количество",0,Qty,true,0);
      MatCol(1,-100,"SAFT тип",0,SAFTType,false,SetSClass);
    end;
    MatText(2,32,"Подпись",true);
    MatCol(2,108,"",0,Sign,false,0);
    MatText(2,160,"Дата старой записи",true);
    MatColTL(2,290,"",0,-1,ViewOnly,-1,OldTransDate,false,0);
    MatText(3,32,"Исправлено записью",true);
    MatColTL(3,215,"",0,M4AppCode,ViewOnly,0,CorrNr,false,0);
    MatText(3,315,"Дата рег-ции",true);
    MatCol(3,385,"",0,CorrDate,false,0);
    MatText(4,32,"Исправление на запись",true);
    MatColTL(4,215,"",0,M4AppCode,Normal,0,CorrNr,false,0);
  end;
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 20;
  v = vm + 1;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Сбалансировать",'B',0,"BalanceTRDsm");
    SpecialMenu("Поменять дебет и кредит",' ',1,"SwapDCTRDsm");
    SpecialMenu("Отметка об исправлении",' ',3,"CorrectionMarkTRDsm");
    SpecialMenu("Открыть запись подсистемы",'t',6,"OpenSubsystemTRDsm");
    if (HasMultiCurrency) then begin
      SpecialMenu("Обновить курсы валют",' ',7,"UpdCurRateTRDsm");
    end;
  end else begin
  SpecialMenu("Сбалансировать",'B',0,"BalanceTRDsm");
  SpecialMenu("Поменять дебет и кредит",' ',1,"SwapDCTRDsm");
  if (GuiType!=kGuiMetro or HasMetroTestFeatures) then begin//UGLY and tmp
    SpecialMenu("Отметка об изменении",' ',2,"UpdateMarkTRDsm");
  end;
  SpecialMenu("Отметка об исправлении",' ',3,"CorrectionMarkTRDsm");
  SpecialMenu("Рассчитать поле",'F',4,"CalcFieldTRDsm");
  SpecialMenu("Поменять знак",' ',5,"ChangeSignTRDsm");
  SpecialMenu("Открыть запись подсистемы",'t',6,"OpenSubsystemTRDsm");
  if (HasMultiCurrency) then begin
    SpecialMenu("Обновить курсы валют",' ',7,"UpdCurRateTRDsm");
  end;
  end;

  SpecialMenu("Создать расчет по з.п за первую половину месяца",' ',8,"FirstTRDsm");
  SpecialMenu("Создать начисление по з.п ",' ',9,"SecondTRDsm");
  SpecialMenu("Создать расчет по з.п на конец месяца ",' ',9,"ThirdTRDsm");

  EndWindow;

  WindowBegin("Определите список поставщиков",VERClass,CGRcW,RcType);
    SetWRect(20,80,400,250);
    EditFieldTL(140,v=10, 150,"Поставщик",   M4UStr,Normal,30,f1,false,VESClass);
    EditFieldTL(140,v+=20, 80,"Категория",   M4UStr,Normal,5,f2,false,VGSClass);
    EditFieldTL(140,v+=20 ,150,"Классификация",M4UStr,Normal,60,f4,false,SupClSClass);
   // EditFieldTL(140,v+=20 ,70,"Вид классификации",M4UStr,Normal,30,f5,false,CTypeSClass);
    h=50; h2 = 200; l = 123;
    ButtonFrame(h,vm=(v+=45),l,2,"Функция");
    RadioButton(h,v,0,0,"Подробный",flags[0]);
    RadioButton(h,v+=16,1,0,"Конт. данные",flags[0]);
    ButtonFrame(h2,v=vm,l,2,"Сортировать по");
    RadioButton(h2,v,0,0,"не сортировать",flags[1]);
    RadioButton(h2,v+=16,1,0,"наименованию",flags[1]);
    EndWindow;



WindowBegin("Определите ведомость расчетов с поставщиками",VePer2RClass,CGRcW,RcType);
  SetWRect(20,80,480,300);
  PeriodField(h=150,v=10,"Период");
  EditFieldTL(h=150,v+=20, 150,"Поставщик",   M4UStr,Normal,30,f1,false,VESClass);
  EditFieldTL(h,v+=20, 80,"Категория",   M4UStr,Normal,5,f2,false,VGSClass);
  EditFieldTL(h,v+=20 ,150,"Классификация",M4UStr,Normal,60,f4,false,SupClSClass);
  EditFieldTL(h,v+=20 ,70,"Вид классификации",M4UStr,Normal,30,f5,false,CTypeSClass);
  EditFieldTL(h,v+=20 ,70,"Счет кредиторов",M4UStr,Normal,10,FirstAcc,false,AccSClass);
  StaticText(h+80,v+13,"Игнор. в начальном сальдо и в сводном",false);
  ButtonFrame(h=30,vm=(v+=41),123,2,"Функция");
  RadioButton(h,v,0,0,"Сводный",ArtMode);
  RadioButton(h,v+=16,1,0,"Подробный",ArtMode);
  CheckBox(h,v+=30,0,"Только поставщики с остатком",flags[1]);
  CheckBox(h,v+=16,0,"Суммы в валюте",flags[2]);
  CheckBox(h,v+=16,0,"Включить заказанные платежи",flags[3]);
  CheckBox(h,v+=16,0,"Отрицательные суммы для кредитовых сч/ф",flags[7]);
  CheckBox(h,v+=16,0,"Показать записи счетов-фактур",flags[9]);
  EndWindow;


WindowBegin("Определите отчет о кредиторской задолженности",APRClass,CGRcW,RcType);
  if (IsEnterprise) then begin
    SetWRect(20,80,527,360);
    Tile(0,25,false,"",f1);
    EditFieldTL(h=150,v=10, 150,"Поставщик",   M4UStr,Normal,30,f1,false,VESClass);
    TileButtons(v,2);
    Tile(1,340,false,"1",f4);
    v = 6;
    EditFieldTL(h,v, 50, "Категория",   M4UStr,Normal,5,f3,false,VGSClass);
    EditFieldTL(h,v+=20,250,"Классификация",M4UStr,Normal,60,f4,false,SupClSClass);
    vm=(v+=20);
    //  EditFieldTL(h,vm=(v+=20) ,70,"Типы классификаций",M4UStr,Normal,30,f5,false,CTypeSClass);
    EditFieldTL(h,v+=20 ,70,"Продавец",M4UStr,Normal,10,AccStr,false,UserSClass);
      if (StandardHansa==false) then begin
        EditFieldTL(h,v+=20 ,50,"Гр. продажи",M4UStr,Normal,10,f2,false,SalesGroupSClass);
      end;
    if (HasObjects) then begin
      EditFieldTL(h,v+=20 ,150,"Объекты",M4UStr,Normal,60,ObjStr,false,ObjSClass);
    end;
    if (HasMultiCurrency or HasBase2) then begin
      EditFieldTL(h,v+=20, 50, "Валюта",M4UStr,Normal,5,CurncyCode,false,CurncyCodeSClass);
    end;
    EditFieldTL(h,v+=20, 70, "Дата",   M4Date,Normal,0,d1,false,PasteCurDate);
    if (IsEnterprise) then begin
      EditFieldTL(h,v3=(v+=20), 50, "Счет кредиторов",   M4UStr,Normal,10,FirstAcc,false,AccSClass);
    end;
    ButtonFrame(h=340,v=vm+20,123,7,"Функция");
    RadioButton(h,v,0,0,"Подробный",ArtMode);
    RadioButton(h,v+=16,1,0,"Сводный",ArtMode);
    if (IsEnterprise) then begin
      RadioButton(h,v+=16,2,0,"Просроченные",ArtMode);
      RadioButton(h,v+=16,5,0,"Подробн. просроченные",ArtMode);
    end;
    RadioButton(h,v+=16,3,0,"Остаток",ArtMode);
    if (IsEnterprise) then begin
      RadioButton(h,v+=16,4,0,"Курсовая разница",ArtMode);
      RadioButton(h,v+=16,6,0,"Курс.разница детал.",ArtMode);
    end;
    EndFrame;
    if (HasMultiCurrency or HasBase2) then begin
      if (StandardHansa==false) then begin
        ButtonFrame(h=20,v=(vm=(v3+=42)),123,2,"Суммы");
      end else begin
        ButtonFrame(h=20,v=(vm=(v3+=62)),123,2,"Суммы");
      end;
      if (HasBase2) then begin
        RadioButton(h,v,0,0,"в осн. валюте",flags[2]);
      end else begin
        RadioButton(h,v,0,0,"Осн. валюта 1",flags[2]);
      end;
      RadioButton(h,v+=16,1,0,"в др. валюте",flags[2]);
    end;
    if (IsEnterprise) then begin
      ButtonFrame(h,v+=40,123,2,"Сортировать по");
      RadioButton(h,v,0,0,"коду поставщика",flags[1]);
      RadioButton(h,v+=16,1,0,"нименованию пост.",flags[1]);
      ButtonFrame(h+=148,v=vm,140,4,"Предоплата");
      RadioButton(h,v,0,0,"Включая предоплаты",flags[21]);
      RadioButton(h,v+=16,1,0,"Только предоплаты",flags[21]);
      RadioButton(h,v+=16,2,0,"Не включая предоплаты",flags[21]);
      CheckBox(h,v+=18,0,"Показать номера предоплат",flags[13]);
    end;
    ButtonFrame(h+=168,v=vm,123,2,"Статус");
    RadioButton(h,v,0,0,"Неоплаченные",flags[0]);
    RadioButton(h,v+=16,2,0,"Просроченные",flags[0]);
    if (IsEnterprise) then begin
      ButtonFrame(h,v+=40,123,2,"Включить");
      RadioButton(h,v,0,0,"дату сч/ф",flags[5]);
      RadioButton(h,v+=16,1,0,"дату скидки",flags[5]);
    end;
    Tile(2,280,false,"2",Language);
    v = 6; h=150;
    EditFieldTL(h,v, 82, "Дни оплаты",M4Str,Normal,10,f6,false,0);
    EditFieldTL(h,v+=20, 82, "Язык",M4UStr,Normal,5,Language,false,LangSClass);
    if (IsEnterprise) then begin
      CheckBox(h,v+=24,0,"Включать предварительные платежи",flags[3]);
      CheckBox(h,v+=16,0,"Пропускать заказанные платежи (только с опред.датой)",flags[14]);
    end;
    if (HasBase2) then begin
      CheckBox(h,v+=16,0,"Показать итого в осн.вал. 2",flags[12]);
    end;
    if (IsEnterprise) then begin
      CheckBox(h,v+=16,0,"Показать счета кредиторов",flags[18]);
      if (StandardHansa==false) then begin
        CheckBox(h,v+=16,0,"Показать взносы",flags[19]);
      end;
      CheckBox(h,v+=16,0,"Пропускать отложенные",flags[23]);
      CheckBox(h,v+=16,0,"Включить записи сч/ф в отчет, датируемый задним числом",flags[24]);
      ButtonFrame(h,v+=40,123,3,"Срок оплаты сч/ф в зависимости от ");
      RadioButton(h,v,0,0,"даты оплаты",flags[22]);
      RadioButton(h,v+=16,1,0,"даты сч/ф",flags[22]);
      RadioButton(h,v+=16,2,0,"даты записи",flags[22]);
    end;
    /*
    ButtonFrame(h,v +=40,123,2,"Функция");
    RadioButton(h,v,0,0,"Не вкл. предоплату",flags[4]);
    RadioButton(h,v+=16,1,0,"Вкл. предоплату",flags[4]);
    */
  end else begin
    SetWRect(20,80,400,300);
    vs = 20;
    EditFieldTL(h=120,v=6,150,"Поставщик",   M4UStr,Normal,30,f1,false,VESClass);
    EditFieldTL(h,v+=20, 50,"Категория",   M4UStr,Normal,5,f3,false,VGSClass);
    if (HasObjects) then begin
      EditFieldTL(h,v+=20 ,150,"Объекты",M4UStr,Normal,60,ObjStr,false,ObjSClass);
    end;
    if (HasMultiCurrency or HasBase2) then begin
      EditFieldTL(h,v+=20, 50, "Валюта",M4UStr,Normal,5,CurncyCode,false,CurncyCodeSClass);
    end;
    if (HasContactClassification) then begin
      EditFieldTL(h,v+=vs,250,"Классификация",M4UStr,Normal,60,f4,false,SupClSClass);
    end;
    EditFieldTL(h,v+=vs, 82,"Дата",   M4Date,Normal,0,d1,false,PasteCurDate);
    EditFieldTL(h,v+=vs,30,"Язык",M4UStr,Normal,5,Language,false,LangSClass);
    ButtonFrame(h = 30,vm=(v+=40),123,3,"Функция");
    RadioButton(h,v,0,0,"Подробный",ArtMode);
    RadioButton(h,v+=16,1,0,"Сводный",ArtMode);
    RadioButton(h,v+=16,3,0,"Остаток",ArtMode);
    if (HasMultiCurrency or HasBase2) then begin
      ButtonFrame(h,v+=40,123,2,"Суммы");
      if (HasBase2) then begin
        RadioButton(h,v,0,0,"Осн. валюта",flags[2]);
      end else begin
        RadioButton(h,v,0,0,"Осн. валюта 1",flags[2]);
      end;
      RadioButton(h,v+=16,1,0,"Валюта",flags[2]);
      if (HasBase2) then begin
        CheckBox(h,v+=32,0,"Показать итого в осн.вал. 2",flags[12]);
      end;
    end;
    ButtonFrame(h+=148,v = vm,170,2,"Статус");
    RadioButton(h,v,0,0,"Неоплаченные",flags[0]);
    RadioButton(h,v+=16,2,0,"Просроченные",flags[0]);
    ButtonFrame(h,v+=56,170,2,"Сортировать по");
    RadioButton(h,v,0,0,"коду поставщика",flags[1]);
    RadioButton(h,v+=16,1,0,"нименованию пост.",flags[1]);
  end;
  EndWindow;


//===============================================
  WindowBegin("Определите историю товаров",INrsRClass,CGRcW,RcType);
  SetWRect(20,80,550,460);
  v = 6; vs = 20; h = 160; h2 = 30; h3 = 180; h4 = 340;
  PeriodField(h,v,"Период");
  EditFieldTL(h,v+=vs,150,"Товар",M4UStr,Normal,50,f1,false,INSClass);
  EditFieldTL(h,v+=vs,150,"Группа",M4UStr,Normal,5,f3,false,ITSClass);
  EditFieldTL(h,v+=vs,150,"Классификация", M4UStr,Normal,60,f4,false,DISClass);
  EditFieldTL(h,v+=vs,150,"Тип классификации",M4UStr,Normal,60,f5,false,CTypeSClass);
  EditFieldTL(h,v+=vs,150,"Склад",M4Code,Normal,21,f6,false,LocationSClass);
  EditFieldTL(h,v+=vs,150,"Группа складов",M4Code,Normal,10,f7,false,LocGrSClass);
  EditFieldTL(h,v+=vs,150,"Классификация склада",M4List,Normal,200,f8,false,LocClSClass);
  EditFieldTL(h,v+=vs,150,"Отдел",M4UStr,Normal,10,AccStr,false,DepSClass);
  EditFieldTL(h,v+=vs,150,"Основной поставщик",M4UStr,Normal,10,f2,false,VESClass);
  CheckBox(h2,v+=26,0,"Только складируемые товары",flags[11]);
  CheckBox(h2,v+=16,0,"Показать остаток для товаров без истории",flags[13]);
  CheckBox(h2,v+=16,0,"Включать будущие записи",flags[14]);
  CheckBox(h2,v+=16,0,"По каждому складу",flags[15]);
  CheckBox(h2,v+=16,0,"Включ. детали сер. ном.",AccSpec);
  ButtonFrame(h2,vm=(v+=38),130,2,"Функция");
  RadioButton(h2,v,0,0,"Сводный",flags[9]);
  RadioButton(h2,v+=16,1,0,"Подробный",flags[9]);
  ButtonFrame(h2,v+=40,130,2,"Сортировка по");
  RadioButton(h2,v,0,0,"дате стоимости",flags[10]);
  RadioButton(h2,v+=16,1,0,"дате операции",flags[10]);
  ButtonFrame(h3,v=vm,140,3,"Функция");
  RadioButton(h3,v,0,0,"Количества",ArtMode);
  RadioButton(h3,v+=16,3,0,"Количества и варианты",ArtMode);
  RadioButton(h3,v+=16,1,0,"Количества и суммы",ArtMode); // 2 Has some code for it, don't know what....
  ButtonFrame(h4,v=vm,160,12,"Регистры");
  CheckBox(h4,v,0,"Отгрузки",flags[2]); v = v + 16;
  CheckBox(h4,v,0,"Поступления",flags[3]); v = v + 16;
  CheckBox(h4,v,0,"Счета-фактуры",flags[1]); v = v + 16;
//  CheckBox(h4,v,0,"Заказы на производство",flags[18]); v = v + 16;
//  CheckBox(h4,v,0,"Производства",flags[5]); v = v + 16;
//  CheckBox(h4,v,0,"Операции производства",flags[20]); v = v + 16;
  CheckBox(h4,v,0,"Возвраты товаров",flags[8]); v = v + 16;
  CheckBox(h4,v,0,"Возвраты товаров поставщикам",flags[19]); v = v + 16;
  CheckBox(h4,v,0,"Списания со склада",flags[6]); v = v + 16;
  CheckBox(h4,v,0,"Перемещения товаров",flags[4]); v = v + 16;
  CheckBox(h4,v,0,"Переоценки склада",flags[21]); v = v + 16;
//  CheckBox(h4,v,0,"Складские перемещения",flags[17]); v = v + 16;
//  CheckBox(h4,v,0,"Таблица работ",flags[7]); v = v + 16;
  EndFrame;
  EndWindow;

//===============================================
  WindowBegin("Настройки склада",MainStockTClass,CGSbl,MainStockType);
  SetWRect(64,80,570,630);
  SetBlid(MainStockBlock);
  v = 6; vs = 20; h = 180; h2 = 280; h3 = 330;
  EditField(h,v,150,"Основной склад",Normal,MainStock,false,LocationSClass);
  if (StandardHansa==false) then begin
    EditField(h,v+=vs,150,"Склад обслуживания",Normal,DefServiceLoc,false,LocationSClass);
  end;
  EditField(h,v+=vs,150,"Начальная классификация",Normal,StartClass,false,DISClass);

  EditField(h,v+=vs,80,"Allow Corrections Since",Normal,StockCorectAfter,false,PasteCurDate);
  CheckBox(300,v,0,"RecalcStockNeeded",RecalcStockNeeded);

  CheckBox(h=50,v+=30,0,"Требовать указание склада",requireLocation);
  if (StandardHansa==false) then begin
    CheckBox(h,v+=16,0,"Обновлять регистр имеющихся серийных номеров",updateSVGM);
  end;
  CheckBox(h,v+=16,0,"Автоматическая отгрузка для работы и свободных товаров",DelivPlainItems);
//  CheckBox(h,v+=16,0,"Automatic receiving for Service and Plain Items",RecevPlainItems);
  CheckBox(h,v+=16,0,"Счет-фактура перед отгрузкой ",AllowInvBeforeShip);
  CheckBox(h,v+=16,0,"Счет-фактура поставщика перед поступлением",AllowInvBeforePU);
  if (StandardHansa==false) then begin
    CheckBox(h,v+=16,0,"Автоматически устанавливать серийный номер партии при отгрузке",DelivSetBatch);
    CheckBox(h,v+=16,0,"Сортировать серийные номера партий по срокам годности",SortBatchOnBestBefore);
  end;
  CheckBox(h,v+=16,0,"Разрешать количество в отгрузке больше, чем в счете",DelOrdQty);
  CheckBox(h,v+=16,0,"Не использовать серийные номера в поступлениях товара",NoSerOnPU);
  CheckBox(h,v+=16,0,"Устанавливать дату отгрузки и перемещения в день утверждения",SetDelDateToCurrent);
  CheckBox(h,v+=16,0,"№ заказ. пост. только в строке поступления (не в заголовке)",PONoOnPURowsOnly);
/*
not possible to store in DB , but anyway, i am sure Karl would have never approved that one
  if (StandardHansa==false) then begin
    CheckBox(h,v+=16,0,"Проверить сер. номера в счетах ЕККА, которые не обновл. склад",ChkSerNumOnNonStockIVcash);
  end;
*/
//  CheckBox(h,v+=16,0,"Don't Store Weighted Average per Location",DontCalcWAPerLoc);
//  CheckBox(h,v+=16,0,"Force Planned Delivery Date",ForcePlanDelDate); moved to plan delivery block
  ButtonFrame(h,vm=(v+=45),210,2,"Уменьшать к-во на скл. при отгрузке");
  RadioButton(h,v,0,0,"Когда отгрузка утверждена",UpdateAvailable);
  RadioButton(h,v+=16,1,0,"Когда отгрузка осуществлена",UpdateAvailable);
  ButtonFrame(h2,v=vm,180,2,"Расчет преобразов в ед 2");
  RadioButton(h2,v,0,0,"Умножать на коэффициент",UnitConvCalc);
  RadioButton(h2,v+=16,1,0,"Делить на коэффициент",UnitConvCalc);
  ButtonFrame(h,vm=(v+=45),260,3,"Работа и свободн тов в заказах поставщ");
  RadioButton(h,v,0,0,"Без автоматического поступления",RecevPlainItems);
  RadioButton(h,v+=16,1,0,"Автоматическое поступление",RecevPlainItems);
  RadioButton(h,v+=16,2,0,"Разрешать менять полученное кол-во",RecevPlainItems);
  ButtonFrame(h3,v=vm,130,3,"Превыш-е отгруж к-ва");
  RadioButton(h3,v,0,0,"Разрешать",dontAllowOvership);
  RadioButton(h3,v+=16,1,0,"Не разрешать",dontAllowOvership);
  RadioButton(h3,v+=16,2,0,"Отгружать всегда",dontAllowOvership);
  ButtonFrame(h,vm=(v+=45),260,4,"Хронология");
  RadioButton(h,v,0,0,"Никакой",Chronology);
  RadioButton(h,v+=16,1,0,"По складу",Chronology);
  RadioButton(h,v+=16,2,0,"По всем складам",Chronology);
  CheckBox(h+10,v+=16,0,"Не учитывать не проведенные записи",ChronologyOkOnly);
  ButtonFrame(h3,v=vm,130,2,"Превыш-е получ к-ва");
  RadioButton(h3,v,0,0,"разрешать",dontAllowOverreceive);
  RadioButton(h3,v+=16,1,0,"не разрешать",dontAllowOverreceive);
//  RadioButton(h3,v+=16,2,0,"Always Receive",dontAllowOverreceive);
  ButtonFrame(h3,v+=45,130,2,"Расчет накл. затрат");
  RadioButton(h3,v,0,0,"Стоимость",ExtraCostsCalculation);
  RadioButton(h3,v+=16,1,0,"Вес",ExtraCostsCalculation);
  EndWindow;

  Return;
end;
