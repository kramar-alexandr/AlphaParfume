SourceFile("halcust/level0", 0);
SourceFile("halcust/Reports", 3);
SourceFile("halcust/WActions", 3);
SourceFile("halcust/RActions", 3);
SourceFile("halcust/Documents", 3);
SourceFile("halcust/Maint", 3);
SourceFile("halcust/Tools", 3);
SourceFile("halcust/RemoteTools", 3);
SourceFile("halcust/Imports", 3);
SourceFile("halcust/Exports", 3);


procedure XXSERBLOCK
begin
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(TSerStart,M4Long,0,0);
ArrayField(TSerEnd,M4Long,0,0);
ArrayField(StartDate,M4Date,0,0);
ArrayField(EndDate,M4Date,0,0);
ArrayField(TSerCom,M4Str,20,0);
ArrayField(DonotGenTrans,M4Set,32,0);
EndArray;
EndBlock;
RETURN;
end;

begin

//=============================================== UserVC
RecordBegin(UserVc,UserView,"user2");
NewAutosyncRegister(kSyncDirectionToClient,true);
RecordField(Code,M4Code,10,UserVc);
RecordField(Name,M4Str,60,0);
RecordField(OldPassWord,M4Star,20,0);
RecordField(AccessGroup,M4UStr,100,AccessVc);
RecordField(CurOurContact,M4Str,20,0);
RecordField(LastOrdNr,M4Long,0,0);
RecordField(LastShipNr,M4Long,0,0);
RecordField(LastInvNr,M4Long,0,0);
RecordField(LastPurNr,M4Long,0,0);
RecordField(LastPayNr,M4Long,0,0);
RecordField(LastTRNr,M4Long,0,0);
RecordField(LastVINr,M4Long,0,0);
RecordField(LastOPNr,M4Long,0,0);
RecordField(TerminatedFlag,M4Int,0,0);
RecordField(Job,M4Str,60,0);
RecordField(JobGroup,M4Code,5,0);
RecordField(DisAllowOther,M4Int,0,0);
RecordField(Math,M4Matrix,0,0);
RecordField(Location,M4UStr,10,0);
FieldIsLocation(Location);
RecordField(Machines,M4Str,60,0);
RecordField(Tiller,M4Code,5,0);
RecordField(Bonus,M4Val,0,0);
RecordField(CUCode,M4Code,20,CUVc);
RecordField(CUName,M4Str,60,0);
RecordField(Phone1,M4Str,20,0);
RecordField(Phone2,M4Str,20,0);
RecordField(Fax1,M4Str,20,0);
RecordField(Fax2,M4Str,20,0);
RecordField(Comment,M4Str,60,0);
RecordField(PersAcc,M4Code,10,AccVc);
RecordField(PersObjx,M4Code,20,ObjVc);
RecordField(BankAcc,M4Str,60,0);
RecordField(BankName,M4Str,20,0);
RecordField(CostPrHour,M4Val,0,0);
RecordField(PricePrHour,M4Val,0,0);
RecordField(emailAddr,M4Str,60,0);
RecordField(IDCode,M4Str,20,0);
RecordField(Spec,M4Str,60,0);
RecordField(limitedAccess,M4Int,0,0);
RecordField(NewPassWord,M4NLong,0,0);
RecordField(LangCode,M4Code,5,0);
RecordField(SalesGroup,M4Code,5,SalesGroupVc);
RecordField(Department,M4Code,10,0);
RecordField(LastCLInNr,M4Long,0,0);
RecordField(LastCLOutNr,M4Long,0,0);
RecordField(FTPLogin,M4Int,0,0);
RecordField(WebConf,M4Code,20,0);
RecordField(WebStartPage,M4Str,60,0);
RecordField(CostAcc,M4Code,10,AccVc);
RecordField(LastIVCashNr,M4Long,0,0);
RecordField(Closed,M4Mark,0,0);
RecordField(OnlyVoiceLogin,M4Int,0,0);
RecordField(UserEditCtlf,M4Int,0,0);
RecordField(DateOrder,M4Int,0,0);
RecordField(LeadingZDay,M4Int,0,0);
RecordField(LeadingZMonth,M4Int,0,0);
RecordField(LeadingCentury,M4Int,0,0);
RecordField(DateSep,M4Str,1,0);
RecordField(DecimalPt,M4Str,1,0);
RecordField(ThousandSep,M4Str,1,0);
RecordField(ForceTimeEntry,M4Int,0,0);
RecordField(DateCreated,M4Date,0,0);
RecordField(Supervisor,M4UStr,60,UserVc);
RecordField(OneFunction,M4Code,5,OneFunctionVc);
RecordField(TypeOfUser,M4Int,0,0);
RecordField(thousSepf,M4Int,0,0);
RecordField(CanUseOS,M4Set,90,0);
RecordField(Magic,M4Long,0,0);
RecordField(Newf,M4Int,0,0);
RecordField(LastTTRNr,M4Long,0,0);
RecordField(CustCode,M4Code,20,CUVc);
RecordField(WindowType,M4Set,320,0);
RecordField(RegistrationNumber,M4Long,0,0);
RecordField(StartLevel,M4Set,375,0);
RecordField(ServLocation,M4UStr,10,0);
RecordField(ReservLocAccess,M4UStr,200,ReservLocAccessVc);
RecordField(ReservLocation,M4UStr,10,0);
//=== 5.4
RecordField(MinPLCode,M4Code,5,0);
RecordField(Magic2,M4Long,0,0);
RecordField(DiscPassword,M4NLong,0,0);
RecordField(LastOfficialSerNr,M4Str,100,0);
RecordField(LastDropSHNr,M4Long,0,0);
RecordField(PasswordNeverExpires,M4Int,0,0);
RecordField(LastRestAccNr,M4Long,0,0);
RecordField(LastPONr,M4Long,0,0);
RecordField(ExpiryDate,M4Date,0,0);
RecordField(SortCode,M4Str,10,0);
//=== 7.2
RecordField(BonusFound, M4Val, 0, 0); //Премиальный фонд
RecordField(MotiveCoeff, M4Val, 0, 0); //Коэффициент мотивации
RecordField(StateJob, M4Code, 20, StateVc); //Должность по штату
RecordField(MotiveDebAcc, M4Code, 20,0); // Мотивация Деб.   // 05.05.10 INAU
RecordField(MotiveCredAcc, M4Code, 20,0); // Мотивация Кред. // 05.05.10 INAU
RecordField(ValidAccList,M4UStr,255,0); //Список доспустимых счетов
RecordField(ValidPriceList,M4UStr,255,0); //Список доспустимых прайсов
RecordField(ValidLocList,M4UStr,255,0); //Список доспустимых складов
RecordField(MotivRespCode,M4Code,20,0); //04.09.12 INAU - ответственный за документ мотивации
RecordField(VPositionCode, M4Code, 20, 0); //18.01.13 INAU - код должности
RecordField(StPodrCode, M4Code, 20, 0); //18.01.13 INAU - код структурного подразделения
RecordField(ValidPMList,M4UStr,255,0); //13.03.13 INAU - Список доспустимых способов оплаты
RecordField(PPLimit, M4Val, 0, 0); //19.08.13 INAU - Лимит подотчета
RecordField(EMail,M4Str,50,0);
RecordField(Cb1, M4Mark, 0, 0);
RecordField(Cb2, M4Mark, 0, 0);
RecordField(Cb3, M4Mark, 0, 0);
//
ArrayBegin(Math,-,1);
ArrayField(Code,M4Code,5,0);
ArrayField(PRCode,M4Code,20,PRVc);
ArrayField(Comment,M4Str,60,0);
EndArray;
//
MainKeyBegin(Code,0);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(ActCode);
KeySegment(Code);
KeySegment(Closed);
KeyBegin(ActName);
KeySegment(Name);
KeySegment(Code);
KeySegment(Closed);
KeyBegin(OneFunction);
KeySegment(OneFunction);
KeySegment(Code);
KeySegment(Closed);
KeyBegin(TypeOfUser);
KeySegment(TypeOfUser);
KeySegment(Code);
KeySegment(Closed);
KeyBegin(SalesGroup);
KeySegment(SalesGroup);
KeySegment(Code);
KeyBegin(JobGroup);
KeySegment(JobGroup);
KeySegment(Code);
KeyBegin(CustCode);
KeySegment(CustCode);
KeySegment(Code);
KeyBegin(emailAddr);
KeySegment(emailAddr);
KeySegment(Code);
EndRecord;


//=============================================== CUVc
RecordBegin(CUVc,-,"cu5");
ImpExpLevel(1);
NewAutosyncRegister(kSyncDirectionToClient,true);
RecordField(Code,M4Code,20,CUVc);
SerialNoBlock(CUSerBlock);
RecordField(Name,M4Str,200,0);
RecordField(Person,M4Str,200,0); //60->200
RecordField(WarnText1,M4Str,255,0);
RecordField(InvAddr0,M4Str,60,0);
RecordField(InvAddr1,M4Str,60,0);
RecordField(InvAddr2,M4Str,60,0);
RecordField(InvoiceToCode,M4Code,20,CUVc);
RecordField(DelAddr0,M4Str,60,0); //Addr3
RecordField(DelAddr1,M4Str,60,0); //Addr4
RecordField(DelAddr2,M4Str,60,0); //Addr5
RecordField(Phone,M4Str,20,0);
RecordField(Fax,M4Str,20,0);
RecordField(CustCat,M4Code,5,0);
RecordField(Comment,M4Str,60,0);
RecordField(PayDeal,M4Code,2,0);
RecordField(ExportFlag,M4Int,0,0);
RecordField(AccFlag,M4Int,0,0);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(InterestFlag,M4Int,0,0);
RecordField(VATNr,M4Str,20,0);
RecordField(CountryCode,M4Code,5,0);
RecordField(SearchKey,M4UStr,10,0);
RecordField(RemndrFlag,M4Int,0,0);
RecordField(LangCode,M4Code,5,0);
RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
RecordField(OnAccount,M4Int,0,0);
RecordField(SalesMan,M4Code,10,UserVc);
FieldIsUser(SalesMan);
RecordField(CreditLimit,M4Val,0,0);
RecordField(ShipDeal,M4Code,5,0);
RecordField(ShipMode,M4Code,5,0);
RecordField(VATCode,M4Code,10,VATCodeBlock);
RecordField(Department,M4Str,60,0);
RecordField(OrderComment,M4Str,60,0);
RecordField(FreightNr,M4Str,20,0);
RecordField(PLCode,M4Code,5,0);
RecordField(RebCode,M4Code,5,0);
RecordField(Classification,M4List,200,CClassVc);
RecordField(blockedFlag,M4Int,0,0);
RecordField(DateChanged,M4Date,0,0);
RecordField(AccOperator,M4Str,60,0);
RecordField(SecAccount,M4Code,20,0);
RecordField(BankAccount,M4Str,60,0);
RecordField(JobDesc,M4Str,60,0);
RecordField(CustType,M4Int,0,0);
RecordField(ComCode,M4Code,5,0);
RecordField(Sorting,M4Str,20,0);
RecordField(RegNr1,M4Str,20,0);
RecordField(RegNr2,M4Str,20,0);
RecordField(CPRNr,M4Str,20,0);
RecordField(wwwAddr,M4Str,60,0);
RecordField(CompItemCode,M4Code,10,0);
RecordField(ANACode,M4Str,20,0);
RecordField(EDIFlag,M4Int,0,0);
RecordField(eMail,M4Str,100,0);
RecordField(IntRate,M4Val,0,0);
RecordField(TheirCode,M4Str,60,0);
RecordField(PriceBasedOn,M4Int,0,0);
RecordField(DeliveryBasedOn,M4Int,0,0);
RecordField(SalesGroup,M4Code,5,SalesGroupVc);
FieldIsGroup(SalesGroup);
RecordField(SortCode,M4Str,10,0);
RecordField(AllowLogin,M4Int,0,0);
RecordField(Password,M4Long,0,0);
RecordField(FTPLogin,M4Int,0,0);
RecordField(DateCreated,M4Date,0,0);
RecordField(EGOFlag,M4Int,0,0);
RecordField(InvAddr3,M4Str,60,0);
RecordField(DelAddr3,M4Str,60,0);
/* Not OK with Karl */
RecordField(xArea,M4Str,20,0);
RecordField(xAreaName,M4Str,60,0);
RecordField(InvAddr4,M4Str,60,0);
RecordField(DelAddr4,M4Str,60,0);
RecordField(WebConf,M4Code,20,0);
RecordField(WebStartPage,M4Str,60,0);
RecordField(FreightCode,M4Code,5,0);
RecordField(MainDispGroup,M4Code,5,0);
RecordField(AutoGiro,M4Int,0,0);
RecordField(OnHoldFlag,M4Int,0,0);
RecordField(ColectionFlag,M4Int,0,0);
RecordField(LocationCode,M4Code,10,LocationVc);
RecordField(WebDisplays,M4Code,5,WebDisplayVc);
RecordField(Mobile,M4Str,20,0);
RecordField(NoLetterPosting,M4Int,0,0); // Temp until we get the Customer Lists
RecordField(FiscalFlag,M4Int,0,0);
RecordField(UserStr1,M4Str,255,0);
RecordField(UserStr2,M4Str,255,0);
RecordField(UserStr3,M4Str,255,0);
RecordField(UserStr4,M4Str,255,0);
RecordField(UserStr5,M4Str,255,0);
RecordField(UserVal1,M4UVal,0,0);
RecordField(UserVal2,M4UVal,0,0);
RecordField(UserVal3,M4UVal,0,0);
RecordField(UserDate1,M4Date,0,0);
RecordField(UserDate2,M4Date,0,0);
RecordField(UserDate3,M4Date,0,0);
/*from Supplier*/
RecordField(AccAP,M4Code,10,AccVc);
RecordField(AccCost,M4Code,10,AccVc);
RecordField(Bank,M4Str,60,0);
RecordField(OnAccAccAP,M4Code,10,AccVc);
RecordField(MinOrdSum,M4Val,0,0);
RecordField(PurchAcc,M4Code,10,AccVc);
RecordField(RefStr,M4Str,60,0);
RecordField(WithPayMode,M4UStr,20,0);
RecordField(RetainPrc,M4PrcStr,10,0);
RecordField(NoMailPosting,M4Int,0,0); // Temp until we get the Customer Lists
RecordField(VEType,M4Int,0,0);
RecordField(CUType,M4Int,0,0);
RecordField(VEPayDeal,M4Code,2,0);
RecordField(VEShipDeal,M4Code,5,0);
RecordField(VEShipMode,M4Code,5,0);
RecordField(VECreditLimit,M4Val,0,0);
RecordField(VEObjects,M4UStr,60,ObjVc);
RecordField(VEWarnText1,M4Str,255,0);
RecordField(VEFactoring,M4Code,20,CUVc);
RecordField(VECurncyCode,M4Code,5,CurncyCodeVc);
RecordField(VECustID,M4Str,20,0);
RecordField(VEVATCode,M4Code,10,VATCodeBlock);
RecordField(NoFactoringFlag,M4Int,0,0);
RecordField(NoRepa,M4Int,0,0);
RecordField(VECat,M4Code,5,0);
RecordField(IBANCode,M4UStr,60,0);
RecordField(EInvAddr,M4UStr,60,0);
RecordField(EInvFunc,M4Int,0,0);
RecordField(xAcceptanceGroup,M4Code,20,AcceptGroupVc);
RecordField(WebServiceChannel,M4Set,120,0);
RecordField(SkypeName,M4Str,60,0);
RecordField(Region,M4Code,20,RegionVc);
RecordField(NoTax1,M4Int,0,0);
RecordField(NoTax2,M4Int,0,0);
RecordField(GuestType,M4Int,0,0);
RecordField(PassportNr,M4Str,20,0);
RecordField(Profesion,M4Str,60,0);
RecordField(Nationality,M4Str,20,0);
RecordField(BirthDate,M4Date,0,0);
RecordField(Gender,M4Int,0,0);
RecordField(Newspaper,M4Code,10,0);
RecordField(Smoking,M4Int,0,0);
RecordField(DocType,M4Str,20,0);
RecordField(Blacklist,M4Int,0,0);
RecordField(MarStatus,M4Int,0,0);
RecordField(Passphrase,M4Str,20,0);
RecordField(SIPCode,M4Str,60,0);
RecordField(AltPhone,M4Str,20,0);
RecordField(Comment0,M4Str,60,0);
RecordField(Comment1,M4Str,60,0);
RecordField(Comment2,M4Str,60,0);
RecordField(Title,M4Str,60,0);
RecordField(Salutation1,M4Str,60,0);
RecordField(Salutation2,M4Str,60,0);
RecordField(Salutation3,M4Str,60,0);
RecordField(xUserCode,M4Dummy,0,0);
RecordField(DealerType,M4Int,0,0);
RecordField(GroupInv,M4Int,0,0);
RecordField(AddressBooks,M4UStr,255,0);
RecordField(Extension,M4Str,20,0);
//=== 5.4
RecordField(TourOperator,M4Code,20,CUVc);
RecordField(Agent,M4Code,20,CUVc);
RecordField(DietRemarks,M4Str,60,0);
RecordField(RequirementRemarks,M4Str,60,0);
RecordField(AgeStatus,M4Int,0,0);
RecordField(Age,M4Long,0,0);//??
RecordField(DefGuestPayMode,M4UStr,2,PMBlock);
RecordField(BookOrigin,M4Code,20,0);
RecordField(TaxTemplateCode,M4Code,10,TaxTemplateVc);
RecordField(VETaxTemplateCode,M4Code,10,TaxTemplateVc);
RecordField(EmployeeType,M4Int,0,0);
RecordField(Ethnicity,M4Str,100,0);
RecordField(BirthPlace,M4Str,100,0);
RecordField(IDNr,M4Str,60,0);
RecordField(VisaType,M4Str,30,0);
RecordField(VisaNr,M4Str,100,0);
RecordField(VisaExpiry,M4Date,0,0);
RecordField(MilitaryDocNr,M4Str,60,0);
RecordField(SocialSecurityNr,M4Str,100,0);
RecordField(DisabledStatus,M4Int,0,0);
RecordField(Disability,M4Str,60,0);
RecordField(HealthStatus,M4Str,60,0);
RecordField(HealthIssues,M4Str,200,0);
RecordField(DriverLicenceCategory,M4Str,100,0);
RecordField(SchoolName,M4Str,100,0);
RecordField(EducationalDegree,M4Str,60,0);
RecordField(EducationalMajor,M4Str,60,0);
RecordField(EducationStatus,M4Int,0,0);
RecordField(PreviousEmployer,M4Str,60,0);
RecordField(PreviousJobTitle,M4Str,60,0);
RecordField(Birthday,M4Str,5,0);
RecordField(VERebCode,M4Code,5,0);
RecordField(SelfBilling,M4Int,0,0);
RecordField(DelCountry,M4Code,5,0);
RecordField(VEInvoiceToCode,M4Code,20,CUVc);
RecordField(MainPartner,M4Code,20,CUVc);
RecordField(CreditLimitDays,M4Long,0,0);
RecordField(VECreditLimitDays,M4Long,0,0);
RecordField(FTax,M4Int,0,0);
RecordField(SuframaRegNr,M4Str,9,0);
RecordField(DefMarkup,M4PrcStr,10,0);
RecordField(InvCountryName,M4Str,100,0);
RecordField(DelCountryName,M4Str,100,0);
RecordField(PaymentCode,M4Code,5,0);
RecordField(MarketUserName,M4Str,60,0);
RecordField(RemoteBackupsPassword,M4Str,40,0);
RecordField(RemoteBackupsAddress,M4Str,255,0);
RecordField(RemoteBackupsPort,M4Int,0,0);
RecordField(BirthCountry,M4Str,100,0);
RecordField(LegalForm,M4Code,10,0);
RecordField(VATNrCheckDate,M4Date,0,0);
RecordField(QQName,M4Str,20,0);
RecordField(WeiboName,M4Str,20,0);
RecordField(RecipientGLN,M4Str,20,0);
RecordField(IPBookVAT,M4Int,0,0);
RecordField(OPBookVAT,M4Int,0,0);
RecordField(BillingTypePreference,M4Set,578,0);
RecordField(Math2,M4TextField,0,0);
RecordField(TaxCondition,M4Int,0,0);
//=== 7.2
RecordField(ContractDate, M4Date, 0, 0);
RecordField(AlphaBet, M4UStr, 1, 0);
RecordField(OffiSeller, M4Code, 20, 0);
//t+ 5.06.12
RecordField(Passp,M4Str,255,0); // Паспортные данные
RecordField(RefINN,M4Str,255,0); // Справка ИНН
RecordField(EGRPOU,M4Str,255,0); // Выписка ЕГРПОУ
RecordField(RefSingle,M4Str,255,0); // Свидетельство о ед. налоге или квитанции авансового платежа (для ФОП)
RecordField(RefOPP,M4Str,255,0); // Справка 4-ОПП (для Юр.лиц)
RecordField(AssigDir,M4Str,255,0); // Документ о назначении директора (для Юр.лиц)
RecordField(Excerpt,M4Str,255,0); // Выдержка из устава
RecordField(RefNDS,M4Str,255,0); // Свидетельство НДС (для Юр.лиц)
RecordField(Status,M4Int,0,0); // Флаг__ФЛП/Юр.лицо
RecordField(ValStatus,M4Int,0,0); // Флаг__Валидность ФЛП/Юр.лицо
RecordField(ValTerm,M4Int,0,0); // Флаг__Валидность срока договора
RecordField(ValPas,M4Int,0,0); // Флаг__Валидность/наличие копии паспорта
RecordField(ValRefINN,M4Int,0,0); // Флаг__Валидность/наличие справки ИНН
RecordField(ValEGRPOU,M4Int,0,0); // Флаг__Валидность/наличие выписки ЕГРПОУ
RecordField(ValRefNDS,M4Int,0,0); // Флаг__Валидность/наличие справки НДС
RecordField(ValRefOPP,M4Int,0,0); // Флаг__Валидность/наличие справки ОПП
RecordField(ValTrust,M4Int,0,0); // Флаг__Валидность/наличие доверенных лиц
RecordField(ValRefSingle,M4Int,0,0); // Флаг__Валидность/наличие свидетельства о ед.налоге
RecordField(ValAssigDir,M4Int,0,0); // Флаг__Валидность/наличие документа о назначении директора
RecordField(ValExcerpt,M4Int,0,0); // Флаг__Валидность/наличие выдержки из устава
RecordField(LangSup,M4Code,20,0); // язык для поставщика
RecordField(CCDFlag, M4Mark, 0, 0); //22.09.12 INAU - признак ГТД
RecordField(ArriveDays, M4Int, 0, 0); //К-во дней до отгрузки
RecordField(DeliverDays, M4Int, 0, 0); //К-во дней до поставки
RecordField(DateDebet, M4Date, 0, 0); //Дата последней сверки
//
RecordField(SupClassification,M4UStr,200,0);//27.02.13 TGOR
//12.03.13 INAU
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveTime,M4Time,0,0);
//15.05.13 TGOR
RecordField(LowPrew,M4UStr,20,0);
RecordField(DocChDate,M4Date,0,0);
RecordField(DocChTime,M4Time,0,0);
RecordField(Math,M4Matrix,0,0);
RecordField(tLegRisk,M4UStr,250,0);
RecordField(tCreditLimit,M4Val,0,0);
RecordField(tLimKrFlag, M4Mark, 0, 0);
RecordField(PlanDeliveryTime, M4Time, 0, 0); //10.02.14 INAU - Оговоренное время достаки
RecordField(AlienCurncy, M4Code, 5, 0); //22.05.14 INAU - Валюта для печатной формы Сч/ф
RecordField(DontPrintSverkaFlag, M4Mark, 0, 0); //03.07.14 INAU - Не печатать Акт сверки автоматически
RecordField(AlienToRateB1, M4Rate, 0, 0); //09.09.14 INAU - Курс валюты печати
ArrayBegin(Math, -, 1);
ArrayField(CommDate,M4Date,0,0);
ArrayField(CommTime,M4Time,0,0);
ArrayField(Field, M4Str, 50, 0);
ArrayField(Comment, M4Str, 200, 0);
EndArray;
//===
MainKeyBegin(Code,1);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Code);
//  SynchronizationIndex;
SubsetKeyBegin2(Name);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
AppendListFieldToKeyName(AddressBooks);
KeySegment(Name);
KeySegment(Code);
SubsetKeyBegin2(Group);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(CustCat);
KeySegment(Code);
SubsetKeyBegin2(SearchKey);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(SearchKey);
KeySegment(Code);
SubsetKeyBegin2(Department);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Department);
KeySegment(Code);
SubsetKeyBegin2(ActCode);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Code);
KeySegment(CUType);
KeySegment(blockedFlag);
SubsetKeyBegin2(ActName);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Name);
KeySegment(Code);
KeySegment(CUType);
KeySegment(blockedFlag);
SubsetKeyBegin2(ActGroup);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(CustCat);
KeySegment(Code);
KeySegment(CUType);
KeySegment(blockedFlag);
SubsetKeyBegin2(ActSearchKey);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(SearchKey);
KeySegment(Code);
KeySegment(CUType);
KeySegment(blockedFlag);
SubsetKeyBegin2(ActDepartment);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Department);
KeySegment(Code);
KeySegment(CUType);
KeySegment(blockedFlag);
SubsetKeyBegin2(Sorting);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Sorting);
KeySegment(Code);
SubsetKeyBegin2(Phone);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Phone);
KeySegment(Code);
SubsetKeyBegin2(ActPhone);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Phone);
KeySegment(Code);
KeySegment(CUType);
KeySegment(blockedFlag);
SubsetKeyBegin2(SecAccount);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(SecAccount);
KeySegment(Code);
SubsetKeyBegin2(VATNr);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(VATNr);
KeySegment(Code);
SubsetKeyBegin2(ANACode);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(ANACode);
KeySegment(Code);
SubsetKeyBegin2(SalesMan);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(SalesMan);
KeySegment(Code);
SubsetKeyBegin2(InvoiceToCode);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(InvoiceToCode);
KeySegment(Code);
SubsetKeyBegin2(EDIFlag);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(EDIFlag);
KeySegment(Code);
SubsetKeyBegin2(Person);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Person);
KeySegment(Code);
SubsetKeyBegin2(BankAccount);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(BankAccount);
KeySegment(Code);
SubsetKeyBegin2(ActVATNr);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(VATNr);
KeySegment(Code);
KeySegment(CUType);
KeySegment(blockedFlag);
SubsetKeyBegin2(VEActCode);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Code);
KeySegment(VEType);
KeySegment(blockedFlag);
SubsetKeyBegin2(VEActName);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Name);
KeySegment(Code);
KeySegment(VEType);
KeySegment(blockedFlag);
SubsetKeyBegin2(VEActGroup);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(VECat);
KeySegment(Code);
KeySegment(VEType);
KeySegment(blockedFlag);
SubsetKeyBegin2(VEActSearchKey);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(SearchKey);
KeySegment(Code);
KeySegment(VEType);
KeySegment(blockedFlag);
SubsetKeyBegin2(VEActDepartment);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Department);
KeySegment(Code);
KeySegment(VEType);
KeySegment(blockedFlag);
SubsetKeyBegin2(VEActVATNr);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(VATNr);
KeySegment(Code);
KeySegment(VEType);
KeySegment(blockedFlag);
SubsetKeyBegin2(GuestActCode);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Code);
KeySegment(GuestType);
KeySegment(blockedFlag);
SubsetKeyBegin2(GuestActName);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Name);
KeySegment(Code);
KeySegment(GuestType);
KeySegment(blockedFlag);
SubsetKeyBegin2(GuestActPassport);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(PassportNr);
KeySegment(Code);
KeySegment(GuestType);
KeySegment(blockedFlag);
SubsetKeyBegin2(eMail);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(eMail);
KeySegment(Code);
SubsetKeyBegin2(VECat);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(VECat);
KeySegment(Code);

/*
SubsetKeyBegin2(Area);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Area);
KeySegment(Code);
KeySegment(Type);
SubsetKeyBegin2(AreaName);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(AreaName);
KeySegment(Code);
KeySegment(Type);
*/
KeyBegin(SkypeName);
KeySegment(SkypeName);
KeySegment(Code);

KeyBegin(AltPhone);
KeySegment(AltPhone);
KeySegment(Code);
KeyBegin(Mobile);
KeySegment(Mobile);
KeySegment(Code);

KeyBegin(SIPCode);
KeySegment(SIPCode);
KeySegment(Code);
KeyBegin(Extension);
KeySegment(Extension);
KeySegment(Code);
KeyBegin(AllPhones); // Was this some inventive index that should contain ALL phone numbers, but was never made :)
KeySegment(Phone);
KeySegment(Code);
KeyBegin(Region);
KeySegment(Region);
KeySegment(Code);

KeyBegin(Birthday);
KeySegment(Birthday);
KeySegment(Code);

SubSetKeyBegin2(Classification);
AppendListFieldToKeyName(Classification);
KeySegment(Code);

SubsetKeyBegin2(ActBankAccount);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(BankAccount);
KeySegment(Code);
KeyBegin(ActIBAN);
KeySegment(IBANCode);
KeySegment(Code);
SubsetKeyBegin2(DealerActCode);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Code);
KeySegment(DealerType);
KeySegment(blockedFlag);
SubsetKeyBegin2(DealerActName);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Name);
KeySegment(Code);
KeySegment(DealerType);
KeySegment(blockedFlag);
SubsetKeyBegin2(DealerActSearchKey);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(SearchKey);
KeySegment(Code);
KeySegment(DealerType);
KeySegment(blockedFlag);
SubsetKeyBegin2(DealerActDepartment);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Department);
KeySegment(Code);
KeySegment(DealerType);
KeySegment(blockedFlag);
SubsetKeyBegin2(DealerActVATNr);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(VATNr);
KeySegment(Code);
KeySegment(DealerType);
KeySegment(blockedFlag);
SubsetKeyBegin2(DealerActPhone);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Phone);
KeySegment(Code);
KeySegment(DealerType);
KeySegment(blockedFlag);

SubsetKeyBegin2(RegNr1);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(RegNr1);
KeySegment(Code);
SubsetKeyBegin2(VEActRegNr1);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(RegNr1);
KeySegment(Code);
KeySegment(VEType);
KeySegment(blockedFlag);
SubsetKeyBegin2(ActRegNr1);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(RegNr1);
KeySegment(Code);
KeySegment(CUType);
KeySegment(blockedFlag);

SubsetKeyBegin2(DealerActRegNr1);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(VATNr);
KeySegment(Code);
KeySegment(DealerType);
KeySegment(blockedFlag);
SubsetKeyBegin2(DateChanged);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(DateChanged);
KeySegment(Code);
SubsetKeyBegin2(ContactActCode);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Code);
KeySegment(blockedFlag);
SubsetKeyBegin2(ContactActName);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Name);
KeySegment(Code);
KeySegment(blockedFlag);
KeyBegin(EmployeeActCode);
KeySegment(Code);
KeySegment(EmployeeType);
KeySegment(blockedFlag);
KeyBegin(EmployeeActName);
KeySegment(Name);
KeySegment(Code);
KeySegment(EmployeeType);
KeySegment(blockedFlag);
KeyBegin(EmployeeActSearchKey);
KeySegment(SearchKey);
KeySegment(Code);
KeySegment(EmployeeType);
KeySegment(blockedFlag);
KeyBegin(EmployeeActDepartment);
KeySegment(Department);
KeySegment(Code);
KeySegment(EmployeeType);
KeySegment(blockedFlag);
KeyBegin(MarketUserName);
KeySegment(MarketUserName);
KeySegment(Code);
EndRecord;


//=============================================== SalesGroupVc
RecordBegin(SalesGroupVc,-,"");
RecordField(SGroupCode,M4Code,5,0);
RecordField(SGroupName,M4Str,100,0);
//=== 7.2
RecordField(Closed, M4Mark, 0, 0);
MainKeyBegin(SGroupCode,0);
KeySegment(SGroupCode);
KeyBegin(SGroupName);
KeySegment(SGroupName);
KeySegment(SGroupCode);
EndRecord;


//=============================================== CTypeVc
RecordBegin(CTypeVc,-,"ctype");
RecordField(Code,M4Code,10,0);
RecordField(Comment,M4Str,60,0);
//=== 5.4
RecordField(AutoObjects, M4Code, 10, 0);
MainKeyBegin(Code, 0);
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(Code);
// KeyBegin(AutoObjects); // НУЖНО ВКЛЮЧИТЬ ПРИ ОЧЕРЕДНОМ BACKUP|RESTORE!!!
// KeySegment(AutoObjects);
// KeySegment(Code);
EndRecord;


//=============================================== ORVc
RecordBegin(ORVc,-,"ORVc2");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(ORSerBlock);
RecordField(OrdDate,M4Date,0,0);
FieldIsTransDate(OrdDate);
RecordField(CustCode,M4Code,20,CUVc);
RecordField(Math,M4Matrix,0,0);
RecordField(Addr0,M4Str,60,0);
RecordField(Addr1,M4Str,60,0);
RecordField(Addr2,M4Str,60,0);
RecordField(Addr3,M4Str,60,0);
RecordField(OurContact,M4Str,20,0);
RecordField(CustContact,M4Str,60,0);
RecordField(ExportFlag,M4Int,0,0);
RecordField(InvFlag,M4Int,0,0);
RecordField(ShipFlag,M4Int,0,0);
RecordField(Prntdf,M4Int,0,0);
RecordField(PayDeal,M4Code,2,0);
RecordField(CustCat,M4Code,5,0);
RecordField(InvMark,M4Mark,0,0);
RecordField(ShipMark,M4Mark,0,0);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(ShipMode,M4Code,5,0);
RecordField(OrderStatus,M4Int,0,0);
RecordField(PlanShip,M4Str,10,0);
RecordField(SalesMan,M4UStr,60,UserVc);
FieldIsUser(SalesMan);
RecordField(Sign,M4Code,10,UserVc);
RecordField(ShipDeal,M4Code,5,0);
RecordField(ShipAddr0,M4Str,60,0);
RecordField(ShipAddr1,M4Str,60,0);
RecordField(ShipAddr2,M4Str,60,0);
RecordField(ShipAddr3,M4Str,60,0);
RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
RecordField(LangCode,M4Code,5,0);
RecordField(InvoiceToCode,M4Code,20,CUVc);
RecordField(Closed,M4Mark,0,0);
RecordField(ToRateB1,M4Rate,0,0);
RecordField(BuildOn,M4Int,0,0);
RecordField(PRCode,M4Code,20,PRVc);
RecordField(Comment,M4Str,60,0);
RecordField(InvOnlyOnFull,M4Int,0,0);
RecordField(DownPaySent,M4Val,0,0);
RecordField(DownPayRedcd,M4Val,0,0);
RecordField(OrderClass,M4Code,5,0);
RecordField(CustOrdNr,M4Str,60,0);
RecordField(PriceList,M4Code,5,0);
RecordField(InclVAT,M4Int,0,0);
RecordField(Sum0,M4Val,0,0);
RecordField(Sum1,M4Val,0,0);
RecordField(Sum2,M4Val,0,0);
RecordField(Sum3,M4Val,0,0);
RecordField(Sum4,M4Val,0,0);
RecordField(Reserved,M4Int,0,0);
RecordField(OSFlag,M4Int,0,0);
RecordField(Location,M4Code,10,LocationVc);
FieldIsLocation(Location);
RecordField(CustVATCode,M4Code,10,VATCodeBlock);
RecordField(RebCode,M4Code,5,0);
RecordField(VATNr,M4Str,20,0);
RecordField(Phone,M4Str,20,0);
RecordField(Fax,M4Str,20,0);
RecordField(ExportedFlag,M4Int,0,0);
RecordField(BaseSum4,M4Val,0,0);
RecordField(FrRate,M4Rate,0,0);
RecordField(ToRateB2,M4Rate,0,0);
RecordField(BaseRate1,M4Rate,0,0);
RecordField(BaseRate2,M4Rate,0,0);
RecordField(DiscPerc,M4Qty,0,0);
RecordField(DiscSum,M4Val,0,0);
RecordField(TotGP,M4Val,0,0);
RecordField(Probability,M41Val,0,0);
RecordField(CreditCard,M4UStr,20,CreditCardVc);
RecordField(AuthorizationCode,M4UStr,10,0);
RecordField(GPProc,M41Val,0,0);
RecordField(DespatchDate,M4Date,0,0);
RecordField(DespatchTime,M4Time,0,0);
RecordField(SalesGroup,M4UStr,30,SalesGroupVc);
FieldIsGroup(SalesGroup);
RecordField(Sorting,M4Str,20,0);
RecordField(TotQty,M4Qty,0,0);
RecordField(TotWeight,M4Qty,0,0);
RecordField(TotVolume,M4Qty,0,0);
RecordField(Commision,M4Val,0,0);
RecordField(SumIncCom,M4Val,0,0);
RecordField(FrPrice,M4Val,0,0);
RecordField(FrBase,M4Val,0,0);
RecordField(FrItem,M4Code,20,INVc);
RecordField(FrVATCode,M4Code,10,VATCodeBlock);
RecordField(FrObjects,M4UStr,60,ObjVc);
RecordField(InvAddr3,M4Str,60,0);
RecordField(InvAddr4,M4Str,60,0);
RecordField(DelAddr3,M4Str,60,0);
RecordField(DelAddr4,M4Str,60,0);
RecordField(DelAddrCode,M4Code,20,0);
RecordField(TAX1Sum,M4Val,0,0);
RecordField(QuoteNr,M4Long,0,0);
RecordField(InvBeforeShip,M4Int,0,0);
RecordField(colnr,M4Set,46,0);
RecordField(OKFlag,M4Mark,0,0);
RecordField(PlanShipDate,M4Date,0,0);
RecordField(PrepaidAmount,M4Val,0,0);
RecordField(Region,M4Code,20,RegionVc);
RecordField(RefStr,M4Str,60,0);
RecordField(GroupOrdNr,M4Long,0,0);
RecordField(NoDelivery,M4Int,0,0);
RecordField(NoInvoice,M4Int,0,0);
RecordField(TAX2Sum,M4Val,0,0);
RecordField(NoTax1,M4Int,0,0);
RecordField(NoTax2,M4Int,0,0);
RecordField(BranchID,M4Code,20,CUVc);
RecordField(NoTAXonVAT,M4Long,0,0);
RecordField(TotalwoTAX,M4Int,0,0);
//=== 5.4
RecordField(OrderType,M4Set,433,0);
RecordField(AcceptanceStatus,M4Int,0,0);
RecordField(CustTaxTemplateCode,M4Code,10,TaxTemplateVc);
RecordField(TaxMatrix,M4PackedMatrix,0,TaxMatrixVc);
RecordField(TerminalID,M4Str,60,0);
RecordField(OfficialSerNr,M4Str,100,0);
RecordField(Hash,M4Str,255,0);
RecordField(HashKeyVersion,M4Int,0,0);
RecordField(RegDate,M4Date,0,0);
RecordField(RegTime,M4Time,0,0);
RecordField(LocalMachineCode,M4Code,20,0);
RecordField(InvCountry,M4Code,5,0);
RecordField(DelCountry,M4Code,5,0);
RecordField(TREONr,M4Long,0,0);
RecordField(TREOExpDate,M4Date,0,0);
RecordField(ORCONr,M4Long,0,0);
RecordField(AcceptanceBy,M4List,200,UserVc);
RecordField(AcceptanceFYI,M4List,200,UserVc);
RecordField(BankCode,M4Code,10,BankVc);
RecordField(InvCountryName,M4Str,100,0);
RecordField(DelCountryName,M4Str,100,0);
RecordField(OfficialSerNrSerie,M4Str,30,0);
RecordField(RecipientGLN,M4Str,20,0);
RecordField(DelRecipientGLN,M4Str,20,0);
RecordField(IntrastatTransCode,M4Code,20,0);
//=== 7.2
//Добавлено 25.11.09 INAU
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogSaveTime,M4Time,0,0);
RecordField(LogOKDate,M4Date,0,0);
RecordField(LogOKUser,M4UStr,20,0);
RecordField(LogOKTime,M4Time,0,0);
//
RecordField(Dummy, M4Int, 0, 0);
RecordField(PlanShipTime,M4Time,0,0); //13.01.12 INAU
RecordField(Invalid, M4Int, 0, 0);
FieldIsInvalid(Invalid);
RecordField(SenceInvalid, M4Str, 100, 0);
RecordField(CCDFlag, M4Mark, 0, 0); //22.09.12 INAU - признак ГТД
RecordField(Notes,M4Str,200,0); //Примечания
RecordField(OrigLocation,M4Code,10,0); //19.12.12 INAU - Физический склад для "белых" продаж
//
ArrayBegin(Math,-,1);
ArrayField(stp,M4Int,0,0);
ArrayField(ArtCode,M4Code,20,INVc);
ArrayField(Quant,M4UVal,0,0);
ArrayField(Price,M423Val,0,0);
ArrayField(Sum,M4Val,0,0);
ArrayField(vRebate,M41Val,0,0);
ArrayField(SalesAcc,M4Code,10,AccVc);
ArrayField(Shipd1,M4UVal,0,0);
ArrayField(Shipd2,M4UVal,0,0);
ArrayField(Invd,M4UVal,0,0);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(BasePrice,M423Val,0,0);
ArrayField(rowGP,M4Val,0,0);
ArrayField(Spec,M4Str,100,0);
ArrayField(VATCode,M4Code,10,VATCodeBlock);
ArrayField(Recepy,M4Code,20,RecVc);
ArrayField(SerialNr,M4Str,30,0);
ArrayField(PriceFactor,M45Val,0,0);
ArrayField(VARList,M4UStr,30,0);
ArrayField(Location,M4Code,10,LocationVc);
ArrayField(Source,M4Code,10,SourceVc);
ArrayField(PickingDate,M4Date,0,0);
ArrayField(PickingTime,M4Str,20,0);
ArrayField(InloadingDate,M4Date,0,0);
ArrayField(InloadingTime,M4Str,20,0);
ArrayField(DespatchRowDate,M4Date,0,0);
ArrayField(DespatchRowTime,M4Str,20,0);
ArrayField(PlanShipRow,M4Str,10,0);
ArrayField(ShipNote,M4Str,60,0);
ArrayField(UnitCode,M4Code,5,0);
ArrayField(UnitFactQuant,M4UVal,0,0);
ArrayField(UnitFactPrice,M423Val,0,0);
ArrayField(UnitXval,M4UVal,0,0);
ArrayField(UnitYval,M4UVal,0,0);
ArrayField(UnitZval,M4UVal,0,0);
ArrayField(Coefficient,M45Val,0,0);
ArrayField(VECode,M4Code,20,VEVc);
ArrayField(Production,M4Code,20,ProdVc);
ArrayField(GroupOrdRow,M4Long,0,0);
ArrayField(TAX2Code,M4Code,5,0);
ArrayField(TAX2Prc,M423Val,0,0);
ArrayField(TAX2Reb,M4Val,0,0);
ArrayField(TAX1Reb,M4Val,0,0);
ArrayField(TAX2Acc,M4Code,10,AccVc);
ArrayField(PlanShipRowDate,M4Date,0,0);
ArrayField(CUServiceHistNr,M4Long,0,0);
ArrayField(CUServiceUntilDate,M4Date,0,0);
//=== 5.4
ArrayField(Position,M4Code,20,0);
ArrayField(RowOrderType,M4Set,433,0);//no funcionality atm
ArrayField(TaxTemplateCode,M4UStr,60,TaxTemplateVc);
ArrayField(TaxMatrix,M4PackedMatrix,0,TaxMatrixVc);
ArrayField(Region,M4Code,20,RegionVc);
ArrayField(Perceptions,M4Int,0,0);
ArrayField(MotherArtCode,M4Code,20,INVc);
ArrayField(RecipeQuant,M4Qty,0,0);
ArrayField(CustArtCode,M4Code,20,CUINVc);
ArrayField(Salesmen,M4UStr,60,UserVc);
ArrayField(OrderType,M4Set,433,0);
ArrayField(UnitComment,M4Str,200,0);
//=== 7.2
ArrayField(QuantAvail, M4Val, 0, 0); // By DELPHI Остаток, доступный на складе минус счета
ArrayField(INRek,M4Long,0,0); // признак рекламного товара, требующего удаления и пересчета
//
EndArray;
//
MainKeyBegin(SerNr,1);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(SerNr);
SynchronizationIndex;
SubsetKeyBegin2(ExportedFlag);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(ExportedFlag);
KeySegment(SerNr);
SubsetKeyBegin2(CustCode);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(CustCode);
KeySegment(SerNr);
SubsetKeyBegin2(InvFlag);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(InvFlag);
KeySegment(SerNr);
SubsetKeyBegin2(ShipFlag);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(ShipFlag);
KeySegment(SerNr);
SubsetKeyBegin2(Name);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(Addr0);
KeySegment(SerNr);
SubsetKeyBegin2(PRCode);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(PRCode);
KeySegment(SerNr);
SubsetKeyBegin2(OrderClass);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(OrderClass);
KeySegment(SerNr);
SubsetKeyBegin2(OSFlag);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(OSFlag);
KeySegment(SerNr);
SubsetKeyBegin2(OSCU);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(OSFlag);
KeySegment(CustCode);
KeySegment(SerNr);
SubsetKeyBegin2(OSObjects);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(OSFlag);
KeySegment(Objects);
KeySegment(SerNr);
SubsetKeyBegin2(OrdDate);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(OrdDate);
KeySegment(SerNr);
SubsetKeyBegin2(CustOrdNr);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(CustOrdNr);
KeySegment(SerNr);
KeyBegin(InvoiceCode);
KeySegment(OSFlag);
KeySegment(InvoiceToCode);
KeySegment(SerNr);
SubsetKeyBegin2(SalesMan);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(SalesMan);
KeySegment(CustCode);
KeySegment(SerNr);
SubsetKeyBegin2(Reserved);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(Reserved);
KeySegment(SerNr);
/* Unconfirmed crashproblems with crap in DespatchDate, Do we need this index??
SubsetKeyBegin2(DespatchDate);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(DespatchDate);
KeySegment(DespatchTime);
KeySegment(SerNr);
*/
SubsetKeyBegin2(Sorting);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(Sorting);
KeySegment(SerNr);

//  SubsetKeyBegin2(UserSerNr);
//  StoreInBaseKey;
//  AppendListFieldToKeyName(SalesMan);
//  AppendListFieldToKeyName(SalesGroup);
//  KeySegment(SerNr);

SubsetKeyBegin2(PlanShip);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(PlanShip);
KeySegment(SerNr);
SubsetKeyBegin2(DelAddrCode);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(DelAddrCode);
KeySegment(SerNr);
SubsetKeyBegin2(Sum4);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(Sum4);
KeySegment(SerNr);
SubsetKeyBegin2(QuoteNr);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(QuoteNr);
KeySegment(SerNr);
SubsetKeyBegin2(CustDate);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(CustCode);
KeySegment(OrdDate);
KeySegment(SerNr);
/* Not used
SubsetKeyBegin2(ArtCodeSerNr);
StoreInBaseKey;
AppendMatrixFieldToKeyName(ArtCode,0);
KeySegment(Location);
KeySegment(OrdDate);
KeySegment(SerNr);
*/
SubsetKeyBegin2(OKFlag);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(OKFlag);
KeySegment(SerNr);

SubsetKeyBegin2(ActSerNr);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(SerNr);
KeySegment(OSFlag);
SubsetKeyBegin2(ActOrdDate);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(OrdDate);
KeySegment(OSFlag);
KeySegment(SerNr);
SubsetKeyBegin2(ActCustCode);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(CustCode);
KeySegment(OSFlag);
KeySegment(SerNr);
SubsetKeyBegin2(ActName);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(Addr0);
KeySegment(OSFlag);
KeySegment(SerNr);
SubsetKeyBegin2(PlanShipDate);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(PlanShipDate);
KeySegment(SerNr);
KeyBegin(Region);
KeySegment(Region);
KeySegment(SerNr);
SubsetKeyBegin2(GroupOrdNr);
StoreInBaseKey;
AppendListFieldToKeyName(SalesMan);
AppendListFieldToKeyName(SalesGroup);
KeySegment(GroupOrdNr);
KeySegment(SerNr);
KeyBegin(OfficialSerNr);
KeySegment(OfficialSerNr);
KeySegment(SerNr);
/* Not used
SubsetKeyBegin2(GroupOrdRow);
StoreInBaseKey;
AppendMatrixFieldToKeyName(GroupOrdRow,0);
KeySegment(GroupOrdNr);
KeySegment(SerNr);
*/
KeyBegin(RegDate);
KeySegment(RegDate);
KeySegment(RegTime);
KeySegment(SerNr);
KeyBegin(ORCONr);
KeySegment(ORCONr);
KeySegment(SerNr);

SubsetKeyBegin2(ActArtCodeOSFlag);
StoreInBaseKey;
AppendMatrixFieldToKeyName(ArtCode,0);
KeySegment(OSFlag);
KeySegment(SerNr);
EndRecord;


//=============================================== IVVc
RecordBegin(IVVc,-,"IVVc3");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(IVSerBlock);
RecordField(InvDate,M4Date,0,0);
RecordField(CustCode,M4Code,20,CUVc);
RecordField(Math,M4Matrix,0,0);
RecordField(PayDate,M4Date,0,0);
RecordField(Addr0,M4Str,60,0);
RecordField(Addr1,M4Str,60,0);
RecordField(Addr2,M4Str,60,0);
RecordField(Addr3,M4Str,60,0);
RecordField(OurContact,M4Str,20,0);
RecordField(ClientContact,M4Str,60,0);
RecordField(ExportFlag,M4Int,0,0);
RecordField(PayDeal,M4Code,2,0);
RecordField(OrderNr,M4Long,0,0);
RecordField(Prntdf,M4Int,0,0);
RecordField(OKFlag,M4Mark,0,0);
RecordField(pdays,M4Long,0,0);
RecordField(pdvrebt,M4Qty,0,0);
RecordField(pdrdays,M4Long,0,0);
RecordField(CustCat,M4Code,5,0);
RecordField(pdComment,M4Str,60,0);
RecordField(x1,M4Dummy,0,0);
RecordField(InvType,M4Int,0,0); /* 1 = Normal, 2 = Cash, 3 = Credit, 4 = Interest, 5 = Debit Note, 6 = Accounting Period + Net Days 7 = "Dummy" Prepayment Invoice*/
RecordField(xStatFlag,M4Int,0,0);
RecordField(PriceList,M4Code,5,0);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(InclVAT,M4Int,0,0);
RecordField(ARAcc,M4Code,10,AccVc);
RecordField(InvComment,M4Str,200,0);
RecordField(CredInv,M4Long,0,0);
RecordField(CredMark,M4Str,1,0);
RecordField(SalesMan,M4UStr,60,UserVc);
RecordField(ToRateB1,M4Rate,0,0);
RecordField(TransDate,M4Date,0,0);
RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
RecordField(LangCode,M4Code,5,0);
RecordField(UpdStockFlag,M4Int,0,0);
RecordField(LastRemndr,M4Long,0,0);
RecordField(LastRemDate,M4Date,0,0);
RecordField(Sign,M4Code,10,UserVc);
RecordField(FrPrice,M4Val,0,0);
RecordField(FrBase,M4Val,0,0);
RecordField(FrItem,M4Code,20,INVc);
RecordField(FrVATCode,M4Code,10,VATCodeBlock);
RecordField(FrObjects,M4UStr,60,ObjVc);
RecordField(OrgCust,M4Code,20,CUVc);
RecordField(FrGP,M4Val,0,0);
RecordField(FrGPPercent,M4Val,0,0);
RecordField(Sum0,M4Val,0,0);
RecordField(Sum1,M4Val,0,0);
RecordField(Sum2,M4Val,0,0);
RecordField(Sum3,M4Val,0,0);
RecordField(Sum4,M4Val,0,0);
RecordField(VATNr,M4Str,20,0);
RecordField(ShipDeal,M4Code,5,0);
RecordField(ShipAddr0,M4Str,60,0);
RecordField(ShipAddr1,M4Str,60,0);
RecordField(ShipAddr2,M4Str,60,0);
RecordField(ShipAddr3,M4Str,60,0);
RecordField(ShipMode,M4Code,5,0);
RecordField(Location,M4Code,10,LocationVc);
RecordField(PRCode,M4Code,20,PRVc);
RecordField(FrSalesAcc,M4Code,10,AccVc);
RecordField(TAX1Sum,M4Val,0,0);
RecordField(CustVATCode,M4Code,10,VATCodeBlock);
RecordField(RebCode,M4Code,5,0);
RecordField(CalcFinRef,M4Str,30,0);
RecordField(Phone,M4Str,20,0);
RecordField(Fax,M4Str,20,0);
RecordField(IntCode,M4Str,10,0);
RecordField(ARonTR,M4Int,0,0);
RecordField(CustOrdNr,M4Str,60,0);
RecordField(ExportedFlag,M4Int,0,0);
RecordField(BaseSum4,M4Val,0,0);
RecordField(FrRate,M4Rate,0,0);
RecordField(ToRateB2,M4Rate,0,0);
RecordField(BaseRate1,M4Rate,0,0);
RecordField(BaseRate2,M4Rate,0,0);
RecordField(InvoiceNr,M4Str,20,0);
RecordField(DiscPerc,M4Qty,0,0);
RecordField(DiscSum,M4Val,0,0);
RecordField(TotGP,M4Val,0,0);
RecordField(LocOKNr,M4Qty,0,0);
RecordField(Invalid,M4Int,0,0);
FieldIsInvalid(Invalid);
RecordField(CreditCard,M4UStr,20,CreditCardVc);
RecordField(AuthorizationCode,M4UStr,10,0);
RecordField(RecValue,M4Val,0,0);
RecordField(RetValue,M4Val,0,0);
RecordField(FromBUQT,M4Int,0,0);
RecordField(Sorting,M4Str,20,0);
RecordField(NoInterestFlag,M4Int,0,0);
RecordField(NoRemndrFlag,M4Int,0,0);
RecordField(SVONr,M4Long,0,0);
RecordField(InstallmentInv,M4Int,0,0);
RecordField(OfficialSerNr,M4Str,100,0);
RecordField(OfficialSerNr2,M4Str,100,0);
RecordField(TotQty,M4Qty,0,0);
RecordField(TotWeight,M4Qty,0,0);
RecordField(TotVolume,M4Qty,0,0);
RecordField(Commision,M4Val,0,0);
RecordField(SumIncCom,M4Val,0,0);
RecordField(InvAddr3,M4Str,60,0);
RecordField(InvAddr4,M4Str,60,0);
RecordField(DelAddr3,M4Str,60,0);
RecordField(DelAddr4,M4Str,60,0);
RecordField(DelAddrCode,M4Code,20,0);
RecordField(AutoGiro,M4Int,0,0);
RecordField(SalesGroup,M4UStr,30,SalesGroupVc);
RecordField(DisputedFlag,M4Int,0,0);
RecordField(NoColectionFlag,M4Int,0,0);
RecordField(QTNr,M4Long,0,0);
RecordField(FiscalFlag,M4Mark,0,0);
RecordField(JobNr,M4Long,0,0);
RecordField(RetnValue,M4Val,0,0);
RecordField(MachineName,M4Code,20,0);
RecordField(TransTime,M4Time,0,0);
RecordField(DrawerCode,M4Code,5,0);
RecordField(SiteX,M4Code,10,0);
RecordField(colnr,M4Set,46,0);
RecordField(StatVal,M4Val,0,0);
RecordField(EInvFunc,M4Int,0,0);
RecordField(EInvExpFlag,M4Int,0,0);
RecordField(EInvExpDate,M4Date,0,0);
RecordField(EInvExpQty,M4Long,0,0);
RecordField(ServiceDelDate,M4Date,0,0);
RecordField(Region,M4Code,20,RegionVc);
RecordField(RefStr,M4Str,60,0);
RecordField(TAX2Sum,M4Val,0,0);
RecordField(pdvrebt2,M4Qty,0,0);
RecordField(pdrdays2,M4Long,0,0);
RecordField(NoTax1,M4Int,0,0);
RecordField(NoTax2,M4Int,0,0);
RecordField(FreightCode,M4Code,5,0);
RecordField(BankCode,M4Code,10,BankVc);
RecordField(InvalidDate,M4Date,0,0);
RecordField(InvalidLocOKNr,M4Qty,0,0);
RecordField(NoEInvoice,M4Int,0,0);
RecordField(TaxAuthID,M4Str,200,0);
RecordField(TaxAuthIDCC,M4Str,20,0);
RecordField(BranchID,M4Code,20,CUVc);
RecordField(Status,M4Set,361,0);
RecordField(NoTAXonVAT,M4Long,0,0);
RecordField(TotalwoTAX,M4Int,0,0);
RecordField(CredManNr,M4Long,0,0);
RecordField(RegDate,M4Date,0,0);
RecordField(RegTime,M4Time,0,0);
RecordField(COCUSerNr,M4Long,0,0);
//=== 5.4
RecordField(CAE,M4Str,20,0);
RecordField(CAEExpiry,M4Date,0,0);
RecordField(VINr,M4Long,0,0);
RecordField(TerminalID,M4Str,60,0);
RecordField(OrderType,M4Set,433,0);
RecordField(FiscalDeviceSeqNr,M4Long,0,0);
RecordField(CCTransID,M4UStr,50,0);
RecordField(AcceptanceStatus,M4Int,0,0);
RecordField(TaxMatrix,M4PackedMatrix,0,TaxMatrixVc);
RecordField(CustTaxTemplateCode,M4Code,10,TaxTemplateVc);
RecordField(RoyaltyIVFlag,M4Int,0,0);
RecordField(LoyaltyCardNr,M4Code,20,0);
RecordField(LCMLevel,M4Code,10,0);
RecordField(Points,M4Val,0,0);
RecordField(DepCode,M4Code,10,0);
RecordField(SelfBilling,M4Int,0,0);
RecordField(Hash,M4Str,255,0);
RecordField(HashKeyVersion,M4Int,0,0);
RecordField(InvCountry,M4Code,5,0);
RecordField(DelCountry,M4Code,5,0);
RecordField(TREONr,M4Long,0,0);
RecordField(ORCONr,M4Long,0,0);
RecordField(CAEAStartDate,M4Date,0,0);
RecordField(CAEAExpiryDate,M4Date,0,0);
RecordField(CAEAFlag,M4Int,0,0);
RecordField(FInvExpFlag,M4Int,0,0);
RecordField(GroupInv,M4Int,0,0);
RecordField(Suspended,M4Int,0,0);
RecordField(AcceptanceBy,M4List,200,UserVc);
RecordField(RetNr,M4Long,0,0);
RecordField(TaxAdminServSignatureTimeStamp,M4Str,30,0);
RecordField(TaxAdminServCertificateNr,M4Str,20,0);
RecordField(TaxAdminServSeal,M4Str,250,0);
RecordField(CredOfficialSerNr,M4UStr,100,0);
RecordField(AcceptanceFYI,M4List,200,UserVc);
RecordField(PMCode,M4Code,2,0);
RecordField(PayAccNo,M4Str,4,0);
RecordField(BrazilEInvType,M4Code,10,BrazilEInvTypeVc);
RecordField(TaxAdminReceiptNr,M4Str,200,0);
RecordField(TaxAuthReceiptDate,M4Date,0,0);//Why we cannot use EInvExpDate from above ?
RecordField(TaxAuthReceiptTime,M4Time,0,0);
RecordField(ReceiptInfo,M4Str,200,0);
RecordField(InvalidTime,M4Time,0,0);
RecordField(OKBy,M4Code,10,UserVc);
RecordField(PlanSendDate,M4Date,0,0);
RecordField(PlanSendTime,M4Time,0,0);
RecordField(PlanArrDate,M4Date,0,0);
RecordField(PlanArrTime,M4Time,0,0);
RecordField(FedServCode,M4Code,10,FedServVc);
RecordField(InvalidBy,M4Code,10,UserVc);
RecordField(Reason,M4Code,20,0);
RecordField(InvCountryName,M4Str,100,0);
RecordField(DelCountryName,M4Str,100,0);
RecordField(OfficialSerNrSerie,M4Str,30,0);
RecordField(OfficialSerNr2Serie,M4Str,30,0);
RecordField(IPBookVAT,M4Int,0,0);
RecordField(ThirdPartyBillMark,M4Int,0,0);
RecordField(RecipientGLN,M4Str,20,0);
RecordField(DelRecipientGLN,M4Str,20,0);
RecordField(IntrastatTransCode,M4Code,20,0);
RecordField(GlobalTransportNr,M4UStr,30,0);
RecordField(GlobalTransportDate,M4Date,0,0);
//=== 7.2
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogSaveTime,M4Time,0,0);
RecordField(LogOKDate,M4Date,0,0);
RecordField(LogOKUser,M4UStr,20,0);
RecordField(LogOKTime,M4Time,0,0);
RecordField(LogAnnulDate,M4Date,0,0);
RecordField(LogAnnulUser,M4UStr,20,0);
RecordField(LogAnnulTime,M4Time,0,0);
RecordField(PrintMan, M4Code, 20, 0);
RecordField(PrintDay, M4Date, 0, 0);
RecordField(PostMan, M4Code, 20, 0);
RecordField(PostDay, M4Date, 0, 0);
RecordField(RetMan, M4Code, 20, 0);
RecordField(RetDay, M4Date, 0, 0);
RecordField(ArchMan, M4Code, 20, 0);
RecordField(ArchDay, M4Date, 0, 0);
RecordField(Ball, M4Int, 0, 0);
RecordField(DateFromStock, M4Date, 0, 0);
RecordField(Num1C, M4Str, 60, 0);
RecordField(ExportDone, M4Mark, 0, 0);
RecordField(PlanDeliveryDate,M4Date,0,0); //13.01.12 INAU
RecordField(PlanDeliveryTime,M4Time,0,0); //13.01.12 INAU
RecordField(Pickup,M4Mark,0,0); //10.10.12 TGOR
RecordField(TTNr,M4Long,0,0); //13.11.12 INAU - ссылка на TTVc
RecordField(PlanPayDate,M4Date,0,0);  //14.06.13 INAU - Договорной срок оплаты
RecordField(PlanPayUser,M4Code,20,0); //14.06.13 INAU - Кем изменен Договорной срок оплаты
RecordField(AlienCurncy, M4Code, 5, 0); //22.04.14 INAU - Валюта для печатной формы
RecordField(AlienToRateB1, M4Rate, 0, 0);
//RecordField(AlienSum, M4Val, 0, 0);
//
ArrayBegin(Math,-,1);
ArrayField(stp,M4Int,0,0);
ArrayField(ArtCode,M4Code,20,INVc); //?? M4Str in interest rowtype??
ArrayField(Quant,M4UVal,0,0);
ArrayField(Price,M423Val,0,0);
ArrayField(Sum,M4Val,0,0);
ArrayField(vRebate,M41Val,0,0);
ArrayField(SalesAcc,M4Code,10,AccVc);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(OrdRow,M4Long,0,0);
ArrayField(BasePrice,M4Val,0,0);
ArrayField(rowGP,M4Val,0,0);
ArrayField(FIFO,M45Val,0,0);
ArrayField(Spec,M4Str,100,0);
ArrayField(VATCode,M4Code,10,VATCodeBlock);
ArrayField(Recepy,M4Code,20,RecVc);
ArrayField(SerialNr,M4Str,30,0);
ArrayField(PriceFactor,M45Val,0,0);
ArrayField(VARList,M4UStr,30,0);
ArrayField(CUPNr,M4Long,0,0);
ArrayField(FIFORowVal,M45Val,0,0);
ArrayField(Coefficient,M45Val,0,0);
ArrayField(CuAccCode,M4Code,20,0);
ArrayField(ExciseNr,M4Str,20,0); // This is ShipDate!?!
ArrayField(PeriodCode,M4Code,10,0);
ArrayField(UnitCode,M4Code,5,0);
ArrayField(UnitFactQuant,M4UVal,0,0);
ArrayField(UnitFactPrice,M423Val,0,0);
ArrayField(UnitXval,M4UVal,0,0);
ArrayField(UnitYval,M4UVal,0,0);
ArrayField(UnitZval,M4UVal,0,0);
ArrayField(VECode,M4Code,20,VEVc);
ArrayField(CreditCard,M4UStr,20,CreditCardVc);
ArrayField(AuthorizationCode,M4UStr,10,0);
ArrayField(PosCode,M4Code,20,0);
ArrayField(CurncyCode,M4Code,5,CurncyCodeVc);
ArrayField(FrRate,M4Rate,0,0);
ArrayField(ToRateB1,M4Rate,0,0);
ArrayField(ToRateB2,M4Rate,0,0);
ArrayField(BaseRate1,M4Rate,0,0);
ArrayField(BaseRate2,M4Rate,0,0);
ArrayField(PayMode,M4Code,2,0);
ArrayField(GCNr,M4Long,0,0);
ArrayField(CustOrdNr,M4Str,60,0);
ArrayField(RepaExVAT,M4Val,0,0);
ArrayField(BasePriceB2,M4Val,0,0);
ArrayField(TAX2Code,M4Code,5,0);
ArrayField(TAX2Prc,M423Val,0,0);
ArrayField(TAX2Reb,M4Val,0,0);
ArrayField(TAX1Reb,M4Val,0,0);
ArrayField(TAX2Acc,M4Code,10,AccVc);
ArrayField(CreditedRow,M4Long,0,0);
ArrayField(NotUpdStockFlag,M4Int,0,0);
ArrayField(CUServiceHistNr,M4Long,0,0);
ArrayField(CUServiceUntilDate,M4Date,0,0);
ArrayField(ServiceDelDate,M4Date,0,0);
ArrayField(Location,M4Code,10,LocationVc);
ArrayField(Comment,M4Str,100,0);
//=== 5.4
ArrayField(DiscApprovedBy,M4Code,10,UserVc);
ArrayField(Perceptions,M4Int,0,0);
ArrayField(VoidedRowNr,M4Long,0,0);
ArrayField(VoidedSign,M4Code,10,UserVc);
ArrayField(ovst,M4Int,0,0);
ArrayField(Withholdings,M4Int,0,0);
ArrayField(WHTax,M4Code,2,0);
ArrayField(CCTransID,M4UStr,50,0);
ArrayField(TaxMatrix,M4PackedMatrix,0,TaxMatrixVc);
ArrayField(TaxTemplateCode,M4UStr,60,TaxTemplateVc);
ArrayField(ResUsage,M4Code,10,ResUsageVc);
ArrayField(MBRCode,M4Code,10,MultiBuyRebVc);
ArrayField(ChequeNr,M4Long,0,0);
ArrayField(CheckNr,M4UStr,20,0);
ArrayField(Points,M4Val,0,0);
ArrayField(SalesAssistant,M4Code,10,UserVc);
ArrayField(CCTimestamp,M4Str,20,0);
ArrayField(MotherArtCode,M4Code,20,INVc);
ArrayField(RecipeQuant,M4Qty,0,0);
ArrayField(OrdNr,M4Long,0,0);
ArrayField(IVNr,M4Long,0,0);
ArrayField(RetRow,M4Long,0,0);
ArrayField(QTRow,M4Long,0,0);
ArrayField(SHNr,M4Long,0,0);
ArrayField(SHRow,M4Long,0,0);
ArrayField(CustArtCode,M4Code,20,CUINVc);
ArrayField(Salesmen,M4UStr,60,UserVc);
ArrayField(CredOfficialSerNr,M4Str,100,0);
ArrayField(MotherNr,M4Str,60,0);
ArrayField(AEStatus,M4Set,544,0);
ArrayField(CustomsNr,M4Str,30,0);
ArrayField(CountryOfOrg,M4Code,5,CountryVc);
ArrayField(SecondarySerialNr,M4Str,30,0);
ArrayField(AlternateDeviceID,M4Str,30,0);
ArrayField(MotherSecondarySerialNr,M4Str,30,0);
ArrayField(MotherAlternateDeviceID,M4Str,30,0);
ArrayField(UnitComment,M4Str,200,0);
//=== 7.2
ArrayField(BallRow, M4Int, 0, 0);
ArrayField(BallSum, M4Int, 0, 0);
ArrayField(Barcoderw, M4Str, 13, 0);
EndArray;
//
MainKeyBegin(SerNr,1);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(SerNr);
SynchronizationIndex;

SubsetKeyBegin2(ExportedFlag);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(ExportedFlag);
KeySegment(SerNr);

SubsetKeyBegin2(CustCode);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(CustCode);
KeySegment(SerNr);

SubsetKeyBegin2(OKFlag);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(OKFlag);
KeySegment(SerNr);

SubsetKeyBegin2(InvDate);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(InvDate);
KeySegment(SerNr);

SubsetKeyBegin2(CredInv);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(CredInv);
KeySegment(SerNr);

SubsetKeyBegin2(Name);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(Addr0);
KeySegment(SerNr);

SubsetKeyBegin2(TransDate);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(TransDate);
KeySegment(SerNr);
// Does all of these indexes really need to be SubsetKeys??????
SubsetKeyBegin2(Sum4);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(Sum4);
KeySegment(SerNr);
SubsetKeyBegin2(OrderNr);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(OrderNr);
KeySegment(SerNr);
SubsetKeyBegin2(RefStr);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(CalcFinRef);
KeySegment(SerNr);
SubsetKeyBegin2(SalesMan);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(SalesMan);
KeySegment(InvDate);
KeySegment(SerNr);
SubsetKeyBegin2(Location);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(Location);
KeySegment(InvDate);
KeySegment(SerNr);
KeyBegin(LocOK);
KeySegment(Location);
KeySegment(OKFlag);
KeySegment(UpdStockFlag);
KeySegment(TransDate);
KeySegment(SerNr);
SubsetKeyBegin2(Sorting);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(Sorting);
KeySegment(SerNr);
SubsetKeyBegin2(SVONr);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(SVONr);
KeySegment(SerNr);
SubsetKeyBegin2(JobNr);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(JobNr);
KeySegment(SerNr);
SubsetKeyBegin2(PRCode);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(PRCode);
KeySegment(SerNr);
SubsetKeyBegin2(DelAddrCode);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(DelAddrCode);
KeySegment(SerNr);
KeyBegin(DisputedFlag);
KeySegment(DisputedFlag);
KeySegment(SerNr);
KeyBegin(OfficialSerNr);
KeySegment(OfficialSerNr);
KeySegment(SerNr);
KeyBegin(InvType);
KeySegment(InvType);
KeySegment(SerNr);
KeyBegin(FiscalFlag);
KeySegment(FiscalFlag);
KeySegment(SerNr);
KeyBegin(CustDate);
KeySegment(CustCode);
KeySegment(InvDate);
KeySegment(SerNr);
KeyBegin(OKFlagPayDate);
KeySegment(OKFlag);
KeySegment(PayDate);
KeySegment(SerNr);
SubsetKeyBegin2(OKFlagSalesMan);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(OKFlag);
KeySegment(SalesMan);
KeySegment(SerNr);
KeyBegin(Cashup);
KeySegment(MachineName);
KeySegment(DrawerCode);
KeySegment(TransDate);
KeySegment(TransTime);
KeySegment(SerNr);
KeyBegin(EInvToExport);
KeySegment(OKFlag);
KeySegment(EInvFunc);
KeySegment(EInvExpFlag);
KeySegment(SerNr);

KeyBegin(OfficialSerNrDate);
KeySegment(OfficialSerNr);
KeySegment(InvDate);
KeySegment(SerNr);

KeyBegin(TransDateCust);
KeySegment(TransDate);
KeySegment(CustCode);
KeySegment(SerNr);
/* Not used
SubsetKeyBegin2(ArtCodeLoc);
StoreInBaseKey;
AppendMatrixFieldToKeyName(ArtCode,0);
KeySegment(Location);
KeySegment(SerNr);
KeyBegin(Region);
KeySegment(Region);
KeySegment(SerNr);
*/
KeyBegin(OKFlagTransDate);
KeySegment(OKFlag);
KeySegment(UpdStockFlag);
KeySegment(TransDate);
KeySegment(SerNr);

KeyBegin(TransDateOffSerNr); // Only used in Arg. VAT Sales Report....
KeySegment(TransDate);
KeySegment(OfficialSerNr);
KeySegment(SerNr);
/* Incorrect index. Only add AppendMatrix if you KNOW that it will help basically everyone, or if it will make it possible to remove a support register
SubSetKeyBegin2(Object);
AppendListFieldToKeyName(Objects);
AppendMatrixFieldToKeyName(Objects,0);
KeySegment(CustCode);
KeySegment(SerNr);
*/

KeyBegin(CustOKFlag); // Made it, then didn't need it, but found another place to use it, so I kept it :)
KeySegment(OKFlag);
KeySegment(CustCode);
KeySegment(SerNr);
KeyBegin(TerminalID);
KeySegment(TerminalID);
KeySegment(FiscalDeviceSeqNr);
KeySegment(SerNr);
KeyBegin(RegDate);
KeySegment(RegDate);
KeySegment(RegTime);
KeySegment(SerNr);
KeyBegin(MachineName);
KeySegment(MachineName);
KeySegment(TransDate);
KeySegment(TransTime);
KeySegment(SerNr);

SubSetKeyBegin2(MBRCode);
AppendMatrixFieldToKeyName(MBRCode,0);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(PriceList);
KeySegment(PriceList);
KeySegment(TransDate);
KeySegment(SerNr);

SubSetKeyBegin2(OpenSerNr);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(SerNr);
SubSetKeyBegin2(OpenInvDate);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(InvDate);
KeySegment(SerNr);
SubSetKeyBegin2(OpenCustCode);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(CustCode);
KeySegment(SerNr);
SubSetKeyBegin2(OpenName);
StoreInBaseKey;
AppendListFieldToKeyName(SalesGroup);
AppendListFieldToKeyName(SalesMan);
KeySegment(Addr0);
KeySegment(SerNr);

KeyBegin(RetNr);
KeySegment(RetNr);
KeySegment(SerNr);

KeyBegin(OpenOfficialSerNr2);
KeySegment(OfficialSerNr2);
KeySegment(SerNr);
KeyBegin(Prntdf);
KeySegment(Prntdf);
KeySegment(SerNr);

KeyBegin(ServiceDelDate);
KeySegment(ServiceDelDate);
KeySegment(SerNr);

//31.03.14 INAU
KeyBegin(TTNr);
KeySegment(TTNr);
KeySegment(SerNr);
//===

EndRecord;


//=============================================== SHVc
RecordBegin(SHVc,-,"ship1");
ImpExpLevel(3);
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(SHSerBlock);
RecordField(OrderNr,M4Long,0,ORVc);
RecordField(ShipDate,M4Date,0,0);
FieldIsTransDate(ShipDate);
RecordField(CustCode,M4Code,20,CUVc);
RecordField(Addr0,M4Str,60,0);
RecordField(Addr1,M4Str,60,0);
RecordField(Addr2,M4Str,60,0);
RecordField(Addr3,M4Str,60,0);
RecordField(Prntdf,M4Int,0,0);
RecordField(x1,M4Dummy,0,0);
RecordField(ShipMode,M4Code,5,0);
RecordField(OKFlag,M4Mark,0,0);
RecordField(Location,M4Code,10,LocationVc);
FieldIsLocation(Location);
RecordField(LangCode,M4Code,5,0);
RecordField(PRCode,M4Code,20,PRVc);
RecordField(Packages,M4Qty,0,0);
RecordField(Weight,M4Qty,0,0);
RecordField(Volyme,M4Qty,0,0);
RecordField(FromCity,M4Str,60,0);
RecordField(ToCity,M4Str,60,0);
RecordField(FromDock,M4Str,60,0);
RecordField(ToDock,M4Str,60,0);
RecordField(TransportDirect,M4Str,60,0);
RecordField(Comment,M4Str,60,0);
RecordField(Check1,M4Int,0,0);
RecordField(Check2,M4Int,0,0);
RecordField(TransportNumber,M4Str,20,0);
RecordField(ExportedFlag,M4Int,0,0);
RecordField(Math,M4Matrix,0,0);
RecordField(TotQty,M4Qty,0,0);
RecordField(LocOKNr,M4Qty,0,0);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(FreightCode,M4Code,5,0);
RecordField(FreightCompany,M4Str,60,0);
RecordField(FreightCompanyRegNr,M4Str,60,0);
RecordField(TruckInfo,M4Str,60,0);
RecordField(Driver,M4Str,60,0);
RecordField(CMRText,M4Str,60,0);
RecordField(TotWeight,M4Qty,0,0);
RecordField(TotVolume,M4Qty,0,0);
RecordField(SHClass,M4Code,10,0);
RecordField(DelAddr3,M4Str,60,0);
RecordField(DelAddr4,M4Str,60,0);
RecordField(DelAddrCode,M4Code,20,0);
RecordField(Sorting,M4Str,20,0);
RecordField(TAX1Sum,M4Val,0,0);
RecordField(DeliveryMan,M4Code,10,UserVc);
RecordField(Sign,M4Code,10,UserVc);
RecordField(xForkLifyQueUse,M4Int,0,0);
RecordField(TotPalletNr,M4UVal,0,0);
RecordField(Region,M4Code,20,RegionVc);
RecordField(TAX2Sum,M4Val,0,0);
RecordField(Invalid,M4Int,0,0);
FieldIsInvalid(Invalid);
RecordField(InvalidDate,M4Date,0,0);
RecordField(InvoiceNr,M4Long,0,0);
//=== 5.4
RecordField(EShipmentCreated,M4Mark,0,0);
RecordField(EShipCollected,M4Mark,0,0);
RecordField(EShipStatus,M4Str,200,0);
RecordField(DeclaredVal,M4Val,0,0);
RecordField(CurncyCode,M4Code,5,0);
RecordField(TerminalID,M4Str,60,0);
RecordField(BranchID,M4Code,20,CUVc);
RecordField(OfficialSerNr,M4Str,100,0);
RecordField(Hash,M4Str,255,0);
RecordField(HashKeyVersion,M4Int,0,0);
RecordField(RegDate,M4Date,0,0);
RecordField(RegTime,M4Time,0,0);
RecordField(LocalMachineCode,M4Code,20,0);
RecordField(DelCountry,M4Code,5,0);
RecordField(TREONr,M4Long,0,0);
RecordField(ORCOType,M4Str,200,0);
RecordField(PlanSendDate,M4Date,0,0);
RecordField(PlanSendTime,M4Time,0,0);
RecordField(PlanArrDate,M4Date,0,0);
RecordField(PlanArrTime,M4Time,0,0);
RecordField(TaxAdminServSeal,M4Str,200,0);
RecordField(OKBy,M4Code,10,UserVc);
RecordField(DelCountryName,M4Str,100,0);
RecordField(Status,M4Set,361,0);
RecordField(OfficialSerNrSerie,M4Str,100,0);
RecordField(OfficialSerNr2,M4Str,100,0);
RecordField(OfficialSerNr2Serie,M4Str,30,0);
//=== 7.2
//Добавлено 25.11.09 INAU
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogSaveTime,M4Time,0,0);
RecordField(LogOKDate,M4Date,0,0);
RecordField(LogOKUser,M4UStr,20,0);
RecordField(LogOKTime,M4Time,0,0);
RecordField(IName, M4Str, 60, 0); //By Delphi ItemName
RecordField(Gather, M4Code, 20, UserVc); //By Delphi кладовщик
RecordField(LogPrintDate,M4Date,0,0); //11.12.09 INAU
RecordField(LogPrintUser,M4UStr,20,0); //11.12.09 INAU
RecordField(LogPrintTime,M4Time,0,0); //11.12.09 INAU
RecordField(Prim, M4Str, 200, 0); //27.02.13 TGOR    Примечание
RecordField(Barcode, M4UStr, 13, 0); //16.09.14 INAU
//
ArrayBegin(Math,-,1);
ArrayField(OrdRow,M4Long,0,0);
ArrayField(ArtCode,M4Code,20,INVc);
ArrayField(Ordered,M4UVal,0,0);
ArrayField(InStock,M4UVal,0,0);
ArrayField(Ship,M4UVal,0,0);
ArrayField(Spec,M4Str,100,0);
ArrayField(SerialNr,M4Str,30,0);
ArrayField(FIFO,M45Val,0,0);
ArrayField(Location,M4Code,10,LocationVc);
ArrayField(Recepy,M4Code,20,RecVc);
ArrayField(VARList,M4UStr,30,VARVc);
ArrayField(BestBefore,M4Date,0,0);
ArrayField(FIFORowVal,M45Val,0,0);
ArrayField(Coefficient,M45Val,0,0);
ArrayField(BasePrice,M423Val,0,0);
ArrayField(Source,M4Code,10,SourceVc);
ArrayField(DespatchRowDate,M4Date,0,0);
ArrayField(DespatchRowTime,M4Str,20,0);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(RowPackages,M4UVal,0,0);
ArrayField(PackageType,M4Code,5,0);
ArrayField(PackageDesc,M4Str,60,0);
ArrayField(ExciseNr,M4Str,20,0);
ArrayField(UnitXval,M4UVal,0,0);
ArrayField(UnitYval,M4UVal,0,0);
ArrayField(UnitZval,M4UVal,0,0);
ArrayField(MeasWeight,M423Val,0,0);
ArrayField(PosCode,M4Code,20,0);
ArrayField(xCoefficient,M4Dummy,0,0);
ArrayField(CostAcc,M4Code,10,AccVc);
ArrayField(WAB2,M45Val,0,0);
ArrayField(TAX2Code,M4Code,5,0);
ArrayField(TAX2Prc,M423Val,0,0);
ArrayField(TAX2Reb,M4Val,0,0);
ArrayField(TAX1Reb,M4Val,0,0);
ArrayField(TAX2Acc,M4Code,10,AccVc);
ArrayField(BBCostPrice,M423Val,0,0);
//=== 5.4
ArrayField(SalesAcc,M4Code,10,AccVc);
ArrayField(stp,M4Int,0,0);
ArrayField(MotherArtCode,M4Code,20,INVc);
ArrayField(RecipeQuant,M4Qty,0,0);
ArrayField(Invd,M4Qty,0,0);
ArrayField(CustArtCode,M4Code,20,CUINVc);
ArrayField(UnitCode,M4Code,10,UnitVc);
ArrayField(UnitComment,M4Str,200,0);
//=== 7.2
ArrayField(Barcoderw, M4Str, 13, 0);
EndArray;
//
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(ExportedFlag);
KeySegment(ExportedFlag);
KeySegment(SerNr);
KeyBegin(OrderKey);
KeySegment(OrderNr);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(CustCode);
KeySegment(CustCode);
KeySegment(SerNr);
KeyBegin(ShipDate);
KeySegment(ShipDate);
KeySegment(SerNr);
KeyBegin(CustName);
KeySegment(Addr0);
KeySegment(CustCode);
KeySegment(SerNr);
KeyBegin(TransportNumber);
KeySegment(TransportNumber);
KeySegment(SerNr);
KeyBegin(ShipMode);
KeySegment(ShipMode);
KeySegment(SerNr);
KeyBegin(LocOK);
KeySegment(Location);
KeySegment(OKFlag);
KeySegment(ShipDate);
KeySegment(SerNr);
KeyBegin(DelAddrCode);
KeySegment(DelAddrCode);
KeySegment(SerNr);
KeyBegin(Sorting);
KeySegment(Sorting);
KeySegment(SerNr);
KeyBegin(DeliveryMan);
KeySegment(DeliveryMan);
KeySegment(Prntdf);
KeySegment(Sorting);
KeySegment(SerNr);
KeyBegin(PrntdfSort);
KeySegment(Prntdf);
KeySegment(Sorting);
KeySegment(SerNr);
KeyBegin(Prntdf);
KeySegment(Prntdf);
KeySegment(SerNr);
KeyBegin(Region);
KeySegment(Region);
KeySegment(SerNr);
KeyBegin(OKFlagShipDate);
KeySegment(OKFlag);
KeySegment(ShipDate);
KeySegment(SerNr);
KeyBegin(InvoiceNr);
KeySegment(InvoiceNr);
KeySegment(SerNr);
KeyBegin(SortingDate);
KeySegment(Sorting);
KeySegment(ShipDate);
KeySegment(SerNr);
KeyBegin(OfficialSerNr);
KeySegment(OfficialSerNr);
KeySegment(SerNr);
KeyBegin(RegDate);
KeySegment(RegDate);
KeySegment(RegTime);
KeySegment(SerNr);
KeyBegin(PlanSendDate);
KeySegment(PlanSendDate);
KeySegment(SerNr);
KeyBegin(CustDate);
KeySegment(CustCode);
KeySegment(ShipDate);
KeySegment(SerNr);
KeyBegin(OpenOfficialSerNr2);
KeySegment(OfficialSerNr2);
KeySegment(SerNr);
EndRecord;


//=============================================== RetVc
RecordBegin(RetVc,-,"");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(RetSerBlock);
RecordField(RegDate,M4Date,0,0);
RecordField(TransDate,M4Date,0,0);
FieldIsTransDate(TransDate);
RecordField(Comment,M4Str,60,0);
RecordField(Math,M4Matrix,0,0);
RecordField(CustCode,M4Code,20,CUVc);
RecordField(CustName,M4Str,60,0);
RecordField(OrdNr,M4Long,0,0);
RecordField(Location,M4Code,10,LocationVc);
FieldIsLocation(Location);
RecordField(OKFlag,M4Mark,0,0);
RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
RecordField(ToRateB1,M4Rate,0,0);
RecordField(InclVAT,M4Int,0,0);
RecordField(SumQuant,M4Qty,0,0);
RecordField(ExtraCost,M4Val,0,0);
RecordField(FrRate,M4Rate,0,0);
RecordField(ToRateB2,M4Rate,0,0);
RecordField(BaseRate1,M4Rate,0,0);
RecordField(BaseRate2,M4Rate,0,0);
RecordField(UpdStockFlag,M4Int,0,0);
RecordField(Type,M4Int,0,0);
RecordField(LocOKNr,M4Qty,0,0);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(Sum4,M4Val,0,0);
RecordField(SHNr,M4Long,0,0);
RecordField(Reason,M4Code,20,0);
RecordField(Invalid,M4Int,0,0);
FieldIsInvalid(Invalid);
RecordField(InvalidDate,M4Date,0,0);
RecordField(InvoiceNr,M4Long,0,0);
//=== 5.4
RecordField(TerminalID,M4Str,60,0);
RecordField(BranchID,M4Code,20,CUVc);
RecordField(OfficialSerNr,M4Str,100,0);
RecordField(Hash,M4Str,255,0);
RecordField(HashKeyVersion,M4Int,0,0);
RecordField(RegTime,M4Time,0,0);
RecordField(LocalMachineCode,M4Code,20,0);
RecordField(WSNr,M4Long,0,0);
RecordField(SVONr,M4Long,0,0);
RecordField(Closed,M4Mark,0,0);
RecordField(EMCode,M4Code,10,UserVc);
RecordField(LangCode,M4Code,5,0);
RecordField(Sign,M4Code,10,UserVc);
RecordField(OKBy,M4Code,10,UserVc);
RecordField(Status,M4Set,361,0);
RecordField(OfficialSerNrSerie,M4Str,30,0);
RecordField(OfficialSerNr2,M4Str,100,0);
RecordField(OfficialSerNr2Serie,M4Str,30,0);
//=== 7.4
RecordField(Barcode, M4UStr, 13, 0); //By Delphi barcode
RecordField(BQuant, M4Qty, 0, 0);//By Delphi quantity
RecordField(AddIt, M4Mark, 0, 0);//By Delphi add|not add
RecordField(LogNewDate,M4Date,0,0);  //25.11.09 by INAU
RecordField(LogNewUser,M4UStr,20,0); //25.11.09 by INAU
RecordField(LogNewTime,M4Time,0,0);  //25.11.09 by INAU
RecordField(LogSaveDate,M4Date,0,0); //25.11.09 by INAU
RecordField(LogSaveUser,M4UStr,20,0);//25.11.09 by INAU
RecordField(LogSaveTime,M4Time,0,0); //25.11.09 by INAU
RecordField(LogOKDate,M4Date,0,0);   //25.11.09 by INAU
RecordField(LogOKUser,M4UStr,20,0);  //25.11.09 by INAU
RecordField(LogOKTime,M4Time,0,0);   //25.11.09 by INAU
RecordField(IName, M4Str, 60, 0); //By Delphi ItemName
RecordField(Gather, M4Code, 20, UserVc); //By Delphi кладовщик
RecordField(IRetOrdNr,M4Long,0,0); //13.02.11 INAU IRetOrdVc link
//
ArrayBegin(Math,-,1);
ArrayField(ArtCode,M4Code,20,INVc);
ArrayField(Quant,M4UVal,0,0);
ArrayField(Spec,M4Str,100,0);
ArrayField(UPrice,M45Val,0,0);
ArrayField(SerialNr,M4Str,30,0);
ArrayField(OrdRow,M4Long,0,0);
ArrayField(Extra,M4PrcStr,20,0);
ArrayField(CostPrice,M45Val,0,0);
ArrayField(VARList,M4UStr,30,0);
ArrayField(BestBefore,M4Date,0,0);
ArrayField(Recepy,M4Code,20,RecVc);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(BatchStatus,M4Code,5,BatchStatusVc);
ArrayField(UnitXval,M4UVal,0,0);
ArrayField(UnitYval,M4UVal,0,0);
ArrayField(UnitZval,M4UVal,0,0);
ArrayField(BasePrice,M423Val,0,0);
ArrayField(PosCode,M4Code,20,0);//??, do we want to do it?
ArrayField(Coefficient,M45Val,0,0);
ArrayField(SHRow,M4Long,0,0);
ArrayField(Location,M4Code,10,LocationVc);
ArrayField(BBCostPrice,M423Val,0,0);
//=== 5.4
ArrayField(CostAcc,M4Code,10,AccVc);
ArrayField(Invd,M4UVal,0,0);
ArrayField(WSRow,M4Long,0,0);
ArrayField(SVORow,M4Long,0,0);
ArrayField(WSNr,M4Long,0,0);
ArrayField(WSIVType,M4Set,31,0);
ArrayField(MotherNr,M4Str,30,0);
//
EndArray;
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(TransDate);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(OrdNr);
KeySegment(OrdNr);
KeySegment(SerNr);
KeyBegin(CustCode);
KeySegment(CustCode);
KeySegment(SerNr);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(SerNr);
KeyBegin(LocOK);
KeySegment(Location);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(SHNr);
KeySegment(SHNr);
KeySegment(SerNr);
KeyBegin(OKFlagTransDate);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(CustCodeTransDate);
KeySegment(CustCode);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(InvoiceNr);
KeySegment(InvoiceNr);
KeySegment(SerNr);
KeyBegin(OfficialSerNr);
KeySegment(OfficialSerNr);
KeySegment(SerNr);
KeyBegin(RegDate);
KeySegment(RegDate);
KeySegment(RegTime);
KeySegment(SerNr);
KeyBegin(WSNr);
KeySegment(WSNr);
KeySegment(SerNr);
KeyBegin(SVONr);
KeySegment(SVONr);
KeySegment(SerNr);
KeyBegin(Closed);
KeySegment(Closed);
KeySegment(SerNr);
KeyBegin(OpenOfficialSerNr2);
KeySegment(OfficialSerNr2);
KeySegment(SerNr);
EndRecord;


//=============================================== INVc
RecordBegin(INVc,-,"artikel5");
ImpExpLevel(1);
NewAutosyncRegister(kSyncDirectionToClient,true);
RecordField(Code,M4Code,20,INVc);
RecordField(Name,M4Str,100,0);
RecordField(Unittext,M4Str,10,0);
RecordField(MinLevel,M4Qty,0,0);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(SalesAcc,M4Code,10,AccVc);
RecordField(UPrice1,M423Val,0,0);
RecordField(ItemType,M4Int,0,0);
RecordField(Group,M4Code,5,ITVc);
RecordField(x1,M4Dummy,0,0);
RecordField(x2,M4Dummy,0,0);
RecordField(InPrice,M45Val,0,0);
RecordField(InvCode,M4Code,10,0);
RecordField(ExtraCost,M4Val,0,0);
RecordField(SerNrf,M4Int,0,0);
RecordField(Department,M4Code,10,0);
RecordField(Weight,M45Val,0,0);
RecordField(Volume,M45Val,0,0);
RecordField(EUCodex,M4Code,20,0);
RecordField(InCurncyCode,M4Code,5,CurncyCodeVc);
RecordField(Bonus,M4Qty,0,0);
RecordField(Recepy,M4Code,20,RecVc);
RecordField(Markup,M4Qty,0,0);
RecordField(x3,M4Dummy,0,0);
RecordField(BarCode,M4Code,20,0);
RecordField(UpdateCost,M4Int,0,0);
RecordField(LastPriceChange,M4Date,0,0);
RecordField(CalcPrice,M4Code,5,0);
RecordField(VATCode,M4Code,10,VATCodeBlock);
RecordField(PriceFactor,M45Val,0,0);
RecordField(Terminated,M4Int,0,0);
RecordField(AvgMarkup,M4Val,0,0);
RecordField(LastPurchPrice,M45Val,0,0); /* this has always been LastPurchCost */
RecordField(LastPurchCurncyCode,M4Code,5,CurncyCodeVc);
RecordField(WeighedAvPrice,M45Val,0,0);  /* Changed to M45Val, not a database change */
RecordField(Conversion1,M45Val,0,0);
RecordField(Conversion2,M45Val,0,0);
RecordField(WarrantyLength,M4Qty,0,0);
RecordField(Math,M4Matrix,0,0);
RecordField(InvRecepy,M4Code,20,RecVc);
RecordField(EUSalesAcc,M4Code,10,AccVc);
RecordField(ExpSalesAcc,M4Code,10,AccVc);
RecordField(VATCodeEU,M4Code,10,VATCodeBlock);
RecordField(VATCodeExp,M4Code,10,VATCodeBlock);
RecordField(ChangePrice,M4Int,0,0);
RecordField(RebCode,M4Code,5,0);
RecordField(ExplodeRec,M4Int,0,0);
RecordField(Unittext2,M4Str,10,0);
RecordField(UnitCoefficient,M45Val,0,0);
RecordField(WarnText1,M4Str,255,0);
RecordField(VARList,M4UStr,30,0);
RecordField(ItemMaterial,M4Int,0,0);
RecordField(AlcPrc,M4UVal,0,0);
RecordField(DefaultSource,M4Code,10,0);
RecordField(AlternativeCode,M4Str,40,0);
RecordField(CostAcc,M4Code,10,AccVc); /* Why was this 20 size */
RecordField(DefLocation,M4Code,10,LocationVc);
RecordField(LastBasePriceChange,M4Date,0,0);
RecordField(MaxLevel,M4Qty,0,0);
RecordField(LastPurchPrice2,M45Val,0,0);/* This is LastPurchPrice, not incl. the extra costs */
RecordField(Width,M4UVal,0,0);
RecordField(Height,M4UVal,0,0);
RecordField(Depth,M4UVal,0,0);
RecordField(ContractItem,M4Code,20,INVc);
RecordField(Internal,M4Int,0,0);
RecordField(InclItemFreight,M4Int,0,0);
RecordField(FixedFreight,M4Val,0,0);
RecordField(DispGroups,M4UStr,200,DIVc);
RecordField(HazLevCode,M4Code,5,HazLevVc);
RecordField(Density,M45Val,0,0);
RecordField(xClassification,M4UStr,200,0);
RecordField(CredSalesAcc,M4Code,10,AccVc);
RecordField(CredEUSalesAcc,M4Code,10,AccVc);
RecordField(CredExpSalesAcc,M4Code,10,AccVc);
RecordField(CredVATCode,M4Code,10,VATCodeBlock);
RecordField(CredVATCodeEU,M4Code,10,VATCodeBlock);
RecordField(CredVATCodeExp,M4Code,10,VATCodeBlock);
RecordField(RentalItem,M4Code,20,INVc);
RecordField(CompUsage,M4Code,10,AccVc);
RecordField(colnr,M4Set,46,0);
RecordField(VARMask,M4UStr,60,0);
RecordField(VARRepOrder,M4UStr,60,0);
RecordField(VARSubsets,M4UStr,200,0);
RecordField(LocArea,M4Code,20,0);
RecordField(EKNCode,M4Code,20,0);
RecordField(DefPalletItem,M4Code,20,INVc);
RecordField(QtyonPallet,M4UVal,0,0);
RecordField(PalletWidth,M4UVal,0,0);
RecordField(PalletHeight,M4UVal,0,0);
RecordField(PalletDepth,M4UVal,0,0);
RecordField(Brand,M4Str,60,0);
RecordField(BrandType,M4Str,60,0);
RecordField(PickArea,M4Code,20,0);
RecordField(SWWCode,M4Str,60,0);
RecordField(RepaPricePerWeight,M4Val,0,0);
RecordField(PalletsInPickArea,M4UVal,0,0);
RecordField(DefPosWidth,M4UVal,0,0);
RecordField(DefPosHeight,M4UVal,0,0);
RecordField(DefPosDepth,M4UVal,0,0);
RecordField(InPriceB2,M45Val,0,0);
RecordField(WeighedAvPriceB2,M45Val,0,0);
RecordField(EUCostAcc,M4Code,10,AccVc);
RecordField(ExpCostAcc,M4Code,10,AccVc);
RecordField(PalletLayers,M4UVal,0,0);
RecordField(QtyonPalletLayer,M4UVal,0,0);
RecordField(UserStr1,M4Str,255,0);
RecordField(UserStr2,M4Str,255,0);
RecordField(UserStr3,M4Str,255,0);
RecordField(UserStr4,M4Str,255,0);
RecordField(UserStr5,M4Str,255,0);
RecordField(UserVal1,M4UVal,0,0);
RecordField(UserVal2,M4UVal,0,0);
RecordField(UserVal3,M4UVal,0,0);
RecordField(UserDate1,M4Date,0,0);
RecordField(UserDate2,M4Date,0,0);
RecordField(UserDate3,M4Date,0,0);
RecordField(RentGroup,M4Code,5,0);
RecordField(FAGroup,M4Code,5,0);
RecordField(NetWeight,M45Val,0,0);
RecordField(PrimaryCostModel,M4Int,0,0);
RecordField(QueuedCostModel,M4Int,0,0);
RecordField(CostPerc,M4Val,0,0);
RecordField(FIFOPerSerialNr,M4Int,0,0);
RecordField(FIFOPerLocation,M4Int,0,0);
RecordField(WAPerLocation,M4Int,0,0);
RecordField(CostPricePerLocation,M4Int,0,0);
RecordField(NotForSales,M4Int,0,0);
RecordField(SRUpdateCost,M4Int,0,0);
//=== 5.4
RecordField(SuppSerialNr,M4Str,20,0);
RecordField(MajStoneDet,M4Str,20,0);
RecordField(Colour,M4Str,20,0);
RecordField(Clarity,M4Str,20,0);
RecordField(Cert,M4Str,20,0);
RecordField(MinStoneDet,M4Str,20,0);
RecordField(Metal,M4Str,20,0);
RecordField(RowWeight,M4Str,20,0);
RecordField(Size,M4Str,20,0);
RecordField(Length,M4Str,20,0);
RecordField(WatchBrand,M4Str,20,0);
RecordField(StyleName,M4Str,20,0);
RecordField(WatchMetal,M4Str,20,0);
RecordField(Movement,M4Str,20,0);
RecordField(BrcStr,M4Str,20,0);
RecordField(Gender,M4Str,20,0);
RecordField(Other,M4Str,20,0);
RecordField(Other2,M4Str,20,0);
RecordField(Reference,M4Str,60,0);
RecordField(Perceptions,M4Int,0,0);
RecordField(Withholdings,M4Int,0,0);
RecordField(TaxTemplateCode,M4Code,10,TaxTemplateVc);
RecordField(TaxTemplateCodeEU,M4Code,10,TaxTemplateVc);
RecordField(TaxTemplateCodeExp,M4Code,10,TaxTemplateVc);
RecordField(DonotRequireBatchNrOnIVCash,M4Int,0,0);
RecordField(HotelWIPAcc,M4Code,10,AccVc);
RecordField(CPSCode,M4Str,60,0);
RecordField(SVOInvbleSalesAcc,M4Code,10,AccVc);
RecordField(SVOWarrantySalesAcc,M4Code,10,AccVc);
RecordField(SVOContractSalesAcc,M4Code,10,AccVc);
RecordField(SVOGoodwillSalesAcc,M4Code,10,AccVc);
RecordField(SVOInvbleCostAcc,M4Code,10,AccVc);
RecordField(SVOWarrantyCostAcc,M4Code,10,AccVc);
RecordField(SVOContractCostAcc,M4Code,10,AccVc);
RecordField(SVOGoodwillCostAcc,M4Code,10,AccVc);
RecordField(HasExcise,M4Int,0,0);
RecordField(ProjMaterialsUsageAcc,M4Code,10,AccVc);
RecordField(DefOrderType,M4Set,433,0);
RecordField(Math2,M4TextField,0,0);
//=== 7.2
RecordField(BarCode2,M4Code,20,0);
RecordField(AlphaBet, M4UStr, 1, 0);
RecordField(VItemGroupCode, M4Code, 10, 0);
RecordField(VItemGroupName, M4Str, 60, 0);
RecordField(StartDate,M4Date,0,0); //01.09.11 INAU - Стартовая дата
RecordField(OrigItem, M4Code, 20, 0); //10.10.11 INAU - Аналог
RecordField(SubstItems, M4UStr, 255, 0); //10.10.11 INAU - Замена
RecordField(BaseName, M4Str, 100, 0);
RecordField(DispGroupsNew, M4UStr,200,0);
RecordField(Name2,M4Str,200,0);
RecordField(MultiShip,M4Int,0,0); //кратность отгрузки
RecordField(BoxVol,M4Val,0,0); // объём ящика
RecordField(tTesterCode, M4Code, 10, 0); // код тестера
RecordField(tKolSKU,M4Int,0,0); //кол-во товара для получения тестера
//
ArrayBegin(Math,-,1);
ArrayField(LangCode,M4Code,5,0);
ArrayField(Text,M4Str,100,0);
EndArray;
//
MainKeyBegin(Code,1);
StoreInBaseKey;
AppendFieldToKeyName(Group);
KeySegment(Code);
SubsetKeyBegin2(Name);
StoreInBaseKey;
AppendFieldToKeyName(Group);
KeySegment(Name);
KeySegment(Code);
KeyBegin(Group);
KeySegment(Group);
KeySegment(Code);
KeyBegin(BarCode);
KeySegment(BarCode);
KeySegment(Code);
KeyBegin(InvCode);
KeySegment(InvCode);
KeySegment(Code);
KeyBegin(Recepy);
KeySegment(Recepy);
KeySegment(Code);
KeyBegin(ActCode);
KeySegment(Code);
KeySegment(Terminated);
KeyBegin(ActName);
KeySegment(Name);
KeySegment(Code);
KeySegment(Terminated);
KeyBegin(ActGroup);
KeySegment(Group);
KeySegment(Code);
KeySegment(Terminated);
KeyBegin(EUCodex);
KeySegment(EUCodex);
KeySegment(Code);
KeyBegin(Department);
KeySegment(Department);
KeySegment(Code);
KeyBegin(AlternativeCode);
KeySegment(AlternativeCode);
KeySegment(Code);
KeyBegin(ItemType);
KeySegment(ItemType);
KeySegment(Code);
SubsetKeyBegin2(DICode);
StoreInBaseKey;
AppendListFieldToKeyName(DispGroups);
KeySegment(Code);
SubsetKeyBegin2(DIName);
StoreInBaseKey;
AppendListFieldToKeyName(DispGroups);
KeySegment(Name);
KeySegment(Code);
SubsetKeyBegin2(DIGroup);
StoreInBaseKey;
AppendListFieldToKeyName(DispGroups);
KeySegment(Group);
KeySegment(Code);
/* We should NEVER have indexes on Object fields, why and for who was this made ? */
/* I need it for IBM, they use only 1object, otherwise reports for them will be slow*/
KeyBegin(Objects);
KeySegment(Objects);
KeySegment(Code);
KeyBegin(ActAlternativeCode);
KeySegment(AlternativeCode);
KeySegment(Code);
KeySegment(Terminated);
KeyBegin(ActCodeForSale);
KeySegment(Code);
KeySegment(Terminated);
KeyBegin(ActNameForSale);
KeySegment(Name);
KeySegment(Code);
KeySegment(Terminated);
KeyBegin(ActGroupForSale);
KeySegment(Group);
KeySegment(Code);
KeySegment(Terminated);
KeyBegin(ActAlternativeCodeForSale);
KeySegment(AlternativeCode);
KeySegment(Code);
KeySegment(Terminated);
SubsetKeyBegin2(ActDICodeForSale);
StoreInBaseKey;
AppendListFieldToKeyName(DispGroups);
KeySegment(Code);
SubsetKeyBegin2(ActDINameForSale);
StoreInBaseKey;
AppendListFieldToKeyName(DispGroups);
KeySegment(Name);
KeySegment(Code);
SubsetKeyBegin2(ActDIGroupForSale);
StoreInBaseKey;
AppendListFieldToKeyName(DispGroups);
KeySegment(Group);
KeySegment(Code);
EndRecord;


//=============================================== IPVc
RecordBegin(IPVc,-,"");
ImpExpLevel(3);
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(IPSerBlock);
RecordField(Comment,M4Str,60,0);
RecordField(PayMode,M4Code,2,0);
RecordField(OKFlag,M4Int,0,0);
RecordField(CurPayVal,M4Val,0,0);
RecordField(RegDate,M4Date,0,0);
RecordField(OKMark,M4Mark,0,0);
RecordField(TransDate,M4Date,0,0);
FieldIsTransDate(TransDate);
RecordField(Math,M4Matrix,0,0);
RecordField(Sign,M4Code,10,UserVc);
RecordField(ARonTR,M4Int,0,0);
RecordField(ExportedFlag,M4Int,0,0);
RecordField(ReceivedFlag,M4Int,0,0);
RecordField(RejectedFlag,M4Int,0,0);
RecordField(RecNumber,M4Str,20,0);
RecordField(Invalid,M4Int,0,0); //## real invalid?, yes, to do :)
RecordField(PayCurCode,M4Code,5,CurncyCodeVc);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(Prntdf,M4Int,0,0);
RecordField(AuthorizationCode,M4UStr,20,0);
RecordField(MachineName,M4Code,20,0);
RecordField(DrawerCode,M4Code,5,0);
RecordField(RegTime,M4Time,0,0);
//=== 5.4
RecordField(IPBookVAT,M4Int,0,0);
RecordField(OfficialSerNr,M4Str,100,0);
RecordField(OfficialSerNr2,M4Str,100,0);
RecordField(Status,M4Set,361,0);
RecordField(BranchID,M4Code,20,CUVc);
RecordField(TerminalID,M4Str,60,0);
RecordField(OfficialSerNrSerie,M4Str,30,0);
//=== 7.2
//Добавлено 26.11.09 INAU
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogSaveTime,M4Time,0,0);
RecordField(LogOKDate,M4Date,0,0);
RecordField(LogOKUser,M4UStr,20,0);
RecordField(LogOKTime,M4Time,0,0);
//18.11.11 INAU
RecordField(LogPrintDate,M4Date,0,0);
RecordField(LogPrintUser,M4UStr,20,0);
//
ArrayBegin(Math,-,1);
ArrayField(stp,M4Int,0,0);
ArrayField(ovst,M4Int,0,0);
ArrayField(InvoiceNr,M4Long,0,0);
ArrayField(PayDate,M4Date,0,0);
ArrayField(CustCode,M4Code,20,CUVc);
ArrayField(latedays,M4Long,0,0);
ArrayField(CustName,M4Str,200,0);
ArrayField(CUPNr,M4Long,0,0);
ArrayField(ChequeNr,M4Long,0,0);
ArrayField(VATVal,M4Val,0,0);
ArrayField(VATCode,M4Code,10,VATCodeBlock);
ArrayField(InvOutstand,M4Val,0,0);
ArrayField(InvCurncy,M4Code,5,CurncyCodeVc);
ArrayField(InvVal,M4Val,0,0);
ArrayField(PayMode,M4Code,2,0);
ArrayField(BankCurncy,M4Code,5,CurncyCodeVc);
ArrayField(BankVal,M4Val,0,0);
ArrayField(RecCurncy,M4Code,5,CurncyCodeVc);
ArrayField(RecVal,M4Val,0,0);
ArrayField(BankFeeVal,M4Val,0,0);
ArrayField(RoundOff,M4Val,0,0);
ArrayField(RoundOffAcc,M4Code,10,AccVc);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(Coef,M4Rate,0,0);//some kind of rate to calc rec val for Superwave
ArrayField(BankFeePrc,M4PrcStr,20,0);
ArrayField(TAX1Sum,M4Val,0,0);
ArrayField(OrderNr,M4Long,0,0);
ArrayField(Comment,M4Str,60,0);
ArrayField(B1BankVal,M4Val,0,0);
ArrayField(B2BankVal,M4Val,0,0);
ArrayField(ToRateB1BankVal,M4Rate,0,0);
ArrayField(ToRateB2BankVal,M4Rate,0,0);
ArrayField(rkRecNumber,M4Str,40,0);
ArrayField(ARAcc,M4Code,10,AccVc);
ArrayField(TAX2Prc,M423Val,0,0);
ArrayField(CredManNr,M4Long,0,0);
//=== 5.4
ArrayField(SuggestVal,M4Val,0,0);
ArrayField(InstNr,M4Long,0,0);
ArrayField(WriteOffAcc,M4Code,10,AccVc);
ArrayField(FrRateBankVal,M4Rate,0,0);
ArrayField(BaseRate1BankVal,M4Rate,0,0);
ArrayField(BaseRate2BankVal,M4Rate,0,0);
ArrayField(TaxTemplateCode,M4UStr,60,TaxTemplateVc);
ArrayField(TaxMatrix,M4PackedMatrix,0,TaxMatrixVc);
ArrayField(InvoiceOfficialSerNr,M4Str,100,0);
//== 7.2
ArrayField(AuthorizationCode,M4UStr,20,0);
EndArray;
//
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(ExportedFlag);
KeySegment(ExportedFlag);
KeySegment(SerNr);
KeyBegin(OKMark);
KeySegment(OKMark);
KeySegment(SerNr);
KeyBegin(TransDate);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(RecNumber);
KeySegment(RecNumber);
KeySegment(SerNr);
KeyBegin(CurPayVal);
KeySegment(CurPayVal);
KeySegment(SerNr);
SubsetKeyBegin2(PayMode);
StoreInBaseKey;
AppendFieldToKeyName(PayMode);
AppendMatrixFieldToKeyName(PayMode,0);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(Cashup);
KeySegment(MachineName);
KeySegment(DrawerCode);
KeySegment(TransDate);
KeySegment(RegTime);
KeySegment(SerNr);
KeyBegin(OKFlagTransDate);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(OfficialSerNr);
KeySegment(OfficialSerNr);
KeySegment(SerNr);
KeyBegin(OfficialSerNrDate);
KeySegment(OfficialSerNr);
KeySegment(TransDate);
KeySegment(SerNr);

KeyBegin(OpenOfficialSerNr2);
KeySegment(OfficialSerNr2);
KeySegment(SerNr);
KeyBegin(Prntdf);
KeySegment(Prntdf);
KeySegment(SerNr);
EndRecord;


//=============================================== StockMovVc
RecordBegin(StockMovVc,-,"stockmov1");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(StockMovSerBlock);
RecordField(RegDate,M4Date,0,0);
RecordField(Comment,M4Str,60,0);
RecordField(FrLocation,M4Code,10,LocationVc);
FieldIsLocation(FrLocation);
RecordField(ToLocation,M4Code,10,LocationVc);
RecordField(OKFlag,M4Mark,0,0);
RecordField(Sign,M4Code,10,UserVc);
RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
RecordField(Math,M4Matrix,0,0);
RecordField(ToRateB1,M4Rate,0,0);
RecordField(TransDate,M4Date,0,0);
//  FieldIsTransDate(TransDate);
RecordField(ExportedFlag,M4Int,0,0);
RecordField(FrRate,M4Rate,0,0);
RecordField(ToRateB2,M4Rate,0,0);
RecordField(BaseRate1,M4Rate,0,0);
RecordField(BaseRate2,M4Rate,0,0);
RecordField(TotQty,M4Qty,0,0);
RecordField(FrLocOKNr,M4Qty,0,0);
RecordField(ToLocOKNr,M4Qty,0,0);
RecordField(IntORNo,M4Long,0,IntORVc);
RecordField(TotWeight,M4Qty,0,0);
RecordField(TotVolume,M4Qty,0,0);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(FrPos,M4Code,20,0);
RecordField(ToPos,M4Code,20,0);
RecordField(OtherExtraCosts,M423Val,0,0);
RecordField(ProdSerNr,M4Long,0,ProdVc);
RecordField(RefStr,M4Str,60,0);
RecordField(DeliveryMan,M4Code,10,UserVc);
RecordField(Prntdf,M4Int,0,0);
RecordField(ShipMode,M4Code,5,0);
RecordField(ShipDeal,M4Code,5,0);
RecordField(Sorting,M4Str,20,0);
RecordField(SHNr,M4Long,0,0);
RecordField(ManualPick,M4Int,0,0);
RecordField(ToForkLiftQue,M4Int,0,0);
RecordField(FileName,M4Str,20,0);
RecordField(TransNr,M4Long,0,0);
RecordField(ThrouLocation,M4Code,10,LocationVc);
RecordField(SentOKFlag,M4Mark,0,0);
RecordField(Reserved,M4Mark,0,0);
RecordField(SentTransDate,M4Date,0,0);
RecordField(FrThrouLocOKNr,M4Qty,0,0);
RecordField(ToThrouLocOKNr,M4Qty,0,0);
RecordField(FreightCode,M4Code,5,0);
RecordField(FreightCompanyRegNr,M4Str,60,0);
RecordField(FreightCompany,M4Str,60,0);
RecordField(TruckInfo,M4Str,60,0);
RecordField(Driver,M4Str,60,0);
RecordField(CMRText,M4Str,60,0);
RecordField(TotSentQty,M4Qty,0,0);
RecordField(OrdFlag,M4Mark,0,0);
RecordField(PlanSendDate,M4Date,0,0);
RecordField(PlanSendTime,M4Time,0,0);
RecordField(PlanDurationDays,M4Int,0,0);
RecordField(PlanDurationTime,M4Time,0,0);
RecordField(PlanArrDate,M4Date,0,0);
RecordField(PlanArrTime,M4Time,0,0);
RecordField(ActSendDate,M4Date,0,0);
RecordField(ActSendTime,M4Time,0,0);
RecordField(ActDurationDays,M4Int,0,0);
RecordField(ActDurationTime,M4Time,0,0);
RecordField(ActArrDate,M4Date,0,0);
RecordField(ActArrTime,M4Time,0,0);
RecordField(OrdTransDate,M4Date,0,0);
FieldIsTransDate(OrdTransDate);
RecordField(TreatedFlag,M4Mark,0,0);
RecordField(Invalid,M4Int,0,0);
FieldIsInvalid(Invalid);
RecordField(InvalidDate,M4Date,0,0);
RecordField(Reason,M4Code,20,0);
//=== 5.4
RecordField(ThrouPosition,M4Code,20,0);
RecordField(TerminalID,M4Str,60,0);
RecordField(BranchID,M4Code,20,CUVc);
RecordField(OfficialSerNr,M4Str,100,0);
RecordField(Hash,M4Str,255,0);
RecordField(HashKeyVersion,M4Int,0,0);
RecordField(RegTime,M4Time,0,0);
RecordField(LocalMachineCode,M4Code,20,0);
RecordField(StockMovType,M4Set,564,0);
RecordField(OrderNr,M4Long,0,0);
RecordField(OKBy,M4Code,10,0);
RecordField(FrAddr0,M4Str,60,0);
RecordField(FrAddr1,M4Str,60,0);
RecordField(FrAddr2,M4Str,60,0);
RecordField(FrAddr3,M4Str,60,0);
RecordField(FrAddr4,M4Str,60,0);
RecordField(ToAddr0,M4Str,60,0);
RecordField(ToAddr1,M4Str,60,0);
RecordField(ToAddr2,M4Str,60,0);
RecordField(ToAddr3,M4Str,60,0);
RecordField(ToAddr4,M4Str,60,0);
RecordField(ThrouAddr0,M4Str,60,0);
RecordField(ThrouAddr1,M4Str,60,0);
RecordField(ThrouAddr2,M4Str,60,0);
RecordField(ThrouAddr3,M4Str,60,0);
RecordField(ThrouAddr4,M4Str,60,0);
RecordField(TaxAdminServSeal,M4Str,200,0);
RecordField(Status,M4Set,361,0);
RecordField(OfficialSerNrSerie,M4Str,30,0);
RecordField(OfficialSerNr2,M4Str,100,0);
RecordField(OfficialSerNr2Serie,M4Str,30,0);
//=== 7.2
//Добавлено 25.11.09 INAU
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogSaveTime,M4Time,0,0);
RecordField(LogConfirmDate,M4Date,0,0);
RecordField(LogConfirmUser,M4UStr,20,0);
RecordField(LogConfirmTime,M4Time,0,0);
RecordField(LogSendDate,M4Date,0,0);
RecordField(LogSendUser,M4UStr,20,0);
RecordField(LogSendTime,M4Time,0,0);
RecordField(LogReciveDate,M4Date,0,0);
RecordField(LogReciveUser,M4UStr,20,0);
RecordField(LogReciveTime,M4Time,0,0);
RecordField(Barcode, M4UStr, 13, 0); //By Delphi barcode
RecordField(IName, M4Str, 60, 0); //By Delphi ItemName
RecordField(BQuant, M4Qty, 0, 0);//By Delphi quantity
RecordField(AddIt, M4Mark, 0, 0);//By Delphi add|not add
RecordField(Gather, M4Code, 20, UserVc); //By Delphi кладовщик
RecordField(LogPrintDate,M4Date,0,0); //11.12.09 INAU
RecordField(LogPrintUser,M4UStr,20,0); //11.12.09 INAU
RecordField(LogPrintTime,M4Time,0,0); //11.12.09 INAU
RecordField(IRetOrdNr,M4Long,0,0); //13.02.11 INAU IRetOrdVc link
RecordField(TTCode,M4Long,0,0); //23.05.12 t+ код доставки
//
ArrayBegin(Math,-,1);
ArrayField(ArtCode,M4Code,20,INVc);
ArrayField(Quant,M4UVal,0,0);
ArrayField(Spec,M4Str,100,0);
ArrayField(SerialNr,M4Str,30,0);
ArrayField(NewPrice,M45Val,0,0);
ArrayField(ExtraSCost,M4PrcStr,20,0);
ArrayField(OldPrice,M45Val,0,0);
ArrayField(FIFORowVal,M45Val,0,0);
ArrayField(BasePrice,M423Val,0,0);
ArrayField(Coefficient,M45Val,0,0);
ArrayField(IntORRow,M4Long,0,0);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(UnitXval,M4UVal,0,0);
ArrayField(UnitYval,M4UVal,0,0);
ArrayField(UnitZval,M4UVal,0,0);
ArrayField(FrPosCode,M4Code,20,0);
ArrayField(ToPosCode,M4Code,20,0);
ArrayField(SHRow,M4Long,0,0);
ArrayField(SentQuant,M4UVal,0,0);
ArrayField(OrdQuant,M4UVal,0,0);
ArrayField(SentNewPrice,M45Val,0,0);
ArrayField(SentExtraSCost,M4PrcStr,20,0);
ArrayField(SentOldPrice,M45Val,0,0);
ArrayField(SentFIFORowVal,M45Val,0,0);
ArrayField(ThrouPosCode,M4Code,20,0);
EndArray;
//
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(ExportedFlag);
KeySegment(ExportedFlag);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(TransDate);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(SerNr);
KeyBegin(FrLocOK);
KeySegment(FrLocation);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(ToLocOK);
KeySegment(ToLocation);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(FrPos);
KeySegment(FrPos);
KeySegment(SerNr);
KeyBegin(ToPos);
KeySegment(ToPos);
KeySegment(SerNr);
KeyBegin(ProdSerNr);
KeySegment(ProdSerNr);
KeySegment(SerNr);
KeyBegin(RefStr);
KeySegment(RefStr);
KeySegment(SerNr);
KeyBegin(DeliveryMan);
KeySegment(DeliveryMan);
KeySegment(FrLocation);
KeySegment(Prntdf);
KeySegment(ShipMode);
KeySegment(SerNr);
KeyBegin(Prntdf);
KeySegment(Prntdf);
KeySegment(SerNr);
KeyBegin(ShipMode);
KeySegment(ShipMode);
KeySegment(SerNr);
KeyBegin(ShipDeal);
KeySegment(ShipDeal);
KeySegment(SerNr);
KeyBegin(PrntdfLoc);
KeySegment(FrLocation);
KeySegment(Prntdf);
KeySegment(Sorting);
KeySegment(SerNr);
KeyBegin(Sorting);
KeySegment(Sorting);
KeySegment(SerNr);
KeyBegin(FileName);
KeySegment(FileName);
KeySegment(TransNr);
KeySegment(SerNr);
SubsetKeyBegin2(FrPosCodeSerNr);
StoreInBaseKey;
AppendMatrixFieldToKeyName(FrPosCode,0);
KeySegment(SerNr);
SubsetKeyBegin2(ToPosCodeSerNr);
StoreInBaseKey;
AppendMatrixFieldToKeyName(ToPosCode,0);
KeySegment(SerNr);
KeyBegin(SentOKFlag);
KeySegment(SentOKFlag);
KeySegment(SerNr);
KeyBegin(FrThrouLocOK);
KeySegment(ThrouLocation);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(ToThrouLocOK);
KeySegment(ThrouLocation);
KeySegment(SentOKFlag);
KeySegment(SentTransDate);
KeySegment(SerNr);
KeyBegin(IntORNo);
KeySegment(IntORNo);
KeySegment(SerNr);
KeyBegin(TreatedFlag);
KeySegment(TreatedFlag);
KeySegment(SerNr);
KeyBegin(SentTransDate);
KeySegment(SentTransDate);
KeySegment(SerNr);
/*
KeyBegin(TransDateFileName);
KeySegment(TransDate);
KeySegment(FileName);
KeySegment(TransNr);
KeySegment(SerNr);
*/
KeyBegin(OKFlagTransDate);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(SentOKFlagSentTransDate);
KeySegment(SentOKFlag);
KeySegment(SentTransDate);
KeySegment(SerNr);
KeyBegin(FrLocSentOK);
KeySegment(FrLocation);
KeySegment(SentOKFlag);
KeySegment(SentTransDate);
KeySegment(SerNr);
KeyBegin(SortingDate);
KeySegment(Sorting);
KeySegment(SentTransDate);
KeySegment(SerNr);
KeyBegin(OfficialSerNr);
KeySegment(OfficialSerNr);
KeySegment(SerNr);
KeyBegin(RegDate);
KeySegment(RegDate);
KeySegment(RegTime);
KeySegment(SerNr);
KeyBegin(OrderNr);
KeySegment(OrderNr);
KeySegment(SerNr);
KeyBegin(PlanSendDate);
KeySegment(PlanSendDate);
KeySegment(SerNr);
KeyBegin(OpenOfficialSerNr2);
KeySegment(OfficialSerNr2);
KeySegment(SerNr);

//31.03.14 INAU
KeyBegin(TTCode);
KeySegment(TTCode);
KeySegment(SerNr);
//===

EndRecord;


//=============================================== PUVc
RecordBegin(PUVc,-,"purchase2");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(PUSerBlock);
RecordField(RegDate,M4Date,0,0);
RecordField(TransDate,M4Date,0,0);
FieldIsTransDate(TransDate);
RecordField(Comment,M4Str,60,0);
RecordField(Math,M4Matrix,0,0);
RecordField(VECode,M4Code,20,VEVc);
RecordField(VEName,M4Str,60,0);
RecordField(PONr,M4Long,0,POVc);
RecordField(Location,M4Code,10,LocationVc);
FieldIsLocation(Location);
RecordField(OKFlag,M4Mark,0,0);
RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
RecordField(ToRateB1,M4Rate,0,0);
RecordField(InclVAT,M4Int,0,0);
RecordField(SumCostPrice,M45Val,0,0);
RecordField(SumQuant,M4Qty,0,0);
RecordField(ShipCost,M4UVal,0,0);
RecordField(CustomsCost,M4UVal,0,0);
RecordField(ExtraCost,M4UVal,0,0);
RecordField(ExportedFlag,M4Int,0,0);
RecordField(FrRate,M4Rate,0,0);
RecordField(ToRateB2,M4Rate,0,0);
RecordField(BaseRate1,M4Rate,0,0);
RecordField(BaseRate2,M4Rate,0,0);
RecordField(LocOKNr,M4Qty,0,0);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(PUClass,M4Code,10,0);
RecordField(POCOSerNr,M4Long,0,0);
RecordField(Cost1,M4UVal,0,0);
RecordField(Cost2,M4UVal,0,0);
RecordField(Cost3,M4UVal,0,0);
RecordField(Cost4,M4UVal,0,0);
RecordField(Cost5,M4UVal,0,0);
RecordField(VATVal,M4Val,0,0);
RecordField(SubTotal,M4Val,0,0);
RecordField(PayVal,M4Val,0,0);
RecordField(VEVATCode,M4Code,10,VATCodeBlock);
RecordField(Invalid,M4Int,0,0);
FieldIsInvalid(Invalid);
RecordField(ExportFlag,M4Int,0,0);
RecordField(PrelPUNr,M4Long,0,0);
RecordField(FreightCode,M4Code,5,0);
RecordField(FreightCompanyRegNr,M4Str,60,0);
RecordField(FreightCompany,M4Str,60,0);
RecordField(TruckInfo,M4Str,60,0);
RecordField(Driver,M4Str,60,0);
RecordField(CMRText,M4Str,60,0);
RecordField(xBookVariance,M4Mark,0,0);//not used
RecordField(xVarTransDate,M4Date,0,0);//not used
RecordField(LangCode,M4Code,5,0);
RecordField(TAX1Sum,M4Val,0,0);
RecordField(TAX2Sum,M4Val,0,0);
RecordField(ShipCostRound,M4UVal,0,0);
RecordField(CustomsCostRound,M4UVal,0,0);
RecordField(Cost1Round,M4UVal,0,0);
RecordField(Cost2Round,M4UVal,0,0);
RecordField(Cost3Round,M4UVal,0,0);
RecordField(Cost4Round,M4UVal,0,0);
RecordField(Cost5Round,M4UVal,0,0);
RecordField(Sorting,M4Str,20,0);
RecordField(InvalidDate,M4Date,0,0);
RecordField(NoTAXonVAT,M4Long,0,0);
//=== 5.4
RecordField(AcceptanceStatus,M4Set,443,0);
RecordField(PUFromPORate,M4Set,460,0);
RecordField(TotUPrice,M4Val,0,0);
RecordField(VETaxTemplateCode,M4Code,10,TaxTemplateVc);
RecordField(TaxMatrix,M4PackedMatrix,0,TaxMatrixVc);
RecordField(BranchID,M4Code,20,VEVc);
RecordField(AcceptanceBy,M4List,200,UserVc);
RecordField(ExtraCostsCalculation,M4Int,0,0);
RecordField(AcceptanceFYI,M4List,200,UserVc);
RecordField(DispatchNumber,M4Str,60,0);
RecordField(CustomsNr,M4Str,30,0);
//=== 7.2
RecordField(CustomsObj, M4Code, 20, ObjVc);
RecordField(CommentObj, M4Str, 60, 0);
RecordField(Barcode, M4UStr, 13, 0); //By Delphi barcode
RecordField(BQuant, M4Qty, 0, 0);//By Delphi quantity
RecordField(AddIt, M4Mark, 0, 0);//By Delphi add|not add
RecordField(LogNewDate,M4Date,0,0);    //25.11.09 by INAU
RecordField(LogNewUser,M4UStr,20,0);   //25.11.09 by INAU
RecordField(LogNewTime,M4Time,0,0);    //25.11.09 by INAU
RecordField(LogSaveDate,M4Date,0,0);   //25.11.09 by INAU
RecordField(LogSaveUser,M4UStr,20,0);  //25.11.09 by INAU
RecordField(LogSaveTime,M4Time,0,0);   //25.11.09 by INAU
RecordField(LogOKDate,M4Date,0,0);     //25.11.09 by INAU
RecordField(LogOKUser,M4UStr,20,0);    //25.11.09 by INAU
RecordField(LogOKTime,M4Time,0,0);     //25.11.09 by INAU
//
ArrayBegin(Math,-,1);
ArrayField(ArtCode,M4Code,20,INVc);
ArrayField(Quant,M4UVal,0,0);
ArrayField(Spec,M4Str,100,0);
ArrayField(UPrice,M45Val,0,0);
ArrayField(SerialNr,M4Str,30,0);
ArrayField(OrdRow,M4Long,0,0);
ArrayField(Extra,M4PrcStr,20,0);
ArrayField(CostPrice,M45Val,0,0);
ArrayField(VEItemCode,M4Str,20,0);
ArrayField(VARList,M4UStr,30,0);
ArrayField(ShipCost,M45Val,0,0);
ArrayField(CustomsCost,M4PrcStr,20,0); //!!
ArrayField(BestBefore,M4Date,0,0);
ArrayField(Coefficient,M45Val,0,0);
ArrayField(BasePrice,M423Val,0,0);
ArrayField(Sum,M45Val,0,0);
ArrayField(Comment,M4Str,30,0);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(CostAcc,M4UStr,10,AccVc);
ArrayField(CredAcc,M4UStr,10,AccVc);
ArrayField(CustomsNr,M4Str,30,0);
ArrayField(CountryOfOrg,M4Code,5,0);
ArrayField(PosCode,M4Code,20,0);
ArrayField(BatchStatus,M4Code,20,BatchStatusVc);
ArrayField(UnitXval,M4UVal,0,0);
ArrayField(UnitYval,M4UVal,0,0);
ArrayField(UnitZval,M4UVal,0,0);
ArrayField(RowCost1,M4UVal,0,0);
ArrayField(RowCost2,M4UVal,0,0);
ArrayField(RowCost3,M4UVal,0,0);
ArrayField(RowCost4,M4UVal,0,0);
ArrayField(RowCost5,M4UVal,0,0);
ArrayField(VATCode,M4Code,10,VATCodeBlock);
ArrayField(stp,M4Int,0,0);
ArrayField(ovst,M4Int,0,0);
ArrayField(Sign,M4Code,10,UserVc);
ArrayField(UpdDate,M4Date,0,0);
ArrayField(PORecon,M4UVal,0,0);
ArrayField(POReconComment,M4Str,100,0);
ArrayField(VIRecon,M4UVal,0,0);
ArrayField(VIReconComment,M4Str,100,0);
ArrayField(PONr,M4Long,0,POVc);
ArrayField(BarCode,M4Str,20,0);//StockMovNr at The Moment
ArrayField(PrelPUNr,M4Long,0,0);
ArrayField(PrelPURow,M4Long,0,0);
ArrayField(ToPosCode,M4Code,20,0);
ArrayField(UnitCode,M4Code,5,0);
ArrayField(VarianceAmount,M4Val,0,0);
ArrayField(TAX2Code,M4Code,5,0);
ArrayField(TAX2Prc,M423Val,0,0);
ArrayField(TAX2Reb,M4Val,0,0);
ArrayField(TAX1Reb,M4Val,0,0);
ArrayField(TAX2Acc,M4Code,10,AccVc);
ArrayField(Location,M4Code,10,LocationVc);
ArrayField(ChargeNumber,M4Long,0,0);
ArrayField(VEQuant,M4UVal,0,0);
ArrayField(PIFactor,M4UVal,0,0);
ArrayField(VEUnit,M4Code,5,0);
ArrayField(StockType,M4Set,359,0);
ArrayField(InPrice,M45Val,0,0);
//=== 7.2
ArrayField(SuppSerialNr,M4Str,20,0);
ArrayField(MajStoneDet,M4Str,20,0);
ArrayField(Colour,M4Str,20,0);
ArrayField(Clarity,M4Str,20,0);
ArrayField(Cert,M4Str,20,0);
ArrayField(MinStoneDet,M4Str,20,0);
ArrayField(Metal,M4Str,20,0);
ArrayField(RowWeight,M4Str,20,0);
ArrayField(Size,M4Str,20,0);
ArrayField(Length,M4Str,20,0);
ArrayField(WatchBrand,M4Str,20,0);
ArrayField(StyleName,M4Str,20,0);
ArrayField(WatchMetal,M4Str,20,0);
ArrayField(Movement,M4Str,20,0);
ArrayField(BrcStr,M4Str,20,0);
ArrayField(Gender,M4Str,20,0);
ArrayField(Other,M4Str,20,0);
ArrayField(Other2,M4Str,20,0)
ArrayField(MotherPURow,M4Long,0,0);
ArrayField(TaxTemplateCode,M4UStr,60,TaxTemplateVc);
ArrayField(TaxMatrix,M4PackedMatrix,0,TaxMatrixVc);
ArrayField(TREO,M4Set,509,0);
ArrayField(DispatchNumber,M4Str,60,0);
ArrayField(CustomsDate,M4Date,0,0);
EndArray;
//
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(ExportedFlag);
KeySegment(ExportedFlag);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(TransDate);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(PONr);
KeySegment(PONr);
KeySegment(SerNr);
KeyBegin(VECode);
KeySegment(VECode);
KeySegment(SerNr);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(SerNr);
KeyBegin(LocOK);
KeySegment(Location);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(Location);
KeySegment(Location);
KeySegment(SerNr);
SubsetKeyBegin2(ToPosCodeSerNr);
StoreInBaseKey;
AppendMatrixFieldToKeyName(ToPosCode,0);
KeySegment(SerNr);
KeyBegin(xBookVariance);
KeySegment(xBookVariance);
KeySegment(SerNr);
SubsetKeyBegin2(RowPONr);
StoreInBaseKey;
AppendMatrixFieldToKeyName(PONr,0);
KeySegment(SerNr);
KeyBegin(VEName);
KeySegment(VEName);
KeySegment(SerNr);
KeyBegin(Sorting);
KeySegment(Sorting);
KeySegment(SerNr);
KeyBegin(OKFlagTransDate);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(VECodeTransDate);
KeySegment(VECode);
KeySegment(TransDate);
KeySegment(SerNr);
EndRecord;


//=============================================== BarcodeVc
RecordBegin(BarcodeVc,-,"BarcodeVc2");
NewAutosyncRegister(kSyncDirectionToClient,true);
RecordField(Barcode,M4UStr,60,0);
RecordField(Itemcode,M4Code,20,INVc);
RecordField(Comment,M4Str,100,0);
RecordField(BarCodeSerialNo,M4Str,20,0);
//=== 5.4
RecordField(CustCode,M4Code,20,CUVc);
//=== 7.2
RecordField(ActualFlag,M4Mark,0,0);
RecordField(1CFlag, M4Mark, 0, 0);
//
MainKeyBegin(Barcode,0);
KeySegment(Barcode);
KeyBegin(Itemcode);
KeySegment(Itemcode);
KeySegment(Barcode);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(Barcode);
KeyBegin(BarCodeSerialNo);
KeySegment(BarCodeSerialNo);
KeySegment(Barcode);
EndRecord;


//=============================================== PIVc
RecordBegin(PIVc,-,"pi2");
RecordField(ItemCode,M4Code,20,INVc);
RecordField(VECode,M4Code,20,VEVc);
RecordField(VEItemCode,M4Str,20,0);
/* kexx 970101, changed size from 40 to 60, need to test!! */
RecordField(Comment,M4Str,60,0);
RecordField(PurPrice,M45Val,0,0);
RecordField(DefaultChoice,M4Mark,0,0);
RecordField(VEName,M4Str,60,0);
RecordField(Math,M4Matrix,0,0);
RecordField(NormPOQty,M4Qty,0,0);
RecordField(MinPOQty,M4Qty,0,0);
RecordField(Manufacturer,M4Code,20,VEVc);
RecordField(OrgCountry,M4Code,5,0);
RecordField(VendDefChoice,M4Int,0,0);
RecordField(PIFactor,M45Val,0,0);
RecordField(PurchaseCost,M4PrcStr,20,0);
RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
RecordField(ExtraCaost,M4Val,0,0); /* What??? */
RecordField(Unit,M4Str,10,0); /* What??? */
RecordField(VEUnit,M4Str,10,0);
RecordField(PlannedDelDays,M4UVal,0,0);
RecordField(SalesGroup,M4Code,5,SalesGroupVc);
FieldIsGroup(SalesGroup);
RecordField(SalesMan,M4Code,10,UserVc);
FieldIsUser(SalesMan);
//=== 5.4
RecordField(Location,M4Code,10,LocationVc);
//  FieldIsLocation(Location);
RecordField(DefStockType,M4Set,359,0);
//=== 7.2
RecordField(Packing,M4Int,0,0);// фасовка t+
RecordField(Quantity,M4Int,0,0); //количество
RecordField(Sticker,M4Mark,0,0); // стикер (есть-нет)
RecordField(Mass,M4Val,0,0);
RecordField(Length,M4Val,0,0);
RecordField(Width,M4Val,0,0);
RecordField(Height,M4Val,0,0);
RecordField(ProdClass,M4UStr,250,0);
//
ArrayBegin(Math,-,1);
ArrayField(Text,M4Str,100,0);
EndArray;
//
MainKeyBegin(MainKey,1);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(ItemCode);
KeySegment(Location);
KeySegment(VECode);
KeySegment(VEItemCode);

SubsetKeyBegin2(Vendor);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(VECode);
KeySegment(ItemCode);
KeySegment(Location);
KeySegment(VEItemCode);
SubsetKeyBegin2(VEItemCode);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(VEItemCode);
KeySegment(VECode);
KeySegment(ItemCode);
KeySegment(Location);
SubsetKeyBegin2(DefaultChoice);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(DefaultChoice);
KeySegment(ItemCode);
KeySegment(Location);
KeySegment(VECode);
KeySegment(VEItemCode);
SubsetKeyBegin2(Comment);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Comment);
KeySegment(ItemCode);
KeySegment(Location);
KeySegment(VECode);
KeySegment(VEItemCode);

SubsetKeyBegin2(Location);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(Location);
KeySegment(ItemCode);
KeySegment(VECode);
KeySegment(VEItemCode);
EndRecord;


//=============================================== PPVc
RecordBegin(PPVc,-,"pp2");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(PPersSerBlock);
RecordField(BankAcc,M4Str,60,0);
RecordField(Sign,M4Code,10,UserVc);
RecordField(PayVal,M4Val,0,0);
RecordField(RegDate,M4Date,0,0);
RecordField(TransDate,M4Date,0,0);
FieldIsTransDate(TransDate);
RecordField(PayMode,M4Code,2,0);
RecordField(Math,M4Matrix,0,0);
RecordField(OrderedFlag,M4Mark,0,0);
RecordField(SentFlag,M4Int,0,0);
RecordField(DoneFlag,M4Mark,0,0);
RecordField(BankName,M4Str,60,0); //20 -> 60
RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
RecordField(ToRateB1,M4Rate,0,0);
RecordField(BasePayVal,M4Val,0,0);
RecordField(ExtraCost,M4Val,0,0);
RecordField(PayDate,M4Date,0,0);
RecordField(xStatFlag,M4Int,0,0);
RecordField(ExportedFlag,M4Int,0,0);
RecordField(FrRate,M4Rate,0,0);
RecordField(ToRateB2,M4Rate,0,0);
RecordField(BaseRate1,M4Rate,0,0);
RecordField(BaseRate2,M4Rate,0,0);
RecordField(PPOKNr,M4Long,0,0);
RecordField(Invalid,M4Int,0,0);
FieldIsInvalid(Invalid);
//=== 5.4
RecordField(OSFlag,M4Int,0,0);
RecordField(SortCode,M4Str,10,0);
//=== 7.2
RecordField(RefStr, M4UStr, 60, 0);
//12.03.13 INAU
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveTime,M4Time,0,0);
RecordField(LogSentUser,M4UStr,20,0);
RecordField(LogSentDate,M4Date,0,0);
RecordField(LogSentTime,M4Time,0,0);
RecordField(LogOrderedUser,M4UStr,20,0);
RecordField(LogOrderedDate,M4Date,0,0);
RecordField(LogOrderedTime,M4Time,0,0);
RecordField(LogDoneUser,M4UStr,20,0);
RecordField(LogDoneDate,M4Date,0,0);
RecordField(LogDoneTime,M4Time,0,0);
RecordField(LogAnnulUser,M4UStr,20,0);
RecordField(LogAnnulDate,M4Date,0,0);
RecordField(LogAnnulTime,M4Time,0,0);
//
ArrayBegin(Math,-,1);
ArrayField(stp,M4Int,0,0);
ArrayField(ovst,M4Int,0,0);
ArrayField(Person,M4Code,10,UserVc);
ArrayField(BankAcc,M4Str,60,0);
ArrayField(Comment,M4Str,255,0); //60 -> 255
ArrayField(PayVal,M4Val,0,0);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(PayMode,M4Code,2,0);
ArrayField(ChequeNr,M4Long,0,0);
ArrayField(rkPayNumber,M4Str,40,0);
//=== 5.4
ArrayField(ExpUsedPayVal,M4Val,0,0);
ArrayField(B1ExpUsedPayVal,M4Val,0,0);
ArrayField(SortCode,M4Str,10,0);
EndArray;
//
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(ExportedFlag);
KeySegment(ExportedFlag);
KeySegment(SerNr);
KeyBegin(TransDate);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(OrderedFlag);
KeySegment(OrderedFlag);
KeySegment(SerNr);
KeyBegin(DoneFlag);
KeySegment(DoneFlag);
KeySegment(SerNr);
KeyBegin(SentFlag);
KeySegment(SentFlag);
KeySegment(SerNr);
KeyBegin(PPOKNr);
KeySegment(PPOKNr);
KeySegment(SerNr);
SubsetKeyBegin2(PayMode);
StoreInBaseKey;
AppendFieldToKeyName(PayMode);
AppendMatrixFieldToKeyName(PayMode,0);
KeySegment(TransDate);
KeySegment(SerNr);

KeyBegin(OSFlag);
KeySegment(OSFlag);
KeySegment(SerNr);

SubsetKeyBegin2(OSPerson);//vanishes when OSFlag is zero
StoreInBaseKey;
AppendMatrixFieldToKeyName(Person,0);
KeySegment(TransDate);
KeySegment(SerNr);
EndRecord;


//=============================================== ExpVc
RecordBegin(ExpVc,-,"exp1");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(ExpSerBlock);
RecordField(PayVal,M4Val,0,0);
RecordField(OKFlag,M4Mark,0,0);
RecordField(Person,M4Code,10,UserVc);
FieldIsUser(Person);
RecordField(Name,M4Str,60,0);
RecordField(Sign,M4Code,10,UserVc);
RecordField(Math,M4Matrix,0,0);
RecordField(TransDate,M4Date,0,0);
FieldIsTransDate(TransDate);
RecordField(OKSign,M4Code,10,UserVc);
RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
RecordField(ToRateB1,M4Rate,0,0);
RecordField(Comment,M4Str,60,0);
RecordField(CalcVATVal,M4Val,0,0);
RecordField(StatFlag,M4Int,0,0);
RecordField(ExportedFlag,M4Int,0,0);
RecordField(FrRate,M4Rate,0,0);
RecordField(ToRateB2,M4Rate,0,0);
RecordField(BaseRate1,M4Rate,0,0);
RecordField(BaseRate2,M4Rate,0,0);
RecordField(PPOKNr,M4Long,0,0);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(SalesGroup,M4Code,5,SalesGroupVc);
FieldIsGroup(SalesGroup);
RecordField(NrofRecs,M4UVal,0,0);
RecordField(Invalid,M4Int,0,0);
FieldIsInvalid(Invalid);
RecordField(DocDate,M4Date,0,0);
RecordField(TaxAuthID,M4Str,40,0);
RecordField(TaxAuthIDCC,M4Str,20,0);
//=== 5.4
RecordField(AcceptanceStatus,M4Int,0,0);
RecordField(AcceptanceBy,M4List,200,UserVc);
RecordField(AcceptanceFYI,M4List,200,UserVc);
//=== 7.2
RecordField(FormalizedFlag,M4Mark,0,0); //17.07.12 INAU
//12.03.13 INAU
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveTime,M4Time,0,0);
RecordField(LogFormalizedUser,M4UStr,20,0);
RecordField(LogFormalizedDate,M4Date,0,0);
RecordField(LogFormalizedTime,M4Time,0,0);
RecordField(LogOKUser,M4UStr,20,0);
RecordField(LogOKDate,M4Date,0,0);
RecordField(LogOKTime,M4Time,0,0);
RecordField(LogAnnulUser,M4UStr,20,0);
RecordField(LogAnnulDate,M4Date,0,0);
RecordField(LogAnnulTime,M4Time,0,0);
//
ArrayBegin(Math,-,1);
ArrayField(stp,M4Int,0,0);
ArrayField(ovst,M4Int,0,0);
ArrayField(AccNumber,M4Code,10,AccVc);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(Comment,M4Str,60,0);
ArrayField(Sum,M4Val,0,0);
ArrayField(Item,M4Code,20,INVc);
ArrayField(qty,M4UVal,0,0);
ArrayField(PRCode,M4Code,20,PRVc);
ArrayField(VATCode,M4Code,10,VATCodeBlock);
ArrayField(VATSum,M4Val,0,0);
ArrayField(ExpDate,M4Date,0,0);
ArrayField(DocNr,M4Str,20,0);
ArrayField(VECode,M4Code,20,VEVc);
ArrayField(WayList,M4Long,0,0);
ArrayField(Identifier,M4Str,20,0);
ArrayField(ACShort,M4Code,5,0);
ArrayField(VEName,M4Str,60,0);
ArrayField(LegalInvNr,M4Str,60,0);
ArrayField(TaxAuthID,M4Str,40,0);
ArrayField(TaxAuthIDCC,M4Str,20,0);
//=== 5.4
ArrayField(RefStr,M4Str,60,0);
ArrayField(PPNr,M4Long,0,0);
ArrayField(PPRow,M4Long,0,0);
ArrayField(BaseSum,M4Val,0,0);
ArrayField(CAE,M4Str,20,0);
ArrayField(CAEExpiry,M4Date,0,0);
ArrayField(DANr,M4Long,0,DAVc);
EndArray;
//
MainKeyBegin(SerNr,1);
StoreInBaseKey;
AppendFieldToKeyName(Person);
AppendFieldToKeyName(SalesGroup);
KeySegment(SerNr);
SubsetKeyBegin2(ExportedFlag);
StoreInBaseKey;
AppendFieldToKeyName(Person);
AppendFieldToKeyName(SalesGroup);
KeySegment(ExportedFlag);
KeySegment(SerNr);
SubsetKeyBegin2(TransDate);
StoreInBaseKey;
AppendFieldToKeyName(Person);
AppendFieldToKeyName(SalesGroup);
KeySegment(TransDate);
KeySegment(SerNr);
SubsetKeyBegin2(Person);
StoreInBaseKey;
AppendFieldToKeyName(Person);
AppendFieldToKeyName(SalesGroup);
KeySegment(Person);
KeySegment(SerNr);
SubsetKeyBegin2(OKFlag);
StoreInBaseKey;
AppendFieldToKeyName(Person);
AppendFieldToKeyName(SalesGroup);
KeySegment(OKFlag);
KeySegment(SerNr);
SubsetKeyBegin2(Name);
StoreInBaseKey;
AppendFieldToKeyName(Person);
AppendFieldToKeyName(SalesGroup);
KeySegment(Name);
KeySegment(Person);
KeySegment(SerNr);
SubsetKeyBegin2(PPOKNr);
AppendFieldToKeyName(Person);
AppendFieldToKeyName(SalesGroup);
KeySegment(PPOKNr);
KeySegment(SerNr);

SubsetKeyBegin2(DocNr);
AppendMatrixFieldToKeyName(DocNr,0);
KeySegment(SerNr);
SubsetKeyBegin2(ExpDate);
AppendMatrixFieldToKeyName(ExpDate,0);
KeySegment(SerNr);

KeyBegin(PayVal);
KeySegment(PayVal);
KeySegment(SerNr);
EndRecord;


//=============================================== CLInVc
RecordBegin(CLInVc,-,"");
ImpExpLevel(3);
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(CLInSerBlock);
RecordField(NetVal,M4Val,0,0);
RecordField(VATVal,M4Val,0,0);
RecordField(Total,M4Val,0,0);
RecordField(TransDate,M4Date,0,0);
FieldIsTransDate(TransDate);
RecordField(PayMode,M4Code,2,0);
RecordField(Person,M4Code,10,UserVc);
FieldIsUser(Person);
RecordField(CorspCode,M4Code,20,0);
RecordField(CorspComment,M4Str,60,0);
RecordField(CUCode,M4Code,20,CUVc);
RecordField(CUName,M4Str,60,0);
RecordField(Addr0,M4Str,60,0);
RecordField(Addr1,M4Str,60,0);
RecordField(Addr2,M4Str,60,0);
RecordField(Comment,M4Str,200,0);
RecordField(VATCode,M4Code,10,VATCodeBlock);
RecordField(OKFlag,M4Mark,0,0);
RecordField(ExportedFlag,M4Int,0,0);
RecordField(RefStr,M4Str,60,0);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
RecordField(FrRate,M4Rate,0,0);
RecordField(ToRateB1,M4Rate,0,0);
RecordField(ToRateB2,M4Rate,0,0);
RecordField(BaseRate1,M4Rate,0,0);
RecordField(BaseRate2,M4Rate,0,0);
RecordField(FileName,M4Str,20,0);
RecordField(FSerNr,M4Long,0,0);
RecordField(TAX1Sum,M4Val,0,0);
RecordField(PMObjects,M4UStr,60,ObjVc);
RecordField(Addr3,M4Str,60,0);
RecordField(Addr4,M4Str,60,0);
RecordField(LangCode,M4Code,5,0);
RecordField(ColFlag,M4Mark,0,0);
RecordField(Invalid,M4Int,0,0);
FieldIsInvalid(Invalid);
RecordField(ARonTR,M4Int,0,0);
RecordField(PPOKNr,M4Long,0,0);
RecordField(OfficialSerNr,M4Str,100,0);
RecordField(TAX2Sum,M4Val,0,0);
RecordField(Math,M4Matrix,0,0);
//=== 5.4
RecordField(SalesGroup,M4Code,5,SalesGroupVc);
FieldIsGroup(SalesGroup);
RecordField(OfficialSerNrSerie,M4Str,30,0);
//=== 7.2
//12.03.13 INAU
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveTime,M4Time,0,0);
RecordField(LogOKUser,M4UStr,20,0);
RecordField(LogOKDate,M4Date,0,0);
RecordField(LogOKTime,M4Time,0,0);
RecordField(LogAnnulUser,M4UStr,20,0);
RecordField(LogAnnulDate,M4Date,0,0);
RecordField(LogAnnulTime,M4Time,0,0);
//
ArrayBegin(Math,-,1);
ArrayField(Type,M4Set,66,0);
ArrayField(Company,M4Code,20,CUVc);
ArrayField(TransNr,M4Long,0,0);
ArrayField(Sum,M4Val,0,0);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(OrderNr,M4Long,0,0);
ArrayField(CorspCode,M4Code,20,0);
ArrayField(Comment,M4Str,60,0);
ArrayField(stp,M4Int,0,0);
ArrayField(TAX1Sum,M4Val,0,0);
ArrayField(TAX2Sum,M4Val,0,0);
//=== 5.4
ArrayField(ARAPAcc,M4Code,10,AccVc);
ArrayField(PayMode,M4Code,2,0);
ArrayField(TransOfficialSerNr,M4Str,100,0);
EndArray;
//
MainKeyBegin(SerNr,1);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(Person);
KeySegment(SerNr);
KeyBegin(ExportedFlag);
KeySegment(ExportedFlag);
KeySegment(SerNr);
SubsetKeyBegin2(TransDate);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(Person);
KeySegment(TransDate);
KeySegment(SerNr);
SubsetKeyBegin2(Comment);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(Person);
KeySegment(Comment);
KeySegment(SerNr);
KeyBegin(ColFlag);
KeySegment(ColFlag);
KeySegment(SerNr);
KeyBegin(PPOKNr);
KeySegment(PPOKNr);
KeySegment(SerNr);
SubsetKeyBegin2(OKFlag);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(Person);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(OfficialSerNr);
KeySegment(OfficialSerNr);
KeySegment(SerNr);

EndRecord;


//=============================================== CLOutVc
RecordBegin(CLOutVc,-,"");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(CLOutSerBlock);
RecordField(Total,M4Val,0,0);
RecordField(TransDate,M4Date,0,0);
FieldIsTransDate(TransDate);
RecordField(PayMode,M4Code,2,0);
RecordField(Person,M4Code,10,UserVc);
FieldIsUser(Person);
RecordField(CorspCode,M4Code,20,0);
RecordField(CorspComment,M4Str,60,0);
RecordField(CUCode,M4Code,20,VEVc);
RecordField(CUName,M4Str,60,0);
RecordField(Comment,M4Str,200,0);
RecordField(OKFlag,M4Mark,0,0);
RecordField(ExportedFlag,M4Int,0,0);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(Addr0,M4Str,60,0);
RecordField(Addr1,M4Str,60,0);
RecordField(Addr2,M4Str,60,0);
RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
RecordField(FrRate,M4Rate,0,0);
RecordField(ToRateB1,M4Rate,0,0);
RecordField(ToRateB2,M4Rate,0,0);
RecordField(BaseRate1,M4Rate,0,0);
RecordField(BaseRate2,M4Rate,0,0);
RecordField(NetVal,M4Val,0,0);
RecordField(VATVal,M4Val,0,0);
RecordField(VATCode,M4Code,10,VATCodeBlock);
RecordField(RefStr,M4Str,60,0);
RecordField(PMObjects,M4UStr,60,ObjVc);
RecordField(Addr3,M4Str,60,0);
RecordField(Addr4,M4Str,60,0);
RecordField(FileName,M4Str,20,0);
RecordField(FSerNr,M4Long,0,0);
RecordField(LangCode,M4Code,5,0);
RecordField(ColFlag,M4Mark,0,0);
RecordField(LocalMachineCode,M4Code,20,0);
RecordField(Invalid,M4Int,0,0);
FieldIsInvalid(Invalid);
RecordField(ARonTR,M4Int,0,0);
RecordField(PPOKNr,M4Long,0,0);
RecordField(TAX1Sum,M4Val,0,0);
RecordField(TAX2Sum,M4Val,0,0);
RecordField(Math,M4Matrix,0,0);
//=== 5.4
RecordField(SalesGroup,M4Code,5,SalesGroupVc);
FieldIsGroup(SalesGroup);
//=== 7.2
//12.03.13 INAU
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveTime,M4Time,0,0);
RecordField(LogOKUser,M4UStr,20,0);
RecordField(LogOKDate,M4Date,0,0);
RecordField(LogOKTime,M4Time,0,0);
RecordField(LogAnnulUser,M4UStr,20,0);
RecordField(LogAnnulDate,M4Date,0,0);
RecordField(LogAnnulTime,M4Time,0,0);
//
ArrayBegin(Math,-,1);
ArrayField(Type,M4Set,73,0);
ArrayField(Company,M4Code,20,CUVc);
ArrayField(TransNr,M4Long,0,0);
ArrayField(Sum,M4Val,0,0);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(OrderNr,M4Long,0,0);
ArrayField(CorspCode,M4Code,20,0);
ArrayField(Comment,M4Str,60,0);
ArrayField(stp,M4Int,0,0);
ArrayField(TAX1Sum,M4Val,0,0);
ArrayField(TAX2Sum,M4Val,0,0);
//=== 5.4
ArrayField(APARAcc,M4Code,10,AccVc);
ArrayField(PayMode,M4Code,2,0);
ArrayField(DocNr,M4Str,20,0);
ArrayField(ExpDate,M4Date,0,0);
ArrayField(VEName,M4Str,60,0);
ArrayField(Identifier,M4Str,20,0);
ArrayField(VATCode,M4Code,10,VATCodeBlock);
ArrayField(TransOfficialSerNr,M4Str,100,0);
EndArray;
//
MainKeyBegin(SerNr,1);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(Person);
KeySegment(SerNr);
KeyBegin(ExportedFlag);
KeySegment(ExportedFlag);
KeySegment(SerNr);
SubsetKeyBegin2(TransDate);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(Person);
KeySegment(TransDate);
KeySegment(SerNr);
SubsetKeyBegin2(Comment);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(Person);
KeySegment(Comment);
KeySegment(SerNr);
KeyBegin(ColFlag);
KeySegment(ColFlag);
KeySegment(SerNr);
KeyBegin(PPOKNr);
KeySegment(PPOKNr);
KeySegment(SerNr);
SubsetKeyBegin2(OKFlag);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(Person);
KeySegment(OKFlag);
KeySegment(SerNr);
EndRecord;


//=============================================== SDVc
RecordBegin(SDVc,-,"sd");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(SDSerBlock);
RecordField(Math,M4Matrix,0,0);
RecordField(TransDate,M4Date,0,0);
FieldIsTransDate(TransDate);
RecordField(CostAcc,M4Code,10,AccVc);
RecordField(OKFlag,M4Mark,0,0);
RecordField(Location,M4Code,10,LocationVc);
FieldIsLocation(Location);
RecordField(PRCode,M4Code,20,PRVc);
RecordField(Comment,M4Str,60,0);
RecordField(Objects,M4UStr,60,ObjVc);
RecordField(ExportedFlag,M4Int,0,0);
RecordField(TotQty,M4Qty,0,0);
RecordField(LocOKNr,M4Qty,0,0);
RecordField(IntORNo,M4Long,0,0);
RecordField(SDClass,M4Code,10,0);
RecordField(ACShort,M4Code,5,0);
RecordField(RefStr,M4Str,60,0);
RecordField(Invalid,M4Int,0,0);
FieldIsInvalid(Invalid);
RecordField(InvalidDate,M4Date,0,0);
RecordField(Reason,M4Code,20,0);
//=== 5.4
RecordField(AcceptanceStatus,M4Int,0,0);
RecordField(AcceptanceBy,M4List,200,UserVc);
RecordField(AcceptanceFYI,M4List,200,UserVc);
//=== 7.2
//Добавлено 26.11.12 TGOR
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogSaveTime,M4Time,0,0);
RecordField(LogOKDate,M4Date,0,0);
RecordField(LogOKUser,M4UStr,20,0);
RecordField(LogOKTime,M4Time,0,0);
//
ArrayBegin(Math,-,1);
ArrayField(ArtCode,M4Code,20,INVc);
ArrayField(Spec,M4Str,100,0);
ArrayField(SerialNr,M4Str,30,0);
ArrayField(Qty,M4UVal,0,0);
ArrayField(FIFO,M45Val,0,0);
ArrayField(Location,M4Code,10,LocationVc);
ArrayField(Recepy,M4Code,20,RecVc);
ArrayField(VARList,M4UStr,30,0);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(CostAcc,M4Code,10,AccVc);
ArrayField(FIFORowVal,M45Val,0,0);
ArrayField(Coefficient,M45Val,0,0);
ArrayField(BasePrice,M423Val,0,0);
ArrayField(IntORRow,M4Long,0,0);
ArrayField(UnitXval,M4UVal,0,0);
ArrayField(UnitYval,M4UVal,0,0);
ArrayField(UnitZval,M4UVal,0,0);
ArrayField(PRCodeRow,M4Code,20,PRVc);
ArrayField(PosCode,M4Code,20,0);
ArrayField(ACShort,M4Code,5,0);
EndArray;
//
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(ExportedFlag);
KeySegment(ExportedFlag);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(TransDate);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(PRCode);
KeySegment(PRCode);
KeySegment(SerNr);
KeyBegin(LocOK);
KeySegment(Location);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(IntORNo);
KeySegment(IntORNo);
KeySegment(SerNr);
KeyBegin(OKFlagTransDate);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(SerNr);
EndRecord;


//=============================================== ActVc
RecordBegin(ActVc,ActView,"ActVc3");
ImpExpLevel(0);
NewAutosyncRegister(kSyncDirectionToClient,true);
RecordField(SerNr,M4Long,0,0);
RecordField(MainPersons,M4UStr,200,UserVc);
RecordField(CCPersons,M4UStr,200,UserVc);
RecordField(TransDate,M4Date,0,0);
FieldIsTransDate(TransDate);
RecordField(EndDate,M4Date,0,0);
RecordField(StartTime,M4Time,0,0);
RecordField(EndTime,M4Time,0,0);
RecordField(CostTime,M4Time,0,0);
RecordField(CUCode,M4Code,20,CUVc);
RecordField(CUName,M4Str,60,0);
RecordField(Contact,M4Str,60,0);
RecordField(Phone,M4Str,20,0);
RecordField(ActType,M4Code,5,ActTypeVc);
RecordField(ActResult,M4Code,5,ActTypeVc);
RecordField(OKFlag,M4Mark,0,0);
RecordField(PrioLevel,M4Long,0,0);
RecordField(PrivateFlag,M4Int,0,0);
RecordField(TodoFlag,M4Int,0,0);
RecordField(CalTimeFlag,M4Int,0,0);
RecordField(PRCode,M4Code,20,PRVc);
RecordField(ItemCode,M4Code,20,INVc);
RecordField(Comment,M4Str,200,0);
RecordField(Math,M4Matrix,0,0);
RecordField(LengthClass,M4Int,0,0);
RecordField(Resources,M4UStr,60,0);
RecordField(Invalid,M4Int,0,0);
FieldIsInvalid(Invalid);
RecordField(TimeClass,M4Code,5,0);
RecordField(SymbNr,M4Int,0,0);
RecordField(Supervisor,M4Code,10,UserVc);
RecordField(CreationDate,M4Date,0,0);
RecordField(LastChangedDate,M4Date,0,0);
RecordField(LangCode,M4Code,5,0);
RecordField(UserStr1,M4Str,255,0);
RecordField(UserStr2,M4Str,255,0);
RecordField(UserStr3,M4Str,255,0);
RecordField(UserStr4,M4Str,255,0);
RecordField(UserStr5,M4Str,255,0);
RecordField(UserVal1,M4UVal,0,0);
RecordField(UserVal2,M4UVal,0,0);
RecordField(UserVal3,M4UVal,0,0);
RecordField(UserDate1,M4Date,0,0);
RecordField(UserDate2,M4Date,0,0);
RecordField(UserDate3,M4Date,0,0);
RecordField(ArtCode,M4Code,20,INVc);
RecordField(SerialNr,M4Str,30,0);
RecordField(SVOSerNr,M4Long,0,0);
RecordField(ProdSerNr,M4Long,0,0);
RecordField(AlarmType,M4Int,0,0);
RecordField(AlarmWhen,M4Int,0,0);
RecordField(AlarmUnits,M4Int,0,0);
RecordField(ExternalType,M4Int,0,322);
RecordField(ExternalID,M4Str,60,0);
RecordField(InventoryNr,M4Code,30,0);
RecordField(ProdOpSerNr,M4Long,0,0);
RecordField(Mother,M4Long,0,0);
//=== 5.4
RecordField(TRSerNr,M4Long,0,0);
RecordField(RsrtEventSerNr,M4Long,0,0);
RecordField(AutoGenCallFlag,M4Int,0,0);
//RecordField(TestDuration,M4Duration,0,0);
RecordField(FromFileName,M4Str,20,0);
RecordField(FromSerNr,M4Str,20,0);
RecordField(ActTypeComment,M4Str,60,0);
RecordField(NextApprovers,M4UStr,200,UserVc);
RecordField(NextApproversType,M4Int,0,0);
RecordField(NextFYIPersons,M4UStr,200,UserVc);
RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
RecordField(Value,M4Val,0,0);
RecordField(ApprovalFwdPersons,M4UStr,200,UserVc);
//
ArrayBegin(Math,ActRowType,1);
ArrayField(TextCode,M4Code,5,0);
ArrayField(Text,M4Str,100,0);
//=== 7.2
ArrayField(Signature, M4Code, 20, 0);
EndArray;
//
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(CUCode);
KeySegment(CUCode);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);
SubSetKeyBegin2(UserMain);
AppendListFieldToKeyName(MainPersons);
AppendListFieldToKeyName(CCPersons);
KeySegment(TodoFlag);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(CUCode);
KeySegment(SerNr);
SubSetKeyBegin2(CalUserMain);
AppendListFieldToKeyName(MainPersons);
AppendListFieldToKeyName(CCPersons);
KeySegment(LengthClass);
KeySegment(TodoFlag);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(CUCode);
KeySegment(SerNr);
SubSetKeyBegin2(ResourceMain);
AppendListFieldToKeyName(Resources);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(CUCode);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(CUCode);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);
SubSetKeyBegin2(Comment);
StoreInBaseKey;
AppendFieldToKeyName(Mother);
KeySegment(Comment);
KeySegment(CUCode);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);
KeyBegin(TransDate);
KeySegment(TransDate);
KeySegment(CUCode);
KeySegment(StartTime);
KeySegment(SerNr);
KeyBegin(CUName);
KeySegment(CUName);
KeySegment(CUCode);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);
KeyBegin(ActType);
KeySegment(ActType);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);
KeyBegin(PrioLevel);
KeySegment(PrioLevel);
KeySegment(OKFlag);
KeySegment(SerNr);
SubSetKeyBegin2(CreationUserMain);
AppendListFieldToKeyName(MainPersons);
AppendListFieldToKeyName(CCPersons);
KeySegment(CreationDate);
KeySegment(TodoFlag);
KeySegment(SerNr);
SubSetKeyBegin2(ActTypeUserMain);
AppendListFieldToKeyName(MainPersons);
AppendListFieldToKeyName(CCPersons);
KeySegment(ActType);
KeySegment(TodoFlag);
KeySegment(SerNr);
SubSetKeyBegin2(CUCodeUserMain);
AppendListFieldToKeyName(MainPersons);
AppendListFieldToKeyName(CCPersons);
KeySegment(CUCode);
KeySegment(TodoFlag);
KeySegment(SerNr);
KeyBegin(ArtCode);
KeySegment(ArtCode);
KeySegment(SerialNr);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(SerNr);
SubSetKeyBegin2(DateUserMain);
AppendListFieldToKeyName(MainPersons);
AppendListFieldToKeyName(CCPersons);
KeySegment(CalTimeFlag);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);
SubSetKeyBegin2(DateTypeUserMain);
AppendListFieldToKeyName(MainPersons);
AppendListFieldToKeyName(CCPersons);
KeySegment(ActType);
KeySegment(TransDate);
KeySegment(CalTimeFlag);
KeySegment(StartTime);
KeySegment(SerNr);
SubSetKeyBegin2(EndDateUserMain);
AppendListFieldToKeyName(MainPersons);
AppendListFieldToKeyName(CCPersons);
KeySegment(TodoFlag);
KeySegment(EndDate);
KeySegment(StartTime);
KeySegment(CUCode);
KeySegment(SerNr);
KeyBegin(SVOSerNr);
KeySegment(SVOSerNr);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);
KeyBegin(CUCodeActType);
KeySegment(CUCode);
KeySegment(ActType);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);

SubSetKeyBegin2(OKFlagUserMain);
AppendListFieldToKeyName(MainPersons);
AppendListFieldToKeyName(CCPersons);
KeySegment(OKFlag);
KeySegment(TodoFlag);
KeySegment(SerNr);

KeyBegin(ProdNrOKFlag);
KeySegment(ProdSerNr);
KeySegment(OKFlag);
KeySegment(SerNr);

KeyBegin(ExternalID);
KeySegment(ExternalType);
KeySegment(ExternalID);
KeySegment(SerNr);

KeyBegin(PRCode);
KeySegment(PRCode);
KeySegment(OKFlag);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);

KeyBegin(ProdOpSerNr);
KeySegment(ProdOpSerNr);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(InventoryNr);
KeySegment(InventoryNr);
KeySegment(LengthClass);
KeySegment(TodoFlag);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);
SubSetKeyBegin2(ActSVOSerNr);
AppendFieldToKeyName(SVOSerNr);
KeySegment(SerNr);
SubSetKeyBegin2(ActComment);
StoreInBaseKey;
AppendFieldToKeyName(Mother);
KeySegment(OKFlag);
KeySegment(Comment);
KeySegment(CUCode);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);
/*
SubSetKeyBegin2(ProdNrUserMain);
AppendListFieldToKeyName(MainPersons);
AppendListFieldToKeyName(CCPersons);
KeySegment(ProdSerNr);
KeySegment(ActType);
KeySegment(OKFlag);
KeySegment(SerNr);
*/
KeyBegin(TRSerNr);
KeySegment(TRSerNr);
KeySegment(SerNr);
KeyBegin(RsrtEventSerNr);
KeySegment(RsrtEventSerNr);
KeySegment(SerNr);
SubSetKeyBegin2(TodoUserMain);
AppendListFieldToKeyName(MainPersons);
KeySegment(TodoFlag);
KeySegment(CalTimeFlag);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(FromFileName);
KeySegment(FromFileName);
KeySegment(FromSerNr);
KeySegment(SerNr);

KeyBegin(Mother);
KeySegment(Mother);
KeySegment(SerNr);

KeyBegin(CUCodeTypeDate);
KeySegment(CUCode);
KeySegment(ActType);
KeySegment(TransDate);
KeySegment(SerNr);

SubSetKeyBegin2(Acceptance);
AppendListFieldToKeyName(MainPersons);
KeySegment(ActType);
KeySegment(TodoFlag);
KeySegment(FromFileName);
KeySegment(FromSerNr);
KeySegment(SerNr);
SubSetKeyBegin2(AcptUserMain);
AppendListFieldToKeyName(MainPersons);
KeySegment(ActType);
KeySegment(ActResult);
KeySegment(SerNr);
KeyBegin(ActTypeResult);
KeySegment(ActType);
KeySegment(ActResult);
KeySegment(SerNr);

KeyBegin(ActActType);
KeySegment(ActType);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);
SubSetKeyBegin2(ActDateTypeUserMain);
AppendListFieldToKeyName(MainPersons);
AppendListFieldToKeyName(CCPersons);
KeySegment(ActType);
KeySegment(TransDate);
KeySegment(StartTime);
KeySegment(SerNr);
EndRecord;


//===============================================

RecordBegin(VConsumVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,255,0);
RecordField(Department, M4UStr, 20, 0);
RecordField(UserCode, M4UStr, 20, 0);
RecordField(ParentObj, M4UStr, 60, 0);
RecordField(InternalNumber,M4Str,255,0);
RecordField(DateIn,M4Date,0,0);
RecordField(DateOut,M4Date,0,0);
RecordField(Price,M4Val,0,0);
RecordField(Price2,M4Val,0,0);
RecordField(Account, M4UStr, 20, 0);
RecordField(Closed,M4Mark,0,0);
RecordField(Function1,M4Code,20,0);
RecordField(Comment0,M4Str,255,0);
RecordField(Comment1,M4Str,255,0);
RecordField(Comment2,M4Str,255,0);
RecordField(Comment3,M4Str,255,0);
RecordField(PPrice,M4Val,0,0);
RecordField(Curncy,M4Code,5,0);
RecordField(CurncyRate,M4Val,0,0);

MainKeyBegin(Code,0);
KeySegment(Code);
KeyBegin(Function1);
KeySegment(Function1);
KeySegment(Code);
KeyBegin(UserCode);
KeySegment(UserCode);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(Closed);
KeySegment(Closed);
KeySegment(Code);
KeyBegin(DMonthF);
KeySegment(Code);
KeySegment(UserCode);
KeySegment(ParentObj);
KeySegment(Function1);
EndRecord;

BlockBegin(VConsumPaySerBlock,-,"");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(TSerStart,M4Long,0,0);
ArrayField(TSerEnd,M4Long,0,0);
ArrayField(StartDate,M4Date,0,0);
ArrayField(EndDate,M4Date,0,0);
ArrayField(TSerCom,M4Str,20,0);
ArrayField(DonotGenTrans,M4Set,32,0);
EndArray;
EndBlock;

RecordBegin(VConsumPayVc,-,"");
RecordField(Code,M4Long,20,0);
SerialNoBlock(VConsumPaySerBlock);
RecordField(ObjStr, M4UStr, 60, 0);
RecordField(TransDate,M4Date,0,0);
RecordField(Summa,M4Val,0,0);
RecordField(Curncy,M4Code,5,0);
RecordField(CurncyRate,M4Val,0,0);
RecordField(OKSign,M4Mark,0,0);
RecordField(Comment0,M4Str,255,0);
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(ConsCode, M4Code, 20, VConsumVc);
ArrayField(ObjStrx, M4UStr, 60, ObjVc);
ArrayField(Name, M4Str, 255, VConsumVc);
ArrayField(PayVal, M4Val, 0, 0);
ArrayField(Comment1, M4Str, 255, 0);
ArrayField(Account, M4UStr, 20, 0);
EndArray;

MainKeyBegin(Code,0);
KeySegment(Code);
KeyBegin(TransDate);
KeySegment(TransDate);
KeySegment(Code);
KeyBegin(OKSign);
KeySegment(OKSign);
KeySegment(Code);
EndRecord;


RecordBegin(VBudgetVc,-,"");
RecordField(Code,M4Long,5,0);
RecordField(DMonth,M4Date,0,0);
RecordField(Function1,M4UStr,20,0);
RecordField(Comment1,M4Str,255,0);
RecordField(OKFlag,M4Mark,0,0);
RecordField(User,M4UStr,20,0);
RecordField(BSum,M4Val,0,0);

RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(Account,M4UStr,20,0);
ArrayField(ObjectStr,M4UStr,60,0);
ArrayField(Plan,M4Val,0,0);
ArrayField(Comment0,M4Str,255,0);
EndArray;
MainKeyBegin(Code,0);
KeySegment(Code);
KeyBegin(DMonth);
KeySegment(DMonth);
KeySegment(Code);

KeyBegin(DMonthF);
KeySegment(DMonth);
KeySegment(Function1);
KeySegment(Code);
//KeySegment(Code);
//KeyBegin(Function1);
//  KeySegment(Function1);
// KeySegment(Code);
EndRecord;


RecordBegin(VUserBudVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Function1,M4UStr,255,0);
MainKeyBegin(Code,0);
KeySegment(Code);
EndRecord;


BlockBegin(RegMovSerBlock,-,"");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(TSerStart,M4Long,0,0);
ArrayField(TSerEnd,M4Long,0,0);
ArrayField(StartDate,M4Date,0,0);
ArrayField(EndDate,M4Date,0,0);
ArrayField(TSerCom,M4Str,20,0);
ArrayField(DonotGenTrans,M4Set,32,0);
EndArray;
EndBlock;

RecordBegin(RegMovVc,-,"");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(RegMovSerBlock);
RecordField(ORNr,M4Long,0,0);
RecordField(RegDate,M4Date,0,0);
RecordField(SalesMan,M4Code,10,UserVc);
RecordField(Location,M4Code,10,LocationVc);
RecordField(DoneFlag,M4Mark,0,0);
RecordField(Comment,M4Str,255,0);
RecordField(Temp,M4Long,0,0);
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(ArtCode,M4Code,20,INVc);
ArrayField(ArtName,M4Str,60,0);
ArrayField(Quant,M4Val,0,0);
ArrayField(FromStock,M4Code,10,0);
ArrayField(ToStock,M4Code,10,0);
ArrayField(StockMov,M4Long,0,0);
EndArray;
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeySegment(ORNr);
KeySegment(SalesMan);
KeyBegin(ORNr);
KeySegment(ORNr);
KeySegment(SalesMan);
KeySegment(SerNr);
KeyBegin(DoneFlag);
KeySegment(DoneFlag);
KeySegment(SalesMan);
KeySegment(ORNr);
KeySegment(SerNr);
EndRecord;


RecordBegin(StateVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,255,0);
RecordField(Department,M4Code,20,0);
RecordField(Price,M4Val,0,0);
RecordField(Quant,M4Int,0,0);
RecordField(Func1,M4Code,20,ObjVc);
RecordField(Func2,M4Code,20,ObjVc);
RecordField(Superior,M4Code,20,StateVc);
RecordField(Contact,M4Str,60,0);
RecordField(Comment,M4Str,255,0);
RecordField(Closed,M4Mark,0,0);
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(ActionType,M4Code,20,ActTypeVc);
ArrayField(ActionName,M4Str,60,0);
ArrayField(Percent,M4Val,0,0);
ArrayField(ActionComment, M4Str, 255, 0);
ArrayField(Criteria1, M4Val, 0, 0);
ArrayField(Criteria2, M4Val, 0, 0);
ArrayField(Criteria3, M4Val, 0, 0);
ArrayField(Criteria4, M4Val, 0, 0);
ArrayField(Criteria5, M4Val, 0, 0);
EndArray;
MainKeyBegin(Code,0);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(Department);
KeySegment(Department);
KeySegment(Code);
KeyBegin(Func);
KeySegment(Func1);
KeySegment(Func2);
KeySegment(Department);
KeySegment(Code);
EndRecord;

RecordBegin(DocTypeVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Comment,M4Str,255,0);
RecordField(Parent,M4Code,20,0);
EndArray;
MainKeyBegin(Code,0);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Comment);
KeySegment(Code);
KeyBegin(Parent);
KeySegment(Parent);
KeySegment(Code);
EndRecord;

RecordBegin(DocsVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,255,0);
RecordField(Comment,M4Str,255,0);
RecordField(Post,M4Code,20,0);
RecordField(ActionType,M4Code,20,0);
RecordField(ActionClass,M4Code,20,0);
RecordField(Department,M4Code,20,0);
RecordField(DocType,M4Code,20,0);
RecordField(DateCh,M4Date,0,0);
EndArray;
MainKeyBegin(Code,0);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(Post);
KeySegment(Post);
KeySegment(Code);
KeyBegin(ActionType);
KeySegment(ActionType);
KeySegment(Code);
KeyBegin(ActionClass);
KeySegment(ActionClass);
KeySegment(Code);
KeyBegin(Department);
KeySegment(Department);
KeySegment(Code);
KeyBegin(DocType);
KeySegment(DocType);
KeySegment(Code);
EndRecord;


RecordBegin(CAgentGrVc,-,"");
RecordField(IdKey,M4Long,0,0);
RecordField(Desc,M4UStr,100,0);
RecordField(Comment,M4Str,60,0);
RecordField(RsType,M4Int,0,0);
RecordField(AccType,M4Int,0,0);
RecordField(Sign,M4Code,10,UserVc);
RecordField(DCSide,M4Int,0,0);
RecordField(DCSaldo,M4Int,0,0);
RecordField(Desc2,M4UStr,100,0);
RecordField(Desc3,M4UStr,100,0);
RecordField(SpecCode,M4Str,60,0);
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(LangCode,M4Code,5,0);
ArrayField(Text,M4Str,100,0);
EndArray;
MainKeyBegin(IdKey,0);
KeySegment(IdKey);
EndRecord;


RecordBegin(CrMotVc,-,""); //Критерии мотивации
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,60,0);
RecordField(Comment,M4Str,200,0);
RecordField(CrType,M4Int,0,0); //10.11.13 INAU - Тип критерия (0 - ежемесячный, 1 - квартальный)
MainKeyBegin(Code,0);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(Code);
EndRecord;

RecordBegin(CrMotStateVc,-,""); //Критерии мотивации по должностям
RecordField(Code,M4Code,20,StateVc); //Должность
RecordField(Name,M4Str,60,0); //Наименование
RecordField(Department, M4Code, 20, 0);//Подразделение
RecordField(OKFlag, M4Mark, 0, 0);//OK
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(CrCode,M4Code,20,CrMotVc);
ArrayField(CrName,M4Str,60,0);
ArrayField(CrWeight,M4Val,0,0);
ArrayField(PC0, M4Val, 0, 0);
ArrayField(PC25, M4Val, 0, 0);
ArrayField(PC50, M4Val, 0, 0);
ArrayField(PC75, M4Val, 0, 0);
ArrayField(PC100, M4Val, 0, 0);
EndArray;
MainKeyBegin(Code,0);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(Department);
KeySegment(Department);
KeySegment(Code);
EndRecord;

BlockBegin(MotivSerBlock,-,"");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(TSerStart,M4Long,0,0);
ArrayField(TSerEnd,M4Long,0,0);
ArrayField(StartDate,M4Date,0,0);
ArrayField(EndDate,M4Date,0,0);
ArrayField(TSerCom,M4Str,20,0);
ArrayField(DonotGenTrans,M4Set,32,0);
EndArray;
EndBlock;

RecordBegin(VMotivVc,-,"");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(MotivSerBlock);
RecordField(Date,M4Date,0,0);
RecordField(UserCode, M4Code, 10, 0);
RecordField(UsrName, M4Str, 200, 0);
RecordField(Department, M4Code, 10, 0);
RecordField(DepName, M4Str, 60, 0);
RecordField(OKFlag, M4Mark, 0, 0);
RecordField(OperCode, M4Code, 20, 0);
RecordField(StateJob, M4Code, 20, 0);
RecordField(StateName, M4Str, 60, 0);
RecordField(BonusFound, M4Val, 0, 0);
RecordField(MotiveCoeff, M4Val, 0, 0);
RecordField(Summa,M4Val,0,0);
RecordField(Curncy,M4Code,5,0);
RecordField(CurncyRate,M4Val,0,0);
RecordField(Comment0,M4Str,60,0);
RecordField(Math,M4Matrix,0,0);
RecordField(TRNumber,M4Long,0,0); // Created TR // 11.05.10 INAU
RecordField(TRIntYc,M4Int,0,0);   // Created TR // 11.05.10 INAU
RecordField(HasTrans, M4Mark, 0, 0); // 11.05.10 INAU
RecordField(ObjStr, M4UStr, 255, 0);
RecordField(OKUser, M4Code, 20, 0); //29.08.12 INAU
RecordField(ConfirmFlag, M4Mark, 0, 0); //29.08.12 INAU
RecordField(ConfirmUser, M4Code, 20, 0); //29.08.12 INAU
RecordField(OKUchr, M4Mark, 0, 0);//Подпись учредителя
RecordField(MotType, M4Int, 0, 0); //10.01.13 INAU - Тип (0 - ежемесячный, 1 - квартальный)
RecordField(TransDate,M4Date,0,0); //11.01.13 INAU - Создавать операцию датой
ArrayBegin(Math,-,1);
ArrayField(CrCode,M4Code,20,0);
ArrayField(CrName,M4Str,60,0);
ArrayField(CrWeight,M4Val,0,0);
ArrayField(Fact, M4Val, 0, 0);
ArrayField(Comment, M4Str, 250, 0);
ArrayField(SumF, M4Val, 0, 0);
ArrayField(PC, M4Val, 0, 0);
ArrayField(Comment1, M4Str, 250, 0);
ArrayField(Comment2, M4Str, 250, 0);
EndArray;
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(Date);
KeySegment(Date);
KeySegment(SerNr);
KeyBegin(UserCode);
KeySegment(UserCode);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(Department);
KeySegment(Department);
KeySegment(SerNr);
KeyBegin(OperCode);
KeySegment(OperCode);
KeySegment(Department);
KeySegment(UserCode);
KeySegment(Date);
KeySegment(SerNr);
EndRecord;



BlockBegin(VSetSetBlock, -, "");
RecordField(CheckedStock, M4Str, 255, 0);
RecordField(CheckStockGr, M4Code, 20, 0);
RecordField(CheckStock, M4Mark, 0, 0);
RecordField(AutoFillMotiv, M4Mark, 0, 0);
RecordField(AutoCheckAct, M4Mark, 0, 0);
RecordField(BlockAvans, M4Mark, 0, 0);
RecordField(CheckAcc, M4Str, 255, 0);
RecordField(CheckAvSum, M4Mark, 0, 0);
RecordField(StepCountMotiv, M4Mark, 0, 0);
RecordField(OpenTRWinMotiv, M4Mark, 0, 0); //Нужно ли открывать окно проводки из мотиваций //12.05.10 INAU
RecordField(EnableBlockBySearchKey, M4Mark, 0, 0);
RecordField(EnableORHistSave, M4Mark, 0, 0);
RecordField(ControlPricesList, M4Str, 255, 0);
RecordField(BlockedPriceList, M4Str, 255, 0);
RecordField(BlockPrices, M4Mark, 0, 0);
RecordField(CUControl, M4Mark, 0, 0);
RecordField(CUControlDeb, M4Mark, 0, 0);
RecordField(AllowedUser, M4Str, 255, 0);
RecordField(FillPlanFromIVVc, M4Mark, 0, 0);
RecordField(FillPlanCUFromIVVc, M4Mark, 0, 0);
RecordField(AutoCreateCUObjects, M4Mark, 0, 0);
RecordField(AutoCreateCUObjOTCode, M4Code, 20, 0);
RecordField(StockQuantControl, M4Mark, 0, 0);
RecordField(OrdQuantControl, M4Mark, 0, 0);
RecordField(DefaultStock, M4Code, 20, 0);
RecordField(ChangePayDate, M4Mark, 0, 0);
RecordField(UserChangePayDate, M4UStr, 200, 0);
RecordField(ViewSearchKeyWhenBlock, M4Mark, 0, 0);
RecordField(InvDateFromShipDate, M4Mark, 0, 0); //27.12.11 INAU - Дата CЧ-Ф = дата продажи
//RecordField(DueDateFromShipDate, M4Mark, 0, 0); //27.12.11 INAU - Отсрочка относительно даты продажи
RecordField(DiscountBySumUseIVSum, M4Mark, 0, 0); //03.02.12 INAU - Использовать сумму СЧ-Ф
RecordField(EnableCUAction, M4Mark, 0, 0); //Создавать деятельность при изменении карточки клиента
RecordField(EnableIVHist, M4Mark, 0, 0); // Вести историю сч/ф
RecordField(CashLocation, M4Code, 20, 0); //15.12.12 INAU - Склад нал.
RecordField(NoncashLocation, M4Code, 20, 0); //15.12.12 INAU - Склад безнал.
RecordField(TempLocation, M4Code, 20, 0); //19.12.12 INAU - "Временный" склад для приходуемого товара
RecordField(AutoCreateASObjects, M4Mark, 0, 0); //16.05.12 INAU - автосоздание объектов ОС
RecordField(AutoCreateASObjOTCode, M4Code, 20, 0);
RecordField(RekStart, M4Mark, 0, 0); // Добавление рекл. в сч.кл.
RecordField(SalesPlanYear, M4Int, 0, 0); //Год заполнения планов продаж
RecordField(DeliveryTimeList, M4UStr, 200, 0); //10.02.14 INAU - Список допустимого времени доставки (план)
RecordField(DeliveryTimeCheck, M4Mark, 0, 0); //10.02.14 INAU - Проверка времени доставки (план)
RecordField(AllowEmailSend, M4UStr, 200, 0); //03.05.15 INAU - Список пользователей с правом рассылать курс
EndBlock;

BlockBegin(VMotivAutoBlock, -, "");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(CrCode,M4Code,20,0);
ArrayField(Department,M4Code,20,0);
ArrayField(Fact, M4Val, 0, 0);
ArrayField(Comment, M4Str, 255, 0);
EndArray;
EndBlock;


BlockBegin(TTSerBlock,-,""); //SErialNum for "Tovarno-Transportnaya"
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(TSerStart,M4Long,0,0);
ArrayField(TSerEnd,M4Long,0,0);
ArrayField(StartDate,M4Date,0,0);
ArrayField(EndDate,M4Date,0,0);
ArrayField(TSerCom,M4Str,20,0);
ArrayField(DonotGenTrans,M4Set,32,0);
EndArray;
EndBlock;

RecordBegin(TTVc,-,""); //"Tovarno-Transportnaya"
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(TTSerBlock);
RecordField(Date,M4Date,0,0);
RecordField(TransDate, M4Date, 0, 0); //Дата отправки (факт)
RecordField(DocDate, M4Date, 0, 0);
RecordField(TransCode, M4Code, 10, 0);
RecordField(TransName, M4Str, 200, 0);
RecordField(AMCode, M4Code, 10, 0);
RecordField(AMName, M4Str, 200, 0);
RecordField(UserCode, M4Code, 20, 0);
FieldIsUser(UserCode);
RecordField(UsrName, M4Str, 200, 0);
RecordField(SalesGroup, M4Code, 5, 0);
FieldIsGroup(SalesGroup);
RecordField(Department, M4Code, 10, 0);
RecordField(Km, M4Val, 0, 0);
RecordField(OKFlag, M4Mark, 0, 0);
//RecordField(ObjStr, M4UStr, 100, 0);
RecordField(Stock,M4Code,20,0);
RecordField(Summa,M4Val,0,0);
RecordField(Curncy,M4Code,5,0);
RecordField(CurncyRate,M4Val,0,0);
RecordField(Comment0,M4Str,60,0);
RecordField(Mass,M4Val,0,0);
RecordField(Volume,M4Val,0,0);
RecordField(Quant,M4Val,0,0);
RecordField(Math,M4Matrix,0,0);
RecordField(Cost1kmPlan,M4Val,0,0); //30.06.11 INAU - стоимость 1 км, план
RecordField(Cost1km,M4Val,0,0); //30.06.11 INAU - стоимость 1 км, факт
RecordField(KmPlan,M4Val,0,0); //Планируемый километраж
RecordField(DeliveryCostPlan,M4Val,0,0); //Расходы на доставку, план
RecordField(DeliveryCost,M4Val,0,0); //Расходы на доставку, факт
RecordField(Mol, M4Mark, 0, 0); //2.04.12 Печатать МОЛ
RecordField(tSum,M4Val,0,0);//2.04.12 Сумма по товарам в накладной
RecordField(TransTime, M4Time, 0, 0);  //18.10.12 INAU - Время отправки (факт)
RecordField(TransitFlag, M4Mark, 0, 0);  //18.10.12 INAU - Признак транзита
RecordField(PalletsQnt, M4Qty, 0, 0);  //31.10.12 INAU - Кол-во паллет
RecordField(BoxesQnt, M4Qty, 0, 0);  //31.10.12 INAU - Кол-во ящиков
RecordField(FormalizedFlag, M4Mark, 0, 0); //27.02.13 INAU - признак "Оформлено"
RecordField(ActEndDate, M4Date, 0, 0); //27.02.13 INAU - граничная дата доставки (факт)
RecordField(ActEndTime, M4Time, 0, 0); //27.02.13 INAU - граничное время доставки (факт)
RecordField(LogFormalizedDate, M4Date, 0, 0); //27.02.13 INAU - дата оформления доставки (факт)
RecordField(LogFormalizedTime, M4Time, 0, 0); //27.02.13 INAU - время оформления доставки (факт)
RecordField(LogFormalizedUser, M4Code, 20, 0); //27.02.13 INAU - оформивший сотрудник
RecordField(LogNewDate,M4Date,0,0);     //02.07.14 by TGOR
RecordField(LogNewUser,M4UStr,20,0);    //02.07.14 by TGOR
RecordField(LogNewTime,M4Time,0,0);     //02.07.14 by TGOR
RecordField(LogSaveDate,M4Date,0,0);    //02.07.14 by TGOR
RecordField(LogSaveUser,M4UStr,20,0);   //02.07.14 by TGOR
RecordField(LogSaveTime,M4Time,0,0);    //02.07.14 by TGOR
RecordField(LogOKDate,M4Date,0,0);      //02.07.14 by TGOR
RecordField(LogOKUser,M4UStr,20,0);     //02.07.14 by TGOR
RecordField(LogOKTime,M4Time,0,0);      //02.07.14 by TGOR
ArrayBegin(Math,-,1);
ArrayField(IVCode,M4Code,20,0);
ArrayField(CUCode,M4Code,20,0);
ArrayField(CUName,M4Str,60,0);
ArrayField(IVWeight,M4Val,0,0);
ArrayField(IVQuant,M4Val,0,0);
ArrayField(IVVol,M4Val,0,0);
ArrayField(IVSum, M4Val, 0, 0);
ArrayField(DSum, M4Val, 0, 0);
ArrayField(Comment, M4Str, 255, 0);
ArrayField(ObjStr, M4UStr, 255, 0);
ArrayField(ActTime, M4Time, 0, 0); //30.06.11 INAU - время доставки (факт)
ArrayField(ActDate, M4Date, 0, 0); //26.01.12 INAU - время доставки (факт)
ArrayField(PlanTime, M4Time, 0, 0); //26.01.12 INAU - время доставки (план)
ArrayField(PlanDate, M4Date, 0, 0); //26.01.12 INAU - время доставки (план)
ArrayField(SMCode,M4Code,20,0); //16.05.12 код перемещения t+
ArrayField(PlanTimeSh, M4Time, 0, 0); //16.05.12 время отправки (план) t+
ArrayField(PlanDateSh, M4Date, 0, 0);//16.05.12 время отправки (план)  t+
ArrayField(Comment2, M4Str, 255, 0);
EndArray;
MainKeyBegin(SerNr, 1);
StoreInBaseKey;
AppendFieldToKeyName(Department);
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(UserCode);
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(Date);
KeySegment(Date);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(TransDate);
KeySegment(TransDate);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(TransCode);
KeySegment(TransCode);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(Department);
KeySegment(Department);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(Stock);
KeySegment(Stock);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
EndRecord;

RecordBegin(IVTTVc,-,""); //Служебный регистр, в который по ОК добавляются счета-фактуры. После записи в TTVc- удаляются
RecordField(IVCode,M4Code,20,0);
RecordField(TTCode,M4Code,20,0);
RecordField(TransDate, M4Date, 0, 0);
RecordField(Stock,M4Code,10,0);
RecordField(SalesGroup,M4Code,5,SalesGroupVc);
FieldIsGroup(SalesGroup);
RecordField(TransCode, M4Code, 10, 0);
RecordField(SalesMan, M4Code, 10, UserVc);
FieldIsUser(SalesMan);
RecordField(CUCode, M4Code, 20, 0);
RecordField(CUName, M4Str, 60, 0);
RecordField(Address, M4Str, 255, 0);
RecordField(Comment, M4Str, 255, 0);
RecordField(ObjStr, M4Str, 255, 0);
MainKeyBegin(IVCode,1);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
// AppendFieldToKeyName(Invalid);
KeySegment(IVCode);
SynchronizationIndex;
KeyBegin(Stock);
KeySegment(Stock);
KeySegment(IVCode);
KeyBegin(TransDate);
KeySegment(TransDate);
KeySegment(IVCode);
KeyBegin(CUCode);
KeySegment(CUCode);
KeySegment(IVCode);
KeyBegin(CUName);
KeySegment(CUName);
KeySegment(IVCode);
KeyBegin(TTCode);
KeySegment(TransDate);
KeySegment(Stock);
KeySegment(TTCode);
KeySegment(IVCode);
EndRecord;

BlockBegin(VSetTTBlock, -, "");
RecordField(AccDebet, M4Code, 10, 0);
RecordField(AccCredit, M4Code, 10, 0);
RecordField(ShipObjType, M4Code, 5, 0);
RecordField(AddObjDebet, M4UStr, 60, 0);
RecordField(AddObjCredit, M4UStr, 60, 0);
RecordField(MakeTrans, M4Mark, 0, 0);
RecordField(EnableIVTTVc, M4Mark, 0, 0); //27.03.10 INAU
RecordField(tAccDebet, M4Code, 10, 0); //23.07.12 t+
RecordField(tAccCredit, M4Code, 10, 0);
RecordField(tShipObjType, M4Code, 5, 0);
RecordField(ttAccDebet, M4Code, 10, 0); //03.09.12 t+
RecordField(ttAccCredit, M4Code, 10, 0);
RecordField(ttShipObjType, M4Code, 5, 0);
RecordField(tAddObjDebet, M4UStr, 200, 0);
RecordField(tAddObjCredit, M4UStr, 200, 0);

EndBlock;

//Печать товарных стикеров
RecordBegin(IStickerVc, -, "");
RecordField(ArtCode, M4Code, 20, 0);      //код товара
RecordField(ArtName, M4Str, 100, 0);      //Наименование
RecordField(Group, M4Code, 5, 0);         //Группа
RecordField(DispGroups, M4UStr, 200, 0);  //Классификация
RecordField(Math, M4TextField, 0, 0);
RecordField(FormCode, M4Code, 20, 0);     //Код формы печати
RecordField(MaxLineLen, M4Int, 0, 0);    //Длина строки
MainKeyBegin(ArtCode, 0);
  KeySegment(ArtCode);
KeyBegin(Group);
  KeySegment(Group);
  KeySegment(ArtCode);
KeyBegin(FormCode);
  KeySegment(FormCode);
  KeySegment(ArtCode);
EndRecord;

//История редактирования контактов
/*RecordBegin(CUEditHistVc,-,"");
RecordField(SerNr,M4Long,0,0);
RecordField(RegDate,M4Date,0,0);
RecordField(RegTime,M4Time,0,0);
RecordField(CUCode,M4Code,20,0);
RecordField(UserCode,M4Code,10,0);
RecordField(LogStr,M4Str,255,0);
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(RegDate);
KeySegment(RegDate);
KeySegment(CUCode);
KeySegment(UserCode);
KeySegment(SerNr);
KeyBegin(CUDate);
KeySegment(CUCode);
KeySegment(RegDate)
Keysegment(SerNr);
KeyBegin(UserDate);
KeySegment(UserCode);
KeySegment(RegDate);
Keysegment(SerNr);
EndRecord;
*/

BlockBegin(VCUNoteBlock, -, ""); //SerialNum for VCUNoteVc
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(TSerStart,M4Long,0,0);
ArrayField(TSerEnd,M4Long,0,0);
ArrayField(StartDate,M4Date,0,0);
ArrayField(EndDate,M4Date,0,0);
ArrayField(TSerCom,M4Str,20,0);
ArrayField(DonotGenTrans,M4Set,32,0);
EndArray;
EndBlock;

RecordBegin(VCUNoteVc,-,"");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(VCUNoteBlock);
RecordField(CustCode,M4Code,20,CUVc);
RecordField(SalesMan,M4Code,20,0);
FieldIsUser(SalesMan);
RecordField(UserName,M4Str,60,0);
RecordField(Date,M4Date,0,0);
RecordField(Comment,M4Str,250,0);
RecordField(OKFlag, M4Mark, 0, 0);
MainKeyBegin(SerNr,0);
StoreInBaseKey;
AppendFieldToKeyName(SalesMan);
AppendFieldToKeyName(CustCode);
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(CustCode);
KeySegment(CustCode);
KeySegment(SerNr);
KeyBegin(SalesMan);
KeySegment(SalesMan);
KeySegment(SerNr);
KeyBegin(Date);
KeySegment(Date);
KeySegment(SerNr);
SubsetKeyBegin2(CustSalesmanCode);
StoreInBaseKey;
AppendFieldToKeyName(CustCode);
KeySegment(SalesMan);
KeySegment(Date);
KeySegment(CustCode);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
EndRecord;

BlockBegin(LangToSalesBlock,-,""); // By DELPHI for Printform Invoice
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
  ArrayField(LangCode,M4UStr,10,0);     //Langcode
  ArrayField(Name,M4Str,40,0);    //Name of official salesman i.e. Starov Z.R.
  ArrayField(INN,M4UStr,16,0);      //INN or registry number
  ArrayField(Address,M4Str,100,0);     //Official address
EndArray;
EndBlock;

BlockBegin(VUserNoteBlock, -, ""); //Serial for UserNotes
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(TSerStart,M4Long,0,0);
ArrayField(TSerEnd,M4Long,0,0);
ArrayField(StartDate,M4Date,0,0);
ArrayField(EndDate,M4Date,0,0);
ArrayField(TSerCom,M4Str,20,0);
ArrayField(DonotGenTrans,M4Set,32,0);
EndArray;
EndBlock;

RecordBegin(VUserNoteVc,-,"");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(VUserNoteBlock);
RecordField(SalesMan,M4Code,20,0);
FieldIsUser(SalesMan);
RecordField(Date,M4Date,0,0);
RecordField(DateUpdate,M4Date,0,0);
RecordField(Comment, M4Str, 255, 0);
RecordField(Math,M4TextField,250,0);
MainKeyBegin(SerNr,0);
StoreInBaseKey;
AppendFieldToKeyName(SalesMan);
KeySegment(SerNr);
SynchronizationIndex;
SubsetKeyBegin2(SMan);
StoreInBaseKey;
AppendFieldToKeyName(SalesMan);
KeySegment(SerNr);
KeyBegin(Date);
KeySegment(Date);
KeySegment(SerNr);
KeyBegin(DateUpdate);
KeySegment(Date);
KeySegment(SerNr);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(SerNr);
EndRecord;

BlockBegin(VsetPriseBallBlock,-,"");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(Code,M4UStr,250,0); // Код товара или группы, или диапазон.
ArrayField(ArtName,M4Str,120,0); // Наименование
ArrayField(DivNum,M4Int,0,0); // Кратность
ArrayField(Ball,M4Int,0,0); // К-во баллов
ArrayField(RecicNumber,M4Int,0,0); // № Корзины
EndArray;
EndBlock;

BlockBegin(IBonusToBallBlock, -, ""); //Бонусное предложение к "Корзине"
RecordField(Math,M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(ArtCode, M4UStr, 250,0); //Список позиций бонусного предложения
ArrayField(SKUQty, M4Int, 0, 0); //Количество SKU из списка
ArrayField(Ball, M4Int, 0, 0); // К-во баллов
ArrayField(RecicNumber, M4UStr, 100, 0); // Номера "корзин"
EndArray;
EndBlock;

/* BlockBegin(VConfBlock, -, ""); //Serial for UserNotes
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(TSerStart,M4Long,0,0);
ArrayField(TSerEnd,M4Long,0,0);
ArrayField(StartDate,M4Date,0,0);
ArrayField(EndDate,M4Date,0,0);
ArrayField(TSerCom,M4Str,20,0);
ArrayField(DonotGenTrans,M4Set,32,0);
EndArray;
EndBlock;

RecordBegin(VConfVc,-,"");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(VConfBlock);
RecordField(SalesMan,M4Code,20,0);
FieldIsUser(SalesMan);
RecordField(Date,M4Date,0,0);
RecordField(DateUpdate,M4Date,0,0);
RecordField(Comment, M4Str, 255, 0);
RecordField(ConfGroup, M4Code, 20, 0);
RecordField(ConfUsers, M4UStr, 250, 0);
RecordField(Math,M4TextField,250,0);
MainKeyBegin(SerNr,0);
StoreInBaseKey;
AppendFieldToKeyName(SalesMan);
KeySegment(SerNr);
SynchronizationIndex;
SubsetKeyBegin2(SMan);
StoreInBaseKey;
AppendFieldToKeyName(SalesMan);
KeySegment(SerNr);
KeyBegin(Date);
KeySegment(Date);
KeySegment(SerNr);
KeyBegin(DateUpdate);
KeySegment(Date);
KeySegment(SerNr);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(SerNr);
EndRecord;
*/

BlockBegin(ORHistSerBlock,-,"");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(TSerStart,M4Long,0,0);
ArrayField(TSerEnd,M4Long,0,0);
ArrayField(StartDate,M4Date,0,0);
ArrayField(EndDate,M4Date,0,0);
ArrayField(TSerCom,M4Str,20,0);
ArrayField(DonotGenTrans,M4Set,32,0);
EndArray;
EndBlock;

RecordBegin(ORHistVc,-,"");
ImpExpLevel(3);
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(ORHistSerBlock);
RecordField(OrdNr,M4Long,0,0);
RecordField(OrdDate,M4Date,0,0);
RecordField(OrdPlanShip,M4Date,0,0);
RecordField(PayDeal,M4Code,2,0);
RecordField(ShipDeal,M4Code,5,0);
RecordField(OrdDateReady,M4Date,0,0);
FieldIsTransDate(OrdDate);
RecordField(OrdTime,M4Time,0,0);
RecordField(OKName,M4Ustr,20,0);
RecordField(OKDate,M4Date,0,0);
RecordField(OKTime,M4Time,0,0);
RecordField(SendDate,M4Date,0,0);
RecordField(SendTime,M4Time,0,0);
RecordField(Location,M4Code,20,0);
RecordField(CustCode,M4Code,20,CUVc);
RecordField(CustContact,M4Str,60,0);
RecordField(ContactPhone,M4Str,60,0);
RecordField(CustOrdNr,M4Str,60,0);
RecordField(SalesMan,M4UStr,60,UserVc);
FieldIsUser(SalesMan);
RecordField(SalesGroup,M4UStr,30,SalesGroupVc);
FieldIsGroup(SalesGroup);
RecordField(Department,M4Code,10,0);
RecordField(Sign,M4Code,20,0);
RecordField(OrdQty,M4Val,0,0);
RecordField(OrdBSum1,M4Val,0,0);
RecordField(OrdBSum2,M4Val,0,0);
RecordField(OrdCrCode,M4Code,5,0);
//
RecordField(TotDelivery,M4Val,0,0);
RecordField(TotDelQty,M4Val,0,0);
RecordField(TotDelBSum1,M4Val,0,0);
RecordField(TotDelBSum2,M4Val,0,0);
//
RecordField(TotShip,M4Val,0,0);
RecordField(TotShipQty,M4Val,0,0);
RecordField(TotShipSum1,M4Val,0,0);
RecordField(TotShipSum2,M4Val,0,0);
//
RecordField(TotIv,M4Val,0,0);
RecordField(TotIvQty,M4Val,0,0);
RecordField(TotIvBSum1,M4Val,0,0);
RecordField(TotIvBSum2,M4Val,0,0);
//
RecordField(TotRet,M4Val,0,0);
RecordField(TotRetQty,M4Val,0,0);
RecordField(TotRetBSum1,M4Val,0,0);
RecordField(TotRetBSum2,M4Val,0,0);
//
RecordField(Comment,M4Str,255,0);
RecordField(Carrier,M4UStr,60,0);

RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(Number,M4Long,0,0);
ArrayField(FType,M4Int,0,0);
ArrayField(FDate,M4Date,0,0);
ArrayField(OKDate,M4Date,0,0);
ArrayField(OKName,M4Str,25,0);
ArrayField(FTime,M4Time,0,0);
ArrayField(FQty,M4Val,0,0);
ArrayField(Location,M4Code,20,0);
ArrayField(BSum1,M4Val,0,0);
ArrayField(BSum2,M4Val,0,0);
ArrayField(Gather,M4Code,20,0);
ArrayField(SalesMan,M4Code,10,0);
ArrayField(CustCode,M4Code,20,0)
ArrayField(Sign,M4Code,10,0);
ArrayField(DelPostMan,M4Code,20,0);
ArrayField(DelPostDay,M4Date,0,0);
ArrayField(DelRetMan,M4Code,20,0);
ArrayField(DelRetDay,M4Date,0,0);
ArrayField(DelNumber,M4Long,10,0);
ArrayField(DelDate,M4Date,0,0);
ArrayField(DelTime,M4Time,0,0);
ArrayField(DelDocDate,M4Date,0,0);
ArrayField(DelSign,M4Code,10,0);
ArrayField(FComment1,M4Str,255,0);
ArrayField(FComment2,M4Str,255,0);
ArrayField(TransCode,M4Code,10,0);
ArrayField(FOKFlag,M4Mark,0,0);
ArrayField(ovst,M4Mark,0,0);
ArrayField(DateFromStock, M4Date, 0, 0);
EndArray;
RecordField(ovst,M4Int,0,0);
//FieldIsInvalid(ovst);

MainKeyBegin(SerNr,0);
KeySegment(SerNr);

SubsetKeyBegin2(OrdDate);
StoreInBaseKey;
AppendFieldToKeyName(Sign);
AppendFieldToKeyName(CustCode);
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(Department);
KeySegment(OrdDate);
KeySegment(OrdNr);
KeySegment(SerNr);

SubsetKeyBegin2(OrdNr);
StoreInBaseKey;
AppendMatrixFieldToKeyName(DelNumber,0);
KeySegment(OrdNr);
KeySegment(SerNr);

EndRecord;


RecordBegin(VItemGroupVc, -, "");
RecordField(Code, M4Code, 10, 0);
RecordField(ParentCode, M4Code, 10, 0);
RecordField(Name, M4Str, 60, 0);
RecordField(ParentName, M4Str, 60, 0);
MainKeyBegin(Code, 0);
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Parent);
KeySegment(ParentCode);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(ParentName);
KeySegment(ParentName);
KeySegment(Code);
EndRecord;

BlockBegin(IItemsExportBlock,-,"");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(SalesGroup,M4Code,20,0);
ArrayField(Locations,M4Str,200,0);
ArrayField(Path,M4Str,255,0);
ArrayField(AllItems,M4Int,0,0);
EndArray;
EndBlock;

RecordBegin(TempVc, -, "");
RecordField(f1, M4Str, 120, 0);
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(f2,M4Str,250,0);
ArrayField(f3,M4Str,250,0);
ArrayField(f4,M4Str,250,0);
ArrayField(f5,M4Str,250,0);
ArrayField(f6,M4Str,250,0);
ArrayField(f7,M4Str,250,0);
ArrayField(f8,M4Str,250,0);
ArrayField(f9,M4Str,250,0);
ArrayField(f10,M4Str,250,0);
ArrayField(f11,M4Str,250,0);
ArrayField(f12,M4Str,250,0);
ArrayField(f13,M4Str,250,0);
EndArray;
MainKeyBegin(f1, 0);
KeySegment(f1);
SynchronizationIndex;
EndRecord;

BlockBegin(IRetOrdSerBlock,-,"");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(TSerStart,M4Long,0,0);
ArrayField(TSerEnd,M4Long,0,0);
ArrayField(StartDate,M4Date,0,0);
ArrayField(EndDate,M4Date,0,0);
ArrayField(TSerCom,M4Str,20,0);
ArrayField(DonotGenTrans,M4Set,32,0);
EndArray;
EndBlock;

RecordBegin(IRetOrdTypesVc,-,"");
RecordField(Code,M4Code,10,0);
RecordField(Name,M4Str,50,0);
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(Locations,M4UStr,200,0);
ArrayField(RetLocation,M4Code,10,0);
ArrayField(DefObjects,M4UStr,60,0);
EndArray;
MainKeyBegin(Code,0);
KeySegment(Code);
EndRecord;

RecordBegin(IRetOrdVc,-,"");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(IRetOrdSerBlock);
RecordField(RegDate,M4Date,0,0);
RecordField(CustCode,M4Code,20,0);
RecordField(CustName,M4Str,255,0);
RecordField(FileNr,M4Long,0,0);
RecordField(FileType,M4Int,0,0);
RecordField(OrderedFlag,M4Mark,0,0);
RecordField(ReceivedFlag,M4Mark,0,0);
RecordField(OKFlag,M4Mark,0,0);
RecordField(Objects,M4UStr,60,0);
RecordField(SumOrdered,M4UVal,0,0);
RecordField(SumReceived,M4UVal,0,0);
RecordField(Math,M4Matrix,0,0);
//---
RecordField(LogOrderedDate,M4Date,0,0);
RecordField(LogOrderedTime,M4Time,0,0);
RecordField(OrderedBy,M4Str,10,0);
RecordField(LogReceivedDate,M4Date,0,0);
RecordField(LogReceivedTime,M4Time,0,0);
RecordField(ReceivedBy,M4Str,10,0);
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveTime,M4Time,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogOKDate,M4Date,0,0);
RecordField(LogOKTime,M4Time,0,0);
RecordField(LogOKUser,M4UStr,20,0);
RecordField(InitLocation, M4Code, 10, 0);
//---
RecordField(Comment,M4Str,255,0);
ArrayBegin(Math,-,1);
ArrayField(ArtCode,M4Code,20,0);
ArrayField(ArtName,M4Str,100,0);
ArrayField(FileNr,M4Long,0,0);
ArrayField(QntOrdered,M4Val,0,0);
ArrayField(QntReceived,M4Val,0,0);
ArrayField(RetCode,M4Code,10,0);
ArrayField(RetName,M4Str,50,0);
ArrayField(Objects,M4UStr,60,0);
ArrayField(Comment,M4Str,255,0);
ArrayField(CreatedFileNr,M4Long,0,0);
EndArray;
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(RegDate);
KeySegment(RegDate);
KeySegment(CustCode);
KeySegment(SerNr);
KeyBegin(CustCode);
KeySegment(CustCode);
KeySegment(SerNr);
EndRecord;

BlockBegin(IMappingBlock,-,"");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(Department,M4Code,10,0);
ArrayField(SalesGroup,M4Code,5,0);
ArrayField(CustCat,M4Code,5,0);
ArrayField(Object,M4Ustr,60,0);
ArrayField(Locations,M4UStr,200,0);
EndArray;
EndBlock;

BlockBegin(CUControlBlock,-,"");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(SalesGroup, M4Code, 5, 0);
ArrayField(PayDeal, M4Code, 5, 0);
ArrayField(PLCode, M4Code, 5, 0);
ArrayField(RebCode, M4Code, 5, 0);
ArrayField(CurncyCode, M4Code, 5, 0);
ArrayField(Comment2, M4Str, 5, 0);
ArrayField(Comment, M4Str, 200, 0);
ArrayField(Classification, M4Str, 200, 0);
EndArray;
EndBlock;


BlockBegin(VPlanINBlock,-,"");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(ArtCode, M4UStr, 20, 0);
ArrayField(StartDate,M4Date,0,0);
ArrayField(EndDate,M4Date,0,0);
ArrayField(Comment, M4Str, 200, 0);
EndArray;
EndBlock;


BlockBegin(ImportINExcelBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Name, M4Str, 100, 0);
ArrayField(Unittext, M4Str, 10, 0);
ArrayField(Group, M4Code, 5, 0);
ArrayField(UPrice1, M4Val, 0, 0);
ArrayField(AlternativeCode, M4Str, 40, 0);
ArrayField(DispGroups, M4UStr, 200, 0);
ArrayField(BarCode, M4Code, 20, 0);
EndArray;
EndBlock;


RecordBegin(IVehicleVc,-,""); //30.06.11 INAU - карточка ТС
RecordField(Code,M4Code,60,0);
RecordField(Name,M4Str,60,0);
RecordField(ObjType,M4Code, 5, 0);
RecordField(Driver,M4Code,10,0); //Водитель
RecordField(VINCode,M4Code,20,0); //VIN-код
RecordField(RegNumber,M4Str,60,0); //Гос. номер
RecordField(ManufYear,M4Int,0,0); //Год производства
RecordField(PurchDate,M4Date,0,0); //Дата приобретения
RecordField(EngineCapacity,M4Int,0,0); //Объем двигателя
RecordField(FuelCode,M4Code,10,0);
RecordField(Color,M4Str,60,0);
RecordField(Cost1km,M4Val,0,0); //Затраты на 1 км пробега
RecordField(FuelCons,M4Val,0,0); //Расход горючего на 100 км
RecordField(Mileage,M4Val,0,0); //Пробег
RecordField(Comment,M4Str,200,0);
RecordField(DrCode,M4Code,20,0);//Код водителя
MainKeyBegin(Code,0);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(Driver);
KeySegment(Driver);
KeySegment(Code);
KeyBegin(RegNumber);
KeySegment(RegNumber);
KeySegment(Code);
KeyBegin(ObjType);
KeySegment(ObjType);
KeySegment(Code);
KeyBegin(ManufYear);
KeySegment(ManufYear);
KeySegment(Code);
KeyBegin(PurchDate);
KeySegment(PurchDate);
KeySegment(Code);
KeyBegin(FuelCode);
KeySegment(FuelCode);
KeySegment(Code);
KeyBegin(Cost1km);
KeySegment(Cost1km);
KeySegment(Code);
KeyBegin(FuelCons);
KeySegment(FuelCons);
KeySegment(Code);
KeyBegin(Mileage);
KeySegment(Mileage);
KeySegment(Code);
EndRecord;


BlockBegin(VConfSerBlock,-,"");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(TSerStart,M4Long,0,0);
ArrayField(TSerEnd,M4Long,0,0);
ArrayField(StartDate,M4Date,0,0);
ArrayField(EndDate,M4Date,0,0);
ArrayField(TSerCom,M4Str,20,0);
ArrayField(DonotGenTrans,M4Set,32,0);
EndArray;
EndBlock;

RecordBegin(VConfVc, -, ""); //Форум
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(VConfSerBlock);
RecordField(Title, M4Str, 200, 0);
RecordField(Date, M4Date, 0, 0);
RecordField(Time, M4Time, 0, 0);
RecordField(UpdDate, M4Date, 0, 0);
RecordField(UpdTime, M4Time, 0, 0);
RecordField(SalesMan, M4Code, 20, 0);
RecordField(UserName, M4Str, 200, 0);
FieldIsUser(SalesMan);
RecordField(SalesGroup, M4Code, 20, 0);
FieldIsGroup(SalesGroup);
RecordField(UpdUser, M4Code, 20, 0);
RecordField(Invalid, M4Int, 0, 0);
FieldIsInvalid(Invalid);
RecordField(OKFlag,M4Mark,0,0);
RecordField(Math, M4TextField, 0, 0);
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(SalesMan);
KeySegment(SerNr);
KeyBegin(Date);
KeySegment(Date);
KeySegment(SerNr);
KeyBegin(UpdDate);
KeySegment(UpdDate);
KeySegment(SerNr);
KeyBegin(SalesMan);
KeySegment(SalesMan);
KeySegment(SerNr);
KeyBegin(Title);
KeySegment(Title);
KeySegment(SerNr);
KeyBegin(Invalid);
KeySegment(Invalid);
KeySegment(SerNr);
EndRecord;

BlockBegin(tVarOfInfBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(VarOfInf, M4Str, 50, 0);
EndArray;
EndBlock;

BlockBegin(VTicketSerBlock,-,"");
XXSERBLOCK;

RecordBegin(VTicketVc,-,""); //09.09.11 DELPHI
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(VTicketSerBlock);
RecordField(UsrCode, M4Code, 20, 0); // Код клиента
RecordField(ServCode, M4Code, 20, 0); // Код сотрудника поддержки
RecordField(UsrGroup, M4Code, 20, 0); // Код группы клиента
//FieldIsGroup(UsrGroup);
RecordField(DateSend, M4Date, 0, 0); //Дата отправки
RecordField(DateRec, M4Date, 0, 0); // Дата получения
RecordField(DateSol, M4Date, 0, 0); // Дата решения
RecordField(TimeSend, M4Time, 0, 0); //Время отправки
RecordField(TimeRec, M4Time, 0, 0); // Время получения
RecordField(TimeSol, M4Time, 0, 0); // Время решения
RecordField(SendFlag, M4Mark, 0, 0); // Отправлено
RecordField(RecFlag, M4Mark, 0, 0); // Получено
RecordField(SolFlag, M4Mark, 0, 0); // Решено
RecordField(UsrName, M4Str, 200, 0);
RecordField(UsrAppoint, M4Code, 20, 0);
RecordField(UsrDepart, M4Code, 20, 0);
RecordField(ServName, M4Str, 200, 0);
RecordField(ServAppoint, M4Code, 20, 0);
RecordField(ServDepart, M4Code, 20, 0);
RecordField(ParentNr, M4Long, 0, 0);
RecordField(Comment, M4Str, 200, 0);
RecordField(TypeOfTicket, M4Code, 20, 0);
RecordField(Math, M4TextField, 0, 0);
RecordField(CastCode, M4Code, 20, 0);
//FieldIsUser(CastCode); //----t+  Код сотрудника-"Заказчика"
RecordField(CastName, M4Str, 200, 0);
RecordField(CastAppoint, M4Code, 20, 0);
RecordField(CastDepart, M4Code, 20, 0);
RecordField(ActionType, M4Code, 20, 0); //----t+ Вид деятельности
RecordField(ActNr, M4Code, 20, 0);//----t+ Номер созданной деятельности
RecordField(VarOfInf, M4Str, 200, 0);//----t+ Способ информирования
RecordField(CostTime, M4Long, 0, 0);//----t+ Время, затраченное на решение проблемы
RecordField(PlanDate, M4Date, 0, 0); // Плановый срок сдачи продукта
RecordField(TestDate, M4Date, 0, 0); // Дата получения продукта на тестирование
RecordField(TestFlag, M4Mark, 0, 0); // Получено на тестирование
RecordField(DateDes, M4Date, 0, 0); // Дата, желаемая заказчиком
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(UsrCode);
KeySegment(UsrCode);
KeySegment(SerNr);
KeyBegin(ServCode);
KeySegment(ServCode);
KeySegment(SerNr);
KeyBegin(ServDepart);
KeySegment(ServDepart);
KeySegment(SerNr);
KeyBegin(UsrDepart);
KeySegment(UsrDepart);
KeySegment(SerNr);
KeyBegin(DateSend);
AppendFieldToKeyName(UsrCode);
AppendFieldToKeyName(ServCode);
KeySegment(DateSend);
KeySegment(SerNr);
KeyBegin(DateSol);
AppendFieldToKeyName(UsrCode);
AppendFieldToKeyName(ServCode);
KeySegment(DateSol);
KeySegment(SerNr);
KeyBegin(DateFull);
AppendFieldToKeyName(UsrCode);
AppendFieldToKeyName(ServCode);
KeySegment(DateSend);
KeySegment(DateRec);
KeySegment(DateSol);
KeySegment(SerNr);
KeyBegin(SendFlag);
KeySegment(SendFlag);
KeySegment(SerNr);
KeyBegin(RecFlag);
KeySegment(RecFlag);
KeySegment(SerNr);
KeyBegin(SolFlag);
KeySegment(SolFlag);
KeySegment(SerNr);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(SerNr);
KeyBegin(ParentNr);
KeySegment(ParentNr);
KeySegment(SerNr);
KeyBegin(UsrGroup);
KeySegment(UsrGroup);
KeySegment(SerNr);
KeyBegin(TypeOfTicket);
KeySegment(TypeOfTicket);
KeySegment(SerNr);
KeyBegin(CastCode);
KeySegment(CastCode);
KeySegment(SerNr);
EndRecord;

BlockBegin(tVTicketSerBlock,-,"");    //"Задачи"
XXSERBLOCK;

RecordBegin(tVTicketsVc,-,""); //19.06.12 tata
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tVTicketSerBlock);
RecordField(UsrCode, M4Code, 20, 0); // Код клиента
RecordField(ServCode, M4Code, 20, 0); // Код сотрудника поддержки
RecordField(UsrGroup, M4Code, 20, 0); // Код группы клиента
RecordField(DateSend, M4Date, 0, 0); //Дата отправки
RecordField(DateRec, M4Date, 0, 0); // Дата получения
RecordField(DateSol, M4Date, 0, 0); // Дата решения
RecordField(TimeSend, M4Time, 0, 0); //Время отправки
RecordField(TimeRec, M4Time, 0, 0); // Время получения
RecordField(TimeSol, M4Time, 0, 0); // Время решения
RecordField(SendFlag, M4Mark, 0, 0); // Отправлено
RecordField(RecFlag, M4Mark, 0, 0); // Получено
RecordField(SolFlag, M4Mark, 0, 0); // Решено
RecordField(UsrName, M4Str, 200, 0);
RecordField(UsrAppoint, M4Code, 20, 0);
RecordField(UsrDepart, M4Code, 20, 0);
RecordField(ServName, M4Str, 200, 0);
RecordField(ServAppoint, M4Code, 20, 0);
RecordField(ServDepart, M4Code, 20, 0);
RecordField(ParentNr, M4Long, 0, 0);
RecordField(Comment, M4Str, 200, 0);
RecordField(TypeOfTicket, M4Code, 20, 0);
RecordField(Math, M4TextField, 0, 0);
RecordField(CastCode, M4Code, 20, 0);
RecordField(CastName, M4Str, 200, 0);
RecordField(CastAppoint, M4Code, 20, 0);
RecordField(CastDepart, M4Code, 20, 0);
RecordField(VarOfInf, M4Str, 200, 0);//----t+ Способ информирования
RecordField(CostTime, M4Long, 0, 0);//----t+ Время, затраченное на решение проблемы
RecordField(PlanDate, M4Date, 0, 0); // Плановый срок сдачи продукта
RecordField(TestDate, M4Date, 0, 0); // Дата получения продукта на тестирование
RecordField(TestFlag, M4Mark, 0, 0); // Получено на тестирование
RecordField(DateDes, M4Date, 0, 0); // Дата, желаемая заказчиком
RecordField(Copy, M4UStr, 200, 0);//----t+ Копия
RecordField(Status, M4Mark, 0, 0); //статус тикета (вопрос/ответ)
RecordField(TestTime, M4Long, 0, 0);//----t+ Время, затраченное на тестирование решения
RecordField(Math2, M4Matrix, 0, 0);
RecordField(Rating, M4Int, 0, 0);// рейтинг исполнителя
RecordField(Err, M4Int, 0, 0);// кол-во претензий
RecordField(Privacy, M4Mark, 0, 0); //Конфиденциальность
RecordField(Free, M4UStr, 250, 0); //Отказ от оповещений
RecordField(TimeDes, M4Time, 0, 0); // Желаемое время решения
ArrayBegin(Math2, -, 1);
ArrayField(SmsDate, M4Date, 0, 0); // Дата сообщения
ArrayField(SmsTime, M4Time, 0, 0); // Время сообщения
ArrayField(Sign, M4Code, 20, 0); //подпись
ArrayField(CurStatus, M4Int, 0, 0); //статус
ArrayField(PrStatus, M4Int, 0, 0); //статус просмотренно
EndArray;
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(UsrCode);
KeySegment(UsrCode);
KeySegment(SerNr);
KeyBegin(ServCode);
KeySegment(ServCode);
KeySegment(SerNr);
KeyBegin(ServDepart);
KeySegment(ServDepart);
KeySegment(SerNr);
KeyBegin(UsrDepart);
KeySegment(UsrDepart);
KeySegment(SerNr);
KeyBegin(DateSend);
AppendFieldToKeyName(UsrCode);
AppendFieldToKeyName(ServCode);
KeySegment(DateSend);
KeySegment(SerNr);
KeyBegin(DateSol);
AppendFieldToKeyName(UsrCode);
AppendFieldToKeyName(ServCode);
KeySegment(DateSol);
KeySegment(SerNr);
KeyBegin(DateFull);
AppendFieldToKeyName(UsrCode);
AppendFieldToKeyName(ServCode);
KeySegment(DateSend);
KeySegment(DateRec);
KeySegment(DateSol);
KeySegment(SerNr);
KeyBegin(SendFlag);
KeySegment(SendFlag);
KeySegment(SerNr);
KeyBegin(RecFlag);
KeySegment(RecFlag);
KeySegment(SerNr);
KeyBegin(SolFlag);
KeySegment(SolFlag);
KeySegment(SerNr);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(SerNr);
KeyBegin(ParentNr);
KeySegment(ParentNr);
KeySegment(SerNr);
KeyBegin(UsrGroup);
KeySegment(UsrGroup);
KeySegment(SerNr);
KeyBegin(TypeOfTicket);
KeySegment(TypeOfTicket);
KeySegment(SerNr);
KeyBegin(CastCode);
KeySegment(CastCode);
KeySegment(SerNr);
KeyBegin(Status);
KeySegment(Status);
KeySegment(SerNr);
EndRecord;

BlockBegin(VTicketTypeBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Name, M4Str, 100, 0);
ArrayField(Department, M4Code, 20, 0);
ArrayField(Parent, M4Code, 20, 0);
ArrayField(RegName, M4UStr, 50, 0);
EndArray;
EndBlock;

BlockBegin(VTicketSetBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
EndArray;
EndBlock;

BlockBegin(VObjectiveSerBlock,-,"");
XXSERBLOCK;

RecordBegin(VObjectiveVc,-,""); //09.09.11 DELPHI
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(VObjectiveSerBlock);
RecordField(UsrCode, M4Code, 20, 0); // Код клиента
RecordField(ServCode, M4Code, 20, 0); // Код сотрудника поддержки
//FieldIsUser(ServCode);
RecordField(UsrGroup, M4Code, 20, 0); // Код группы клиента
//FieldIsGroup(UsrGroup);
RecordField(DatePlan, M4Date, 0, 0); //Желаемая дата исполнения
RecordField(TimePlan, M4Time, 0, 0); //Желаемое время исполнения
RecordField(DateSend, M4Date, 0, 0); //Дата
RecordField(TimeSend, M4Time, 0, 0); //Время
RecordField(DateRec, M4Date, 0, 0); // Дата получения АВТО
RecordField(TimeRec, M4Time, 0, 0); // Время получения АВТО
RecordField(DateConcord, M4Date, 0, 0); // Дата согласования
RecordField(TimeConcord, M4Time, 0, 0); // Время согласования
RecordField(DateStart, M4Date, 0, 0); // Дата принятия к исполнению
RecordField(TimeStart, M4Time, 0, 0); // Время принятия к исполнению
RecordField(DateEnd, M4Date, 0, 0); // Дата планируемой сдачи
RecordField(TimeEnd, M4Time, 0, 0); // Время планируемой сдачи
RecordField(DateSol, M4Date, 0, 0); // Дата завершения
RecordField(TimeSol, M4Time, 0, 0); // Время завершения
RecordField(DateTest, M4Date, 0, 0); // Дата внедрения
RecordField(TimeTest, M4Time, 0, 0); // Время внедрения

RecordField(SendFlag, M4Mark, 0, 0); // Отправлено //назначено исполнителю
RecordField(RecFlag, M4Mark, 0, 0); // Получено //исполнителем
RecordField(StartFlag, M4Mark, 0, 0); // Принято к исполнению //отделом
RecordField(SolFlag, M4Mark, 0, 0); // Назначено исполнителю // закончено
RecordField(TestFlag, M4Mark, 0, 0); // Внедрено
RecordField(Invalid, M4Int, 0, 0);
FieldIsInvalid(Invalid);

RecordField(UsrName, M4Str, 200, 0);
RecordField(UsrAppoint, M4Code, 20, 0);
RecordField(UsrDepart, M4Code, 20, 0);
RecordField(ServName, M4Str, 200, 0);
RecordField(ServAppoint, M4Code, 20, 0);
RecordField(ServDepart, M4Code, 20, 0);
RecordField(ParentNr, M4Long, 0, 0);
RecordField(Comment, M4Str, 200, 0);
RecordField(Concordance, M4UStr, 200, 0); // Согласовавшие лица, список по кнопочке удаляется/ставится до момента DateStart
// ISO IEEE 830-1998
RecordField(AIM, M4Str, 200, 0); //Назначение 1.1
RecordField(UserClass, M4UStr, 200, 0); //Групы пользователей 1.1
RecordField(DeparmentList, M4UStr, 200, 0); //Заинтересованные отделы
RecordField(SoftName, M4Str, 200, 0); //Наименование 1.2
RecordField(SoftMnemo, M4Str, 200, 0); //Мнемоническое имя
RecordField(UserI, M4UStr, 200, 0); // Hansa: Отчет, регистр, настройка, обслуживание, экспорт, импорт. Прочие: почта, макрос, программа, канал связи
RecordField(HardwareI, M4UStr, 200, 0); //используемое hardware
RecordField(SoftwareI, M4Ustr, 200, 0); // Hansa, 1C, Excel, pop3/smtp, etc...
RecordField(LinkI, M4UStr, 200, 0); // Internet, Local, phone, vpn, all auth, all guests
RecordField(TypeOfObj, M4Mark, 0, 0); //Тип ТЗ доработка/новое
RecordField(SoftType, M4TextField, 0, 0); //Описание применения 1.2
RecordField(Math, M4Matrix, 0, 0); // Поля интерфейса, если отчет, регистр, настройка, обслуж., и т.д. по Хансе - ОБЯЗАТЕЛЬНО
RecordField(TimeSum, M4Long, 0, 0); // Время, затраченное на реализацию t+
RecordField(ActionType, M4Code, 20, 0);// Вид деятельности
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0); // Тип Вход/выход
ArrayField(Mnemo, M4UStr, 20, 0); // Мнемонический код
ArrayField(Name, M4Str, 100, 0); //Наименование
ArrayField(Text, M4Code, 200, 0); //Описание
ArrayField(Comment2, M4Code, 200, 0); //Описание
ArrayField(Comment3, M4Code, 200, 0); //Описание
EndArray;
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(UsrCode);
KeySegment(UsrCode);
KeySegment(SerNr);
KeyBegin(ServCode);
KeySegment(ServCode);
KeySegment(SerNr);
KeyBegin(ServDepart);
KeySegment(ServDepart);
KeySegment(SerNr);
KeyBegin(UsrDepart);
KeySegment(UsrDepart);
KeySegment(SerNr);
KeyBegin(DateSend);
AppendFieldToKeyName(UsrCode);
AppendFieldToKeyName(ServCode);
KeySegment(DateSend);
KeySegment(SerNr);
KeyBegin(DateSol);
AppendFieldToKeyName(UsrCode);
AppendFieldToKeyName(ServCode);
KeySegment(DateSol);
KeySegment(SerNr);
KeyBegin(DateFull);
AppendFieldToKeyName(UsrCode);
AppendFieldToKeyName(ServCode);
KeySegment(DateSend);
KeySegment(DateRec);
KeySegment(DateSol);
KeySegment(DateTest);
KeySegment(SerNr);
KeyBegin(SendFlag);
KeySegment(SendFlag);
KeySegment(SerNr);
KeyBegin(RecFlag);
KeySegment(RecFlag);
KeySegment(SerNr);
KeyBegin(SolFlag);
KeySegment(SolFlag);
KeySegment(SerNr);
KeySegment(SerNr);
KeyBegin(UsrGroup);
KeySegment(UsrGroup);
KeySegment(SerNr);
KeyBegin(SoftMnemo);
KeySegment(SoftMnemo);
KeySegment(SerNr);
KeyBegin(SoftName);
KeySegment(SoftName);
KeySegment(SerNr);
KeyBegin(StartFlag);
KeySegment(StartFlag);
KeySegment(SerNr);
KeyBegin(DateConcord);
KeySegment(DateConcord);
KeySegment(SerNr);
EndRecord;

BlockBegin(VDepartmentBossBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Department, M4Code, 20, 0);
ArrayField(Boss, M4Code, 20, 0);
EndArray;
EndBlock;

BlockBegin(VObjectiveTypeBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(OType, M4Code, 20, 0);
ArrayField(Comment, M4Str, 200, 0);
EndArray;
EndBlock;

RecordBegin(VItemInOrdVc, -, "");
RecordField(Code, M4Code, 20, INVc);
RecordField(Location, M4Code, 10, 0);
FieldIsLocation(Location);
RecordField(OrdQty, M4Qty, 0, 0);
MainKeyBegin(Code, 1);
StoreInBaseKey;
AppendFieldToKeyName(Location);
KeySegment(Code);
SynchronizationIndex;
EndRecord;


BlockBegin(VArcFactSerBlock,-,"");
XXSERBLOCK;

RecordBegin(VArcFactVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(VArcFactSerBlock);
RecordField(ArtCode, M4Code, 20, 0);
RecordField(ArtName, M4Str, 200, 0);
RecordField(Date, M4Int, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(SalesGroup, M4Str, 20, 0);
ArrayField(Name, M4Str, 100, 0);
ArrayField(Jan, M4Val, 0 ,0);
ArrayField(JanM, M4Val, 0 ,0);
ArrayField(Feb, M4Val, 0 ,0);
ArrayField(FebM, M4Val, 0 ,0);
ArrayField(Mar, M4Val, 0 ,0);
ArrayField(MarM, M4Val, 0 ,0);
ArrayField(Apr, M4Val, 0 ,0);
ArrayField(AprM, M4Val, 0 ,0);
ArrayField(May, M4Val, 0 ,0);
ArrayField(MayM, M4Val, 0 ,0);
ArrayField(Jun, M4Val, 0 ,0);
ArrayField(JunM, M4Val, 0 ,0);
ArrayField(Jul, M4Val, 0 ,0);
ArrayField(JulM, M4Val, 0 ,0);
ArrayField(Aug, M4Val, 0 ,0);
ArrayField(AugM, M4Val, 0 ,0);
ArrayField(Sep, M4Val, 0 ,0);
ArrayField(SepM, M4Val, 0 ,0);
ArrayField(Oct, M4Val, 0 ,0);
ArrayField(OctM, M4Val, 0 ,0);
ArrayField(Nov, M4Val, 0 ,0);
ArrayField(NovM, M4Val, 0 ,0);
ArrayField(Dec, M4Val, 0 ,0);
ArrayField(DecM, M4Val, 0 ,0);
EndArray;
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
AppendFieldToKeyName(ArtCode);
AppendFieldToKeyName(Date);
KeySegment(SerNr);
SynchronizationIndex;
SubsetKeyBegin2(SGroup);
StoreInBaseKey;
KeySegment(ArtCode);
KeySegment(Date);
KeySegment(SerNr);
KeyBegin(ArtCode);
KeySegment(ArtCode);
KeySegment(Date);
KeySegment(SerNr);
KeyBegin(Date);
KeySegment(Date);
KeySegment(SerNr);
KeyBegin(ArtName);
KeySegment(ArtName);
KeySegment(SerNr);
EndRecord;

RecordBegin(VClassVc, -, "");
RecordField(NewClass, M4Code, 20, 0);
RecordField(OldClass, M4Code, 20, 0);
RecordField(NewClassType, M4Code, 20, 0);
RecordField(OldClassType, M4Code, 20, 0);
RecordField(NewClassParent, M4Code, 20, 0);
RecordField(OldClassParent, M4Code, 20, 0);
// RecordField(Order, M4Int, 0, 0);
// RecordField(PlaceSpace, M4Mark, 0, 0); // 1 - Space, 2 - comma, 0 - nothing, 3 - dash, 4 - asterisk, 5 -point/ "-" - before, "+" - after
RecordField(Comment, M4Str, 100, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(LangCode, M4Code, 5, 0);
ArrayField(LangStr, M4Str, 60, 0);
EndArray;
MainKeyBegin(NewClass, 0);
StoreInBaseKey;
KeySegment(NewClass);
SynchronizationIndex;
KeyBegin(OldClass);
KeySegment(OldClass);
KeySegment(NewClass);
KeyBegin(NewClassType);
KeySegment(NewClassType);
KeySegment(NewClass);
KeyBegin(OldClassType);
KeySegment(OldClassType);
KeySegment(NewClass);
KeyBegin(NewClassParent);
KeySegment(NewClassParent);
KeySegment(NewClass);
KeyBegin(OldClassParent);
KeySegment(OldClassParent);
KeySegment(NewClass);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(NewClass);
EndRecord;

RecordBegin(VSetClassVc, -, "");
RecordField(DocType, M4Code, 40, 0);
RecordField(Comment, M4Str, 200, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(ClassType, M4Code, 20, 0);
ArrayField(ClassForm, M4Code, 20, 0);
ArrayField(Comment1, M4Str, 200, 0);
EndArray;
MainKeyBegin(DocType, 0);
StoreInBaseKey;
KeySegment(DocType);
SynchronizationIndex;
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(DocType);
EndRecord;

BlockBegin(RSSBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(RSSCode, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
ArrayField(UserCode, M4Code, 20, 0);
ArrayField(UserName, M4Str, 100, 0);
ArrayField(NotificationType, M4Code, 20, 0);
ArrayField(NotificationAddress, M4Str, 100, 0);
EndArray;
EndBlock;

RecordBegin(RSSTypeVc, -, "");
RecordField(RSSCode, M4Code, 20, 0);
RecordField(RSSName, M4Str, 100, 0);
RecordField(RSSParent, M4Code, 20, 0);
RecordField(Classification, M4UStr, 200, 0);
MainKeyBegin(RSSCode, 0);
StoreInBaseKey;
KeySegment(RSSCode);
SynchronizationIndex;
KeyBegin(RSSParent);
KeySegment(RSSParent);
KeySegment(RSSCode);
KeyBegin(RSSName);
KeySegment(RSSName);
KeySegment(RSSCode);
KeyBegin(Classification);
KeySegment(Classification);
KeySegment(RSSCode);
EndRecord;

RecordBegin(CounterSpecialVc, -, "");
RecordField(UserCode, M4UStr, 20, 0);
RecordField(WindowName, M4Str, 200, 0);
RecordField(Counter, M4Int, 0, 0);
MainKeyBegin(UserWin, 0);
StoreInBaseKey;
KeySegment(UserCode);
KeySegment(WindowName);
SynchronizationIndex;
EndRecord;

BlockBegin(ICompProfitValBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Name, M4Str, 100, 0);
EndArray;
EndBlock;

RecordBegin(ICompProfitPlanVc, -, "");
RecordField(PlanYear, M4Int, 0, 0);
RecordField(Comment, M4Str, 255, 0);
RecordField(Flag1, M4Mark, 0, 0);
RecordField(Flag2, M4Mark, 0, 0);
RecordField(Flag3, M4Mark, 0, 0);
RecordField(Flag4, M4Mark, 0, 0);
RecordField(Flag5, M4Mark, 0, 0);
RecordField(Flag6, M4Mark, 0, 0);
RecordField(Flag7, M4Mark, 0, 0);
RecordField(Flag8, M4Mark, 0, 0);
RecordField(Flag9, M4Mark, 0, 0);
RecordField(Flag10, M4Mark, 0, 0);
RecordField(Flag11, M4Mark, 0, 0);
RecordField(Flag12, M4Mark, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Str, 20, 0);
ArrayField(Name, M4Str, 100, 0);
ArrayField(Val1, M4Val, 0 ,0);
ArrayField(Val2, M4Val, 0 ,0);
ArrayField(Val3, M4Val, 0 ,0);
ArrayField(Val4, M4Val, 0 ,0);
ArrayField(Val5, M4Val, 0 ,0);
ArrayField(Val6, M4Val, 0 ,0);
ArrayField(Val7, M4Val, 0 ,0);
ArrayField(Val8, M4Val, 0 ,0);
ArrayField(Val9, M4Val, 0 ,0);
ArrayField(Val10, M4Val, 0 ,0);
ArrayField(Val11, M4Val, 0 ,0);
ArrayField(Val12, M4Val, 0 ,0);
ArrayField(Objects,M4UStr,60,0);
EndArray;
MainKeyBegin(PlanYear,0);
KeySegment(PlanYear);
Endrecord;

RecordBegin(ICompProfitPlanResVc, -, "");
RecordField(IDKey,M4Long,0,0);
RecordField(Comment,M4Str,60,0);
RecordField(Expr,M4UStr,100,0);
RecordField(Objects,M4UStr,60,0);
RecordField(RsType,M4Int,0,0);
RecordField(DCSide,M4Int,0,0);
RecordField(Divider,M4Int,0,0);
RecordField(Visibility,M4Int,0,0);
MainKeyBegin(IDKey,0);
KeySegment(IDKey);
EndRecord;

RecordBegin(VUserRetOrdVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Function1,M4UStr,255,0);
MainKeyBegin(Code,0);
KeySegment(Code);
EndRecord;

BlockBegin(VCUHierarchyObjBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Classification, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
ArrayField(ObjStr, M4Code, 20, 0);
ArrayField(Comment1, M4Str, 100, 0);
EndArray;
EndBlock;

BlockBegin(IDiscountBySumBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(ArtCode, M4UStr, 100, 0);
ArrayField(Sum, M4Val, 0, 0);
ArrayField(Discount, M4Val, 0, 0);
ArrayField(StartDate, M4Date, 0, 0);
ArrayField(EndDate, M4Date, 0, 0);
ArrayField(Objects, M4UStr, 60, 0);
EndArray;
EndBlock;

BlockBegin(VPlanSpecSerBlock, -, "");
XXSERBLOCK;
BlockBegin(VPlanSPodrBlock, -, "");
XXSERBLOCK;

RecordBegin(VPlanSpecVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(VPlanSpecSerBlock);
RecordField(Year, M4Int, 4, 0);
RecordField(CustCat, M4Code, 20, 0);
RecordField(ParentSerNr, M4Long, 0, 0);
RecordField(Objects, M4Code, 20, 0);
RecordField(SalesMan, M4Code, 20, 0);
FieldIsUser(SalesMan);
RecordField(SalesManDate, M4Date, 0, 0);
RecordField(Superior, M4Code, 20, 0);
RecordField(SuperiorDate, M4Date, 0, 0);
RecordField(Boss, M4Code, 20, 0);
RecordField(BossDate, M4Date, 0, 0);
RecordField(SMFlag, M4Mark, 0, 0);
RecordField(SuFlag, M4Mark, 0, 0);
RecordField(OKFlag, M4Mark, 0, 0);
RecordField(LastUpdate, M4Date, 0, 0);
RecordField(LastUser, M4Code, 20, 0);
RecordField(Comment, M4Str, 200, 0);
//
RecordField(SumJanP, M4Val, 0, 0);
RecordField(SumFebP, M4Val, 0, 0);
RecordField(SumMarP, M4Val, 0, 0);
RecordField(SumAprP, M4Val, 0, 0);
RecordField(SumMayP, M4Val, 0, 0);
RecordField(SumJunP, M4Val, 0, 0);
RecordField(SumJulP, M4Val, 0, 0);
RecordField(SumAugP, M4Val, 0, 0);
RecordField(SumSepP, M4Val, 0, 0);
RecordField(SumOctP, M4Val, 0, 0);
RecordField(SumNovP, M4Val, 0, 0);
RecordField(SumDecP, M4Val, 0, 0);
RecordField(Sum1P, M4Val, 0, 0);
RecordField(Sum2P, M4Val, 0, 0);
RecordField(Sum3P, M4Val, 0, 0);
RecordField(Sum4P, M4Val, 0, 0);
RecordField(SumYeaP, M4Val, 0, 0);
//
RecordField(Text, M4TextField, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
//
RecordField(SumJanPM, M4Val, 0, 0);
RecordField(SumFebPM, M4Val, 0, 0);
RecordField(SumMarPM, M4Val, 0, 0);
RecordField(SumAprPM, M4Val, 0, 0);
RecordField(SumMayPM, M4Val, 0, 0);
RecordField(SumJunPM, M4Val, 0, 0);
RecordField(SumJulPM, M4Val, 0, 0);
RecordField(SumAugPM, M4Val, 0, 0);
RecordField(SumSepPM, M4Val, 0, 0);
RecordField(SumOctPM, M4Val, 0, 0);
RecordField(SumNovPM, M4Val, 0, 0);
RecordField(SumDecPM, M4Val, 0, 0);
RecordField(Sum1PM, M4Val, 0, 0);
RecordField(Sum2PM, M4Val, 0, 0);
RecordField(Sum3PM, M4Val, 0, 0);
RecordField(Sum4PM, M4Val, 0, 0);
RecordField(SumYeaPM, M4Val, 0, 0);
//
RecordField(Manual1Flag, M4Mark, 0, 0);
RecordField(Manual2Flag, M4Mark, 0, 0);
RecordField(Manual3Flag, M4Mark, 0, 0);
RecordField(Manual4Flag, M4Mark, 0, 0);
RecordField(OK1Flag, M4Mark, 0, 0);
RecordField(OK2Flag, M4Mark, 0, 0);
RecordField(OK3Flag, M4Mark, 0, 0);
RecordField(OK4Flag, M4Mark, 0, 0);
RecordField(OK1User, M4Code, 20, 0);
RecordField(OK2User, M4Code, 20, 0);
RecordField(OK3User, M4Code, 20, 0);
RecordField(OK4User, M4Code, 20, 0);
//
ArrayBegin(Math, -, 1);
ArrayField(ArtCode, M4Code, 20, 0);
ArrayField(ArtName, M4Str, 100, 0);
ArrayField(JanP, M4Val, 0 ,0);
ArrayField(FebP, M4Val, 0 ,0);
ArrayField(MarP, M4Val, 0 ,0);
ArrayField(Qua1P, M4Val, 0 ,0);
ArrayField(AprP, M4Val, 0 ,0);
ArrayField(MayP, M4Val, 0 ,0);
ArrayField(JunP, M4Val, 0 ,0);
ArrayField(Qua2P, M4Val, 0 ,0);
ArrayField(JulP, M4Val, 0 ,0);
ArrayField(AugP, M4Val, 0 ,0);
ArrayField(SepP, M4Val, 0 ,0);
ArrayField(Qua3P, M4Val, 0 ,0);
ArrayField(OctP, M4Val, 0 ,0);
ArrayField(NovP, M4Val, 0 ,0);
ArrayField(DecP, M4Val, 0 ,0);
ArrayField(Qua4P, M4Val, 0 ,0);
ArrayField(YeaP, M4Val, 0 ,0);
//
ArrayField(JanF, M4Val, 0 ,0);
ArrayField(FebF, M4Val, 0 ,0);
ArrayField(MarF, M4Val, 0 ,0);
ArrayField(AprF, M4Val, 0 ,0);
ArrayField(MayF, M4Val, 0 ,0);
ArrayField(JunF, M4Val, 0 ,0);
ArrayField(JulF, M4Val, 0 ,0);
ArrayField(AugF, M4Val, 0 ,0);
ArrayField(SepF, M4Val, 0 ,0);
ArrayField(OctF, M4Val, 0 ,0);
ArrayField(NovF, M4Val, 0 ,0);
ArrayField(DecF, M4Val, 0 ,0);
//
ArrayField(JanPM, M4Val, 0 ,0);
ArrayField(FebPM, M4Val, 0 ,0);
ArrayField(MarPM, M4Val, 0 ,0);
ArrayField(Qua1PM, M4Val, 0 ,0);
ArrayField(AprPM, M4Val, 0 ,0);
ArrayField(MayPM, M4Val, 0 ,0);
ArrayField(JunPM, M4Val, 0 ,0);
ArrayField(Qua2PM, M4Val, 0 ,0);
ArrayField(JulPM, M4Val, 0 ,0);
ArrayField(AugPM, M4Val, 0 ,0);
ArrayField(SepPM, M4Val, 0 ,0);
ArrayField(Qua3PM, M4Val, 0 ,0);
ArrayField(OctPM, M4Val, 0 ,0);
ArrayField(NovPM, M4Val, 0 ,0);
ArrayField(DecPM, M4Val, 0 ,0);
ArrayField(Qua4PM, M4Val, 0 ,0);
ArrayField(YeaPM, M4Val, 0 ,0);
//
ArrayField(JanFM, M4Val, 0 ,0);
ArrayField(FebFM, M4Val, 0 ,0);
ArrayField(MarFM, M4Val, 0 ,0);
ArrayField(AprFM, M4Val, 0 ,0);
ArrayField(MayFM, M4Val, 0 ,0);
ArrayField(JunFM, M4Val, 0 ,0);
ArrayField(JulFM, M4Val, 0 ,0);
ArrayField(AugFM, M4Val, 0 ,0);
ArrayField(SepFM, M4Val, 0 ,0);
ArrayField(OctFM, M4Val, 0 ,0);
ArrayField(NovFM, M4Val, 0 ,0);
ArrayField(DecFM, M4Val, 0 ,0);
//
EndArray;
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
AppendFieldToKeyName(Year);
AppendFieldToKeyName(CustCat);
AppendFieldToKeyName(ParentSerNr);
AppendFieldToKeyName(Objects);
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(Year);
KeySegment(Year);
KeySegment(SerNr);
KeyBegin(CustCatParent);
KeySegment(CustCat);
KeySegment(ParentSerNr);
KeySegment(Year);
KeySegment(Objects);
KeySegment(SerNr);
KeyBegin(ParentSerNrCust);
KeySegment(ParentSerNr);
KeySegment(CustCat);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(SerNr);
KeyBegin(CustCat);
KeySegment(CustCat);
KeySegment(SerNr);
KeyBegin(Objects);
KeySegment(Objects);
KeySegment(SerNr);
EndRecord;

BlockBegin(VPlanSetFBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(CustCat, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
ArrayField(Percent, M4Val, 20, 0);
EndArray;
EndBlock;


BlockBegin(VPlanSPodrSetBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(CustCat, M4Code, 20, 0);
ArrayField(StartDate, M4Date, 0, 0);
ArrayField(EndDate, M4Date, 0, 0);
ArrayField(INGroup, M4Code, 20, 0);
ArrayField(Percent, M4Val, 0, 0);
EndArray;
EndBlock;

BlockBegin(VPlanSetObjBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Objects, M4Code, 20, 0);
ArrayField(CustCat, M4Code, 20, 0);
ArrayField(StartDate, M4Date, 0, 0);
ArrayField(EndDate, M4Date, 0, 0);
ArrayField(ArtCode, M4UStr, 100, 0);
ArrayField(Percent, M4Val, 0, 0);
EndArray;
EndBlock;


//28.03.12 INAU
RecordBegin(IVPlanSetObjVc, -, "");
RecordField(SalesGroup, M4Code, 20, 0);
RecordField(Year, M4Int, 0, 0);
RecordField(Obj, M4Code, 20, 0);
RecordField(ObjName, M4Str, 100, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(ArtCode, M4Code, 20, 0);
ArrayField(ArtName, M4Str, 200, 0);
ArrayField(StatQnt, M4Val, 0, 0);
ArrayField(TotStatQnt, M4Val, 0, 0);
ArrayField(Percent, M4Val, 0, 0);
EndArray;
MainKeyBegin(Obj,0);
  KeySegment(Obj);
  KeySegment(Year);
KeyBegin(Year);
  KeySegment(Year);
  KeySegment(Obj);
KeyBegin(SalesGroup);
  KeySegment(SalesGroup);
  KeySegment(Year);
  KeySegment(Obj);
KeyBegin(ObjName);
  KeySegment(ObjName);
  KeySegment(Obj);
  KeySegment(Year);
EndRecord;

//06.06.12 INAU
RecordBegin(IVPlanSetSGVc, -, "");
RecordField(Year, M4Int, 0, 0);
RecordField(ArtCode, M4Code, 20, 0);
RecordField(ArtName, M4Str, 200, 0);
RecordField(TotStatQnt, M4Val, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(SalesGroup, M4Code, 20, 0);
ArrayField(StatQnt, M4Val, 0, 0);
ArrayField(Percent, M4Val, 0, 0);
EndArray;
MainKeyBegin(ArtCode,0);
  KeySegment(ArtCode);
  KeySegment(Year);
KeyBegin(Year);
  KeySegment(Year);
  KeySegment(ArtCode);
KeyBegin(ArtName);
  KeySegment(ArtName);
  KeySegment(ArtCode);
  KeySegment(Year);
EndRecord;

BlockBegin(IVPlanStatBlock, -, "");
ArrayBegin(Math, -, 1);
ArrayField(Year, M4Int, 0, 0);
ArrayField(StatPeriod, M4UStr, 21, 0);
EndArray;
EndBlock;

//Tanya For IVVcHistory
BlockBegin(MyDataSerBlock,-,"");
XXSERBLOCK;

RecordBegin(HisIVVc,-,"");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(MyDataSerBlock);
RecordField(OrderNr,M4Long,0,0);
RecordField(ArtCode,M4Code,20,0);
RecordField(Location,M4Code,10,0);
RecordField(Quant,M4UVal,0,0);
RecordField(Price,M4Val,0,0);
RecordField(CurncyCode,M4Code,5,0);
RecordField(Sum,M45Val,0,0);
RecordField(CustCode,M4Code,20,0);
RecordField(PayDate,M4Date,0,0);
RecordField(Objects,M4UStr,60,0);
RecordField(SalesMan,M4Code,10,0);
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(OrderNr);
KeySegment(OrderNr);
KeySegment(SerNr);
KeyBegin(ArtCode);
KeySegment(ArtCode);
KeySegment(SerNr);
KeyBegin(CurncyCode);
KeySegment(CurncyCode);
KeySegment(SerNr);
KeyBegin(CustCode);
KeySegment(CustCode);
KeySegment(SerNr);
KeyBegin(PayDate);
KeySegment(PayDate);
KeySegment(SerNr);
KeyBegin(Objects);
KeySegment(Objects);
KeySegment(SerNr);
KeyBegin(SalesMan);
KeySegment(SalesMan);
KeySegment(SerNr);
KeyBegin(Location);
KeySegment(Location);
KeySegment(SerNr)
SynchronizationIndex;
EndRecord;

BlockBegin(tLimForClSetBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Days, M4Int, 0, 0);
ArrayField(FromUSD, M4Val, 0, 0);
ArrayField(ToUSD, M4Val, 0, 0);
EndArray;
EndBlock;

BlockBegin(CUCardControlBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(FieldName, M4Str, 60, 0);
ArrayField(Comment, M4Str, 100, 0);
ArrayField(AccessGroup, M4UStr, 200, 0);
ArrayField(User, M4UStr, 200, 0);
EndArray;
EndBlock;

BlockBegin(HWHelpSerBlock,-,"");
XXSERBLOCK;

RecordBegin(HWHelpVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(HWHelpSerBlock);
RecordField(HelpWindow, M4Str, 60, 0);
RecordField(HelpCaption, M4Str, 60, 0);
RecordField(HelpBody, M4TextField, 0, 0);
RecordField(Visible, M4Int, 0, 0);
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
AppendFieldToKeyName(HelpWindow);
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(HelpWindow);
KeySegment(HelpWindow);
KeySegment(SerNr);
KeyBegin(Visible);
KeySegment(Visible);
KeySegment(SerNr);
EndRecord;

BlockBegin(IObjSalesManBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Obj, M4Code, 60, 0);
ArrayField(SalesMan, M4Code, 20, 0);
ArrayField(Coeff, M4Val, 0, 0);
EndArray;
EndBlock;

// "Инциденты"
BlockBegin(IncidentsSerBlock,-,"");
XXSERBLOCK;

BlockBegin(IncidentTypeBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(IType, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
EndArray;
EndBlock;

RecordBegin(IncidentClassVc, -, "");
RecordField(IClass, M4Code, 20, 0);
RecordField(Comment, M4Str, 100, 0);
RecordField(Cost, M4Val, 0, 0);
MainKeyBegin(IClass, 0);
StoreInBaseKey;
KeySegment(IClass);
SynchronizationIndex;
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(IClass);
EndRecord;

RecordBegin(IncidentFormVc, -, "");
RecordField(IForm, M4Code, 20, 0);
RecordField(Comment, M4Str, 100, 0);
RecordField(IType, M4Code, 20, 0);
RecordField(Parent, M4Code, 20, 0);
RecordField(Cost, M4Val, 0, 0);
MainKeyBegin(IForm, 0);
StoreInBaseKey;
AppendFieldToKeyName(IType);
AppendFieldToKeyName(Parent);
KeySegment(IForm);
SynchronizationIndex;
KeyBegin(IType);
KeySegment(IType);
KeySegment(IForm);
KeyBegin(Parent);
KeySegment(Parent);
KeySegment(IForm);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(IForm);
EndRecord;

BlockBegin(IncidentContextBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(IContext, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
EndArray;
EndBlock;

RecordBegin(IncidentsVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(IncidentsSerBlock);
RecordField(DateRec, M4Date, 0, 0);
RecordField(TimeRec, M4Time, 0, 0);
RecordField(User, M4Code, 20, UserVc);
FieldIsUser(User);
RecordField(SalesGroup, M4Code, 5, SalesGroupVc);
FieldIsGroup(SalesGroup);
RecordField(UserName, M4Str, 60, 0);
RecordField(Invalid, M4Int, 0, 0);
FieldIsInvalid(Invalid);
RecordField(Department, M4UStr, 20, 0);
RecordField(IType, M4Code, 20, 0);
RecordField(IForm, M4Code, 20, 0);
RecordField(IContext, M4Code, 20, 0);
RecordField(IClassification, M4UStr, 200, 0);
RecordField(RiskLevel, M4Int, 0, 0);
RecordField(Comment, M4Str, 200, 0);
RecordField(TransDate, M4Date, 0, 0);
RecordField(TransTime, M4Time, 0, 0);
RecordField(SolDate, M4Date, 0, 0);
RecordField(SolTime, M4Time, 0, 0);
RecordField(NewFlag, M4Mark, 0, 0);
RecordField(SolFlag, M4Mark, 0, 0);
RecordField(OKFlag, M4Mark, 0, 0);
RecordField(Signature, M4UStr, 100, 0);
RecordField(Description, M4TextField, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math,-,1);
ArrayField(Objects, M4UStr, 60, 0);
ArrayField(Sign, M4UStr, 100, 0);
ArrayField(Price, M4Val, 0, 0);
ArrayField(Comment1, M4Str, 200, 0);
EndArray;
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(User);
KeySegment(SerNr);
SynchronizationIndex;
SubsetKeyBegin2(DateRecSub);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(User);
KeySegment(DateRec);
KeySegment(SerNr);
SubsetKeyBegin2(DepartmentSub);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(User);
KeySegment(DateRec);
KeySegment(SerNr);
SubsetKeyBegin2(ITypeSub);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(User);
KeySegment(IType);
KeySegment(IForm);
KeySegment(IContext);
KeySegment(SerNr);
KeyBegin(DateRec);
KeySegment(DateRec);
KeySegment(SerNr);
KeyBegin(Department);
KeySegment(Department);
KeySegment(SerNr);
KeyBegin(IType);
KeySegment(IType);
KeySegment(SerNr);
KeyBegin(IForm);
KeySegment(IForm);
KeySegment(SerNr);
KeyBegin(IContext);
KeySegment(IContext);
KeySegment(SerNr);
KeyBegin(AllFlags);
KeySegment(OKFlag);
KeySegment(NewFlag);
KeySegment(SolFlag);
KeySegment(SerNr);
EndRecord;

// "ПО"
BlockBegin(SoftwareSerBlock,-,"");
XXSERBLOCK;

BlockBegin(SoftwareTypeBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(SType, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
EndArray;
EndBlock;

BlockBegin(SoftwarePriceBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(SPrice, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
EndArray;
EndBlock;

RecordBegin(SoftKindVc, -, "");
RecordField(SoftKind, M4Code, 20, 0);
RecordField(Comment, M4Str, 100, 0);
RecordField(SType, M4Code, 20, 0);
RecordField(Parent, M4Code, 20, 0);
RecordField(SPrice, M4Code, 20, 0);
RecordField(Price, M4Val, 0, 0);
MainKeyBegin(SoftKind, 0);
StoreInBaseKey;
AppendFieldToKeyName(SType);
AppendFieldToKeyName(Parent);
KeySegment(SoftKind);
SynchronizationIndex;
KeyBegin(SType);
KeySegment(SType);
KeySegment(SoftKind);
KeyBegin(Parent);
KeySegment(Parent);
KeySegment(SoftKind);
KeyBegin(Comment);
KeySegment(Comment);
KeySegment(SoftKind);
EndRecord;

RecordBegin(WorkerSoftVc, -, "");
RecordField(WorkCode, M4Code, 20, 0);
RecordField(WorkName, M4Str, 100, 0);
RecordField(Department, M4Code, 20, 0);

RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(SoftKind, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
ArrayField(Price, M4Val, 0, 0);
EndArray;
MainKeyBegin(WorkCode, 0);
StoreInBaseKey;
AppendFieldToKeyName(Department);
KeySegment(WorkCode);
SynchronizationIndex;
KeyBegin(Department);
KeySegment(Department);
KeySegment(WorkCode);
KeyBegin(WorkName);
KeySegment(WorkName);
KeySegment(WorkCode);
EndRecord;


RecordBegin(UserSoftVc, -, "");
RecordField(Code, M4Code, 20, 0);
FieldIsUser(Code);
RecordField(Name, M4Str, 100, 0);
RecordField(Department, M4Code, 20, 0);
RecordField(Superior, M4Code, 20, 0);

RecordField(SalesGroup, M4Code, 5, 0);
FieldIsGroup(SalesGroup);

RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(SoftKind, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
ArrayField(DateRec, M4Date, 0, 0);
ArrayField(Signature, M4Code, 20, 0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(Department);
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Department);
KeySegment(Department);
KeySegment(Code);
KeyBegin(Department);
KeySegment(Department);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(SalesGroup);
KeySegment(SalesGroup);
KeySegment(Code);
EndRecord;

//Планируемые задачи

RecordBegin(UserPlanTaskVc, -, "");
RecordField(Code, M4Code, 20, 0);
FieldIsUser(Code);
RecordField(Year, M4Int, 0, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(Department, M4Code, 20, 0);
RecordField(SalesGroup, M4Code, 5, 0);
FieldIsGroup(SalesGroup);
RecordField(Invalid, M4Int, 0, 0);
RecordField(OKFlag, M4Mark, 0, 0);
RecordField(Free, M4Int, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Kind, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
ArrayField(StartDate, M4Date, 0, 0);
ArrayField(EndDate, M4Date, 0, 0);
ArrayField(Term, M4Int, 0, 0);
ArrayField(VirtLink, M4Long, 0, 0);
ArrayField(Sign, M4UStr, 100, 0);
ArrayField(InvalidRow, M4Int, 0, 0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(Department);
KeySegment(Code);
KeySegment(Year);
SynchronizationIndex;
KeyBegin(Department);
KeySegment(Department);
KeySegment(Code);
KeySegment(Year);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(SalesGroup);
KeySegment(SalesGroup);
KeySegment(Code);
KeySegment(Year);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(Code);
KeySegment(Year);
EndRecord;

BlockBegin(TaskKindBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(TaskType, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
ArrayField(TaskTime, M4Int, 0, 0);
ArrayField(TaskPrice, M4Val, 0, 0);
ArrayField(Sign, M4UStr, 100, 0);
EndArray;
EndBlock;

BlockBegin(tCUAccessBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(AccessGrCode, M4Code, 20, 0);
ArrayField(NameGr, M4Str, 100, 0);
EndArray;
EndBlock;

//Должности
RecordBegin(VPositionVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(Classification, M4UStr, 200, 0);
RecordField(ClassCodeSerNr, M4Long, 0, 0);
RecordField(ClassCode, M4Code, 20, 0);
RecordField(ClassName, M4Str, 100, 0);
RecordField(OutCode, M4Code, 20, 0);
RecordField(OutName, M4Str, 100, 0);
RecordField(Superior, M4Code, 20, 0);
RecordField(SuperiorName, M4Str, 100, 0);
RecordField(Education, M4Str, 200, 0);
RecordField(WorkingTerm, M4Int, 0, 0);
RecordField(BasicKnow, M4Str, 200, 0);
RecordField(BasicSkill, M4Str, 200, 0);
RecordField(LangSkill, M4Str, 200, 0);
RecordField(CompSkill, M4Str, 200, 0);
RecordField(TranspSkill, M4Str, 200, 0);
RecordField(Mission, M4Mark, 0, 0);
RecordField(PrivateSkill, M4TextField, 0, 0);
RecordField(Rights, M4UStr, 200, 0);
RecordField(Obligations, M4UStr, 200, 0);
RecordField(Invalid, M4Mark, 0, 0);
FieldIsInvalid(Invalid);
RecordField(Math, M4Matrix, 0, 0);
RecordField(WorkEquipList, M4UStr, 200, 0); //INAU 21.06.13 - Список рабочих инструментов
RecordField(tSkills, M4Str, 200, 0); // TGOR 26.09.13
RecordField(PeMan, M4Mark, 0, 0);  // TGOR 26.09.13
ArrayBegin(Math, -, 1);
ArrayField(FuncCode, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
ArrayField(Percent, M4Val, 0, 0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(ClassCode);
KeySegment(ClassCode);
KeySegment(Code);
KeyBegin(OutCode);
KeySegment(OutCode);
KeySegment(Code);
KeyBegin(Superior);
KeySegment(Superior);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(ClassName);
KeySegment(ClassName);
KeySegment(Code);
KeyBegin(OutName);
KeySegment(OutName);
KeySegment(Code);
KeyBegin(Invalid);
KeySegment(Invalid);
KeySegment(Code);
EndRecord;

BlockBegin(VEducationBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
EndArray;
EndBlock;

BlockBegin(BasicKnowBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
EndArray;
EndBlock;

// BlockBegin(BasicSkillBlock, -, "");
// RecordField(Math, M4Matrix, 0, 0);
// ArrayBegin(Math, -, 1);
// ArrayField(Code, M4Code, 20, 0);
// ArrayField(Comment, M4Str, 100, 0);
// EndArray;
// EndBlock;

BlockBegin(CompSkillBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
EndArray;
EndBlock;

BlockBegin(TranspSkillBlock, -, "");

RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
EndArray;
EndBlock;

RecordBegin(VFuncPosVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(Hierarchy, M4Code, 20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Hierarchy);
KeySegment(Hierarchy);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(VClassPosVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(Hierarchy, M4Code, 20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Hierarchy);
KeySegment(Hierarchy);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(VRightsPosVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(Contents, M4TextField, 0, 0);
RecordField(TypePos, M4Mark, 0, 0); //Права или обязанности
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(TypePos);
KeySegment(TypePos);
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

//Классификатор профессий
BlockBegin(ProfClassBlock,-,"");
XXSERBLOCK;

RecordBegin(ProfClassVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(ProfClassBlock);
RecordField(KP, M4Code, 20, 0);
RecordField(ZKPPTR, M4Code, 20, 0);
RecordField(VETKD, M4UStr, 20, 0);
RecordField(VDKHP, M4UStr, 20, 0);
RecordField(PNR, M4Str, 200, 0);
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(KP);
KeySegment(KP);
KeySegment(SerNr);
KeyBegin(ZKPPTR);
KeySegment(ZKPPTR);
KeySegment(SerNr);
KeyBegin(VETKD);
KeySegment(VETKD);
KeySegment(SerNr);
KeyBegin(VDKHP);
KeySegment(VDKHP);
KeySegment(SerNr);
KeyBegin(PNR);
KeySegment(PNR);
KeySegment(SerNr);
EndRecord;

//Согласование затрат
BlockBegin(ApproveCostsBlock,-,"");
XXSERBLOCK;

RecordBegin(ApproveCostsVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(ApproveCostsBlock);
RecordField(DocDate, M4Date, 0, 0);
RecordField(User, M4Code, 20, 0);
RecordField(SalesGroup, M4Code, 20, 0);
FieldIsGroup(SalesGroup);
RecordField(Initiator, M4Code, 20, 0);
FieldIsUser(Initiator);
RecordField(UserName, M4Str, 100, 0);
RecordField(InitiatorName, M4Str, 100, 0);
RecordField(PM, M4Code, 5, 0); //Способ оплаты
RecordField(PayDate, M4Date, 0, 0);
RecordField(DocType, M4Int, 0, 0);
RecordField(CurncyCode, M4Code, 5, 0);
RecordField(SignOK, M4Code, 20, 0);
RecordField(TransDate, M4Date, 0, 0);
RecordField(OKFlag, M4Mark, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
RecordField(Summa, M4Val, 0, 0);
RecordField(Printed, M4Mark, 0, 0);
//12.03.13 INAU
RecordField(LogNewUser,M4UStr,20,0);
RecordField(LogNewDate,M4Date,0,0);
RecordField(LogNewTime,M4Time,0,0);
RecordField(LogSaveUser,M4UStr,20,0);
RecordField(LogSaveDate,M4Date,0,0);
RecordField(LogSaveTime,M4Time,0,0);
RecordField(LogOKUser,M4UStr,20,0);
RecordField(LogOKDate,M4Date,0,0);
RecordField(LogOKTime,M4Time,0,0);
//
ArrayBegin(Math, -, 1);
ArrayField(Sum, M4Val, 0, 0);
ArrayField(Curncy, M4Code, 5, 0);
ArrayField(Acc, M4Code, 20, 0);
ArrayField(Objects, M4UStr, 100, 0);
ArrayField(Func, M4Code, 20, 0);
ArrayField(BudRest, M4Val, 0, 0);
ArrayField(FuncSign, M4Code, 20, 0);
ArrayField(SuperSign, M4Code, 20, 0);
ArrayField(Comment, M4Str, 200, 0);
ArrayField(DocExists, M4Mark, 0, 0);
EndArray;
MainKeyBegin(SerNr, 1);
AppendFieldToKeyName(Initiator);
AppendFieldToKeyName(SalesGroup);
StoreInBaseKey;
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(User);
AppendFieldToKeyName(Initiator);
AppendFieldToKeyName(SalesGroup);
KeySegment(User);
KeySegment(SerNr);
KeyBegin(SalesGroup);
AppendFieldToKeyName(Initiator);
KeySegment(SalesGroup);
KeySegment(SerNr);
KeyBegin(Initiator);
AppendFieldToKeyName(SalesGroup);
KeySegment(Initiator);
KeySegment(SerNr);
KeyBegin(PayDate);
AppendFieldToKeyName(Initiator);
AppendFieldToKeyName(SalesGroup);
KeySegment(PayDate);
KeySegment(SerNr);
KeyBegin(DocDate);
AppendFieldToKeyName(Initiator);
AppendFieldToKeyName(SalesGroup);
KeySegment(DocDate);
KeySegment(SerNr);
KeyBegin(SignOK);
AppendFieldToKeyName(Initiator);
AppendFieldToKeyName(SalesGroup);
KeySegment(SignOK);
KeySegment(SerNr);
KeyBegin(PM);
AppendFieldToKeyName(Initiator);
AppendFieldToKeyName(SalesGroup);
KeySegment(PM);
KeySegment(SerNr);
KeyBegin(UserName);
KeySegment(UserName);
KeySegment(SerNr);
KeyBegin(InitiatorName);
KeySegment(InitiatorName);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(DocType);
KeySegment(DocType);
KeySegment(SerNr);
EndRecord;

BlockBegin(tORVcSetBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(EMPCode, M4Code, 20, 0);
ArrayField(SevrCode, M4Code, 20, 0);
ArrayField(CopyCode, M4UStr, 200, 0);
EndArray;
EndBlock;


//Технические средства
RecordBegin(IClassITTechVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Description, M4Str, 100, 0);
RecordField(Hierarchy, M4Code, 20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Hierarchy);
KeySegment(Hierarchy);
KeySegment(Code);
KeyBegin(Description);
KeySegment(Description);
KeySegment(Code);
EndRecord;

RecordBegin(IITTechVc, -, "");
RecordField(InventoryNr, M4Code, 30, 0);
RecordField(SerialNr, M4Code, 30, 0);
RecordField(Description, M4Str, 200, 0);
RecordField(Model, M4Code, 30, 0);
RecordField(Classification, M4UStr, 200, 0);
RecordField(ProdDate, M4Date, 0, 0);
RecordField(WarrantyEndDate, M4Date, 0, 0);
RecordField(PurchaseDate, M4Date, 0, 0);
RecordField(StartDate, M4Date, 0, 0);
RecordField(EndDate, M4Date, 0, 0);
RecordField(Comment, M4TextField, 0, 0);
RecordField(DepCode, M4Code, 10, 0);
RecordField(DepName, M4Str, 60, 0);
RecordField(RespCode, M4Code, 10, 0);
RecordField(RespName, M4Str, 60, 0);
RecordField(VECode, M4Code, 20, 0);
RecordField(VEName, M4Str, 60, 0);
RecordField(VISerNr, M4Long, 0, 0);
RecordField(PurchVal, M4Val, 0, 0);
RecordField(ResVal, M4Val, 0, 0);
MainKeyBegin(InventoryNr, 0);
KeySegment(InventoryNr);
KeyBegin(Description);
KeySegment(Description);
KeySegment(InventoryNr);
KeyBegin(SerialNr);
KeySegment(SerialNr);
KeySegment(InventoryNr);
KeyBegin(DepCode);
KeySegment(DepCode);
KeySegment(InventoryNr);
KeyBegin(RespCode);
KeySegment(RespCode);
KeySegment(InventoryNr);
KeyBegin(Model);
KeySegment(Model);
KeySegment(InventoryNr);
KeyBegin(ProdDate);
KeySegment(ProdDate);
KeySegment(InventoryNr);
KeyBegin(WarrantyEndDate);
KeySegment(WarrantyEndDate);
KeySegment(InventoryNr);
KeyBegin(PurchaseDate);
KeySegment(PurchaseDate);
KeySegment(InventoryNr);
KeyBegin(StartDate);
KeySegment(StartDate);
KeySegment(InventoryNr);
KeyBegin(EndDate);
KeySegment(EndDate);
KeySegment(InventoryNr);
KeyBegin(VECode);
KeySegment(VECode);
KeySegment(InventoryNr);
KeyBegin(VISerNr);
KeySegment(VISerNr);
KeySegment(InventoryNr);
EndRecord;

//Цены на топливо
BlockBegin(tFuelBlock,-,"");
XXSERBLOCK;

RecordBegin(tFuelPrVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tFuelBlock);
RecordField(Date, M4Date, 0, 0);
RecordField(FType, M4Code, 20, 0);
RecordField(FPrice, M4Val, 0, 0);
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(Date);
KeySegment(Date);
KeySegment(SerNr);
KeyBegin(FType);
KeySegment(FType);
KeySegment(SerNr);
KeyBegin(FPrice);
KeySegment(FPrice);
KeySegment(SerNr);
EndRecord;


RecordBegin(HALNameVc, -, "");
RecordField(HALName, M4Code, 100, 0);
MainKeyBegin(HALName, 0);
StoreInBaseKey;
KeySegment(HALName);
SynchronizationIndex;
EndRecord;

//УКИС
BlockBegin(UpCISBlock,-,"");
XXSERBLOCK;

RecordBegin(UpCISVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(UpCISBlock);
RecordField(Date, M4Date, 0, 0);
RecordField(HALName, M4Str, 100, 0);
RecordField(SUBName, M4Str, 150, 0);
RecordField(Developer, M4Code, 20, 0);
RecordField(Math, M4TextField, 0, 0);
//RecordField(ParentNr, M4Long, 0, 0); //ссылка на ТЗ
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(Date);
KeySegment(Date);
KeySegment(SerNr);
KeyBegin(HALName);
KeySegment(HALName);
KeySegment(SerNr);
KeyBegin(SUBName);
KeySegment(SUBName);
KeySegment(SerNr);
KeyBegin(Developer);
KeySegment(Developer);
KeySegment(SerNr);
EndRecord;

RecordBegin(CDataVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Superior, M4Code, 20, 0);
RecordField(User, M4Code, 20, 0);
RecordField(SecretNote, M4TextField, 0, 0);
RecordField(ShowNote, M4Mark, 0, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
EndRecord;

//Настройка напоминаний о рекламе. Группы товаров.
BlockBegin(PrRemainingBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, ITGroupVc);
ArrayField(Comment, M4Str, 100, 0);
EndArray;
EndBlock;

//Провайдер услуг
RecordBegin(IClassServProvVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Description, M4Str, 100, 0);
RecordField(Hierarchy, M4Code, 20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Hierarchy);
KeySegment(Hierarchy);
KeySegment(Code);
KeyBegin(Description);
KeySegment(Description);
KeySegment(Code);
EndRecord;

RecordBegin(IServProvVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(Description, M4Str, 200, 0);
RecordField(Addr, M4Str, 255, 0);
RecordField(Addr2, M4Str, 255, 0);
RecordField(Addr3, M4Str, 255, 0);
RecordField(ContactPerson, M4Str, 100, 0);
RecordField(ContactPhone, M4Str, 100, 0);
RecordField(Classification, M4UStr, 200, 0);
RecordField(Purpose, M4Str, 200, 0);
RecordField(Objects, M4UStr, 60, 0);
RecordField(VECode, M4Code, 20, 0);
RecordField(VEName, M4Str, 100, 0);
RecordField(SalesGroup, M4Code, 5, 0);
FieldIsGroup(SalesGroup);
RecordField(Department, M4Code, 20, 0);
RecordField(Comment, M4Str, 255, 0);
RecordField(Comment2, M4Str, 255, 0);
RecordField(Comment3, M4Str, 255, 0);
RecordField(ContractNr, M4Code, 50, 0);
RecordField(ContractDate, M4Date, 0, 0);
RecordField(RespCode, M4Code, 20, 0);
FieldIsUser(RespCode);
RecordField(RespName, M4Str, 100, 0);
RecordField(Rating, M4Int, 0, 0);
RecordField(RegularPayFlag, M4Mark, 0, 0);
RecordField(RegularPayVal, M4Val, 0, 0);
RecordField(CurncyCode, M4Code, 5, 0);
RecordField(NonCashPayFlag, M4Mark,0, 0);
RecordField(Closed, M4Mark, 0, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(Description);
KeySegment(Description);
KeySegment(Code);
KeyBegin(Addr);
KeyBegin(Purpose);
KeySegment(Purpose);
KeySegment(Code);
KeyBegin(VECode);
KeySegment(VECode);
KeySegment(Code);
KeyBegin(ContractNr);
KeySegment(ContractNr);
KeySegment(Code);
KeyBegin(ContractDate);
KeySegment(ContractDate);
KeySegment(Code);
KeyBegin(RespCode);
KeySegment(RespCode);
KeySegment(Code);
KeyBegin(SalesGroup);
KeySegment(SalesGroup);
KeySegment(Code);
KeyBegin(Department);
KeySegment(Department);
KeySegment(Code);
KeyBegin(Rating);
KeySegment(Rating);
KeySegment(Code);
KeyBegin(Closed);
KeySegment(Closed);
KeySegment(Code);
KeyBegin(RegularPayFlag);
KeySegment(RegularPayFlag);
KeySegment(Code);
KeyBegin(NonCashPayFlag);
KeySegment(NonCashPayFlag);
KeySegment(Code);
EndRecord;

BlockBegin(tEMailBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(EMail, M4Str, 200, 0);
EndArray;
EndBlock;


RecordBegin(ttPhysStockVc, -, "");
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,255,0);
RecordField(SalesGroup, M4Code, 20, 0); //группа продажи
RecordField(StList,M4UStr,255,0);// список складов
RecordField(Person,M4Code,20, 0); //ответственное лицо Acc
RecordField(StAcc,M4UStr,20,0);//счёт склада
RecordField(Areas,M4UStr,255,0);// список зон
RecordField(Humidity,M4Str,10,0); //влажность
RecordField(ListCl,M4UStr,255,0);// список классификаторов
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math,-,1);
ArrayField(EquipCode,M4Code,20,0); //код оборудования
ArrayField(EquipName,M4Str,255,0); // наименование
ArrayField(Quant,M4Val,0,0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(SalesGroup);
KeySegment(SalesGroup);
KeySegment(Code);
EndRecord;

BlockBegin(StockClassGrBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(NameGr, M4Str, 200, 0);
EndArray;
EndBlock;

BlockBegin(StockClassBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Name, M4Str, 200, 0);
ArrayField(ClassGr, M4Code, 20, 0);
EndArray;
EndBlock;

BlockBegin(AreasBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Area, M4Str, 200, 0);
EndArray;
EndBlock;

RecordBegin(LocEquipVc,-,"");
RecordField(InventoryNr,M4Str,30,0);
RecordField(Currency,M4UStr,20,0);//Валюта покупки
RecordField(Comment,M4Str,100,0);
RecordField(LocCode,M4Code,10,0);
RecordField(LocName,M4Str,100,0);
RecordField(VECode,M4Code,20,VEVc);
RecordField(VEName,M4Str,100,0);
RecordField(Sign,M4Code,10,UserVc);
RecordField(RespPerson,M4Code,10,UserVc);
RecordField(NamePerson,M4Str,100,0);
RecordField(VISerNr,M4Long,0,0);
RecordField(AT2Code,M4Code,20,0);
RecordField(Objects,M4UStr,250,ObjVc);
RecordField(Description,M4Str,100,0);
RecordField(PurchVal,M4Val,0,0);
RecordField(InitDeprVal1,M4Val,0,0);
RecordField(InitDeprVal2,M4Val,0,0);
RecordField(Volume,M4Val,0,0);//Объём
RecordField(Weight,M4Val,0,0);//Вес
RecordField(StartingDate1,M4Date,0,0);
RecordField(StartingDate2,M4Date,0,0);
RecordField(EndDate,M4Date,0,0);
RecordField(Model1,M4Code,10,0);
RecordField(Model2,M4Code,10,0);
RecordField(ModelMin,M4Code,10,0);
RecordField(ModelMax,M4Code,10,0);
RecordField(SerialNr,M4Str,60,0);
RecordField(WarrantyNr,M4Str,60,0);
RecordField(WarDate,M4Date,0,0);
RecordField(ContractNr,M4Str,60,0);
RecordField(NewUsedf,M4Set,53,0);
RecordField(VATVal,M4Val,0,0);
RecordField(VATReclaimed,M4Val,0,0);
RecordField(Subsidyf,M4Int,0,0);
RecordField(InvestYear,M4Long,0,0);
RecordField(UsedFromDate,M4Date,0,0);
RecordField(AT2Class,M4Code,5,0);
RecordField(PurchVal2,M4Val,0,0);
RecordField(SubLandVal,M4Int,0,0);
RecordField(ClassEquip,M4UStr,250,0);
RecordField(Activef,M4Int,0,0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math,-,1);
ArrayField(ExpendCode,M4Code,20,0); //код
ArrayField(ExpendName,M4Str,255,0); // наименование
EndArray;
MainKeyBegin(InventoryNr, 0);
StoreInBaseKey;
KeySegment(InventoryNr);
SynchronizationIndex;
KeyBegin(Description);
KeySegment(Description);
KeySegment(InventoryNr);
KeyBegin(LocCode);
KeySegment(LocCode);
KeySegment(InventoryNr);
EndRecord;

BlockBegin(LocEqClassGrBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(NameGr, M4Str, 200, 0);
EndArray;
EndBlock;

BlockBegin(LocEqClassBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Name, M4Str, 200, 0);
ArrayField(ClassGr, M4Code, 20, 0);
EndArray;
EndBlock;


BlockBegin(LnSupBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(NameLn, M4Str, 200, 0);
EndArray;
EndBlock;


//Документ выполнения бюджета
BlockBegin(IObjDirectorBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Obj, M4Code, 20, 0);
ArrayField(Director, M4Code, 20, 0);
EndArray;
EndBlock;

BlockBegin(IBudgetDiffSerBlock,-,"");
XXSERBLOCK;

RecordBegin(IBudgetDiffVc, -, "");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(IBudgetDiffSerBlock);
RecordField(RegDate, M4Date, 0, 0);
RecordField(Podr, M4Code, 20, 0);
RecordField(Func, M4Code, 20, 0);
RecordField(TotalPlan, M4Val, 0, 0);
RecordField(TotalDiff, M4Val, 0, 0);
RecordField(Comment, M4Str, 200, 0);
RecordField(OKFlag, M4Mark, 0, 0);
RecordField(OKUser, M4Code, 20, 0);
RecordField(Math, M4Matrix, 0, 0);
RecordField(ToPodrIdx, M4Str, 255, 0);
RecordField(ToFuncIdx, M4Str, 255, 0);
RecordField(Visible, M4Str, 10, 0);
ArrayBegin(Math, -, 1);
ArrayField(stp, M4Int, 0, 0);
ArrayField(AccNumber, M4Code, 10, 0);
ArrayField(AccName, M4Str, 100, 0);
ArrayField(Objects, M4UStr, 60, 0);
ArrayField(Plan, M4Val, 0, 0);
ArrayField(Fact, M4Val, 0, 0);
ArrayField(Diff, M4Val, 0, 0);
ArrayField(Sum, M4Val, 0, 0);
ArrayField(ToPodr, M4Code, 20, 0);
ArrayField(ToFunc, M4Code, 20, 0);
ArrayField(User, M4Code, 20, 0);
ArrayField(RowComment, M4Str, 100, 0);
ArrayField(Initiator, M4Code, 20, 0);
EndArray;
//
MainKeyBegin(SerNr, 1);
StoreInBaseKey;
AppendFieldToKeyName(Visible);
KeySegment(SerNr);
//
SubsetKeyBegin2(RegDate);
StoreInBaseKey;
AppendFieldToKeyName(Visible);
KeySegment(RegDate);
KeySegment(SerNr);
//
SubsetKeyBegin2(Podr);
StoreInBaseKey;
AppendFieldToKeyName(Visible);
KeySegment(Podr);
KeySegment(SerNr);
//
SubsetKeyBegin2(Func);
StoreInBaseKey;
AppendFieldToKeyName(Visible);
KeySegment(Func);
KeySegment(SerNr);
//
SubsetKeyBegin2(OKFlag);
StoreInBaseKey;
AppendFieldToKeyName(Visible);
KeySegment(OKFlag);
KeySegment(SerNr);
//
SubsetKeyBegin2(TotalPlan);
StoreInBaseKey;
AppendFieldToKeyName(Visible);
KeySegment(TotalPlan);
KeySegment(SerNr);
//
SubsetKeyBegin2(TotalDiff);
StoreInBaseKey;
AppendFieldToKeyName(Visible);
KeySegment(TotalDiff);
KeySegment(SerNr);
//
SubsetKeyBegin2(Comment);
StoreInBaseKey;
AppendFieldToKeyName(Visible);
KeySegment(Comment);
KeySegment(SerNr);
EndRecord;


RecordBegin(OperVc, -, "");//Регистр "Операции"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(Status,M4Int,0,0);
RecordField(ListCl,M4UStr,250,0);
RecordField(CostTime, M4Long, 0, 0);
RecordField(Cost,M4Val,0,0);
RecordField(EquipCode,M4Str,250,0);
RecordField(FDoc,M4Str,250,0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(DocCode, M4Code, 20, 0);
ArrayField(DocName, M4Str, 200, 0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;


BlockBegin(WTimeBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Name, M4Str, 200, 0);
ArrayField(tDays, M4Long, 0, 0);
ArrayField(tHours, M4Long, 0, 0);
ArrayField(tMins, M4Long, 0, 0);
EndArray;
EndBlock;


RecordBegin(FunVc, -, "");//Регистр "Функции"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(BPCode,M4Code,20, 0);
RecordField(BPName,M4Str,250,0);
RecordField(GFCode,M4Code,20, 0);
RecordField(GFName,M4Str,250,0);
RecordField(Status,M4Int,0,0);
RecordField(ListCl,M4UStr,250,0);
RecordField(CostTime, M4Long, 0, 0);
RecordField(Cost,M4Val,0,0);
RecordField(KrCode,M4Str,250,0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(OpCode, M4Code, 20, 0);
ArrayField(OpName, M4Str, 200, 0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(GFCode);
KeySegment(GFCode);
KeySegment(Code);
EndRecord;


RecordBegin(StPodrVc, -, "");//Регистр "Структурные подразделения"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(DirCode,M4Code,20, 0);
RecordField(DirName,M4Str,250,0);
RecordField(PostCode,M4UStr,250,0);
RecordField(Principle,M4Str,250,0);
RecordField(Purpose,M4Str,250,0);
RecordField(ListCl,M4UStr,250,0);
RecordField(NCoop,M4UStr,250,0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(StructCode, M4Code, 20, 0);
ArrayField(TypeDoc, M4Code, 20, 0);
ArrayField(DocCode, M4Code, 20, 0);
ArrayField(DocName, M4Str, 200, 0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;



//Остатки по ГТД
RecordBegin(ICCDeclarationVc, -, "");
RecordField(ArtCode, M4Code, 20, 0);
RecordField(ArtName, M4Str, 200, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(CCDCode, M4Code, 100, 0);
ArrayField(Qnt, M4Qty, 0, 0);
ArrayField(Rest, M4Qty, 0, 0);
EndArray;
MainKeyBegin(ArtCode, 0);
StoreInBaseKey;
KeySegment(ArtCode);
KeyBegin(ArtNаme);
KeySegment(ArtName);
KeySegment(ArtCode);
EndRecord;

//Отгрузки по ГТД
RecordBegin(ISHCCDVc, -, "");
RecordField(SHNr, M4Long, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(ArtCode, M4Code, 20, 0);
ArrayField(CCDCode, M4Code, 100, 0);
ArrayField(Qnt, M4Qty, 0, 0);
EndArray;
MainKeyBegin(SHNr, 0);
StoreInBaseKey;
KeySegment(SHNr);
EndRecord;


RecordBegin(WOClassVc, -, "");//Классификаторы "Операции"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(TypeCl,M4Code,20,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(TypeCl);
KeySegment(TypeCl);
KeySegment(Code);
EndRecord;

RecordBegin(FunClassVc, -, "");//Классификаторы "Функции"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(TypeCl,M4Code,20,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(TypeCl);
KeySegment(TypeCl);
KeySegment(Code);
EndRecord;

RecordBegin(PodrClassVc, -, "");//Классификаторы "Подразделения"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(TypeCl,M4Code,20,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(TypeCl);
KeySegment(TypeCl);
KeySegment(Code);
EndRecord;

RecordBegin(StTypeClVc, -, "");//типы классификаторов "Структуры"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(FunGrVc, -, "");//Группы функций
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(TimeType, M4Int, 0, 0); //16.01.13 INAU - Тип учета времени (0-Оператив., 1-Поготовит.-заключит., 2-Регламент.перерыв, 3-Нерегламент.перерыв
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(FragmVc, -, "");//Текстовые фрагменты
RecordField(CodeFr,M4Code,20, 0);
RecordField(CodeDoc,M4Code,20,0);
RecordField(NameDoc,M4Str,250,0);
RecordField(Math,M4TextField, 0, 0);
MainKeyBegin(CodeFr, 0);
StoreInBaseKey;
KeySegment(CodeFr);
KeyBegin(CodeDoc);
KeySegment(CodeDoc);
KeySegment(CodeFr);
KeyBegin(NameDoc);
KeySegment(NameDoc);
KeySegment(CodeFr);
EndRecord;

BlockBegin(DocNameBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Name, M4Str, 200, 0);
EndArray;
EndBlock;

RecordBegin(tEducationVc, -, "");//Образование
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(tBasicKnowVc, -, "");//Базовые знания
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(BasicSkillVc, -, "");//Базовые умения
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

BlockBegin(PayModeComAgentBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(SalesGroup, M4Code, 20, 0);
ArrayField(CurncyCode, M4Code, 20, 0);
ArrayField(PayMode, M4Code, 20, 0);
ArrayField(Comment, M4Str, 100, 0);
EndArray;
EndBlock;


BlockBegin(InsightSerBlock,-,"");
XXSERBLOCK;

RecordBegin(InsightVc, -, "");//Дневник сотрудника
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(InsightSerBlock);
RecordField(DateIn, M4Date, 0, 0);
RecordField(CodeUsr,M4Code,20, 0);
RecordField(NameUsr,M4Str,250,0);
RecordField(CodeDep,M4Code,20, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Task, M4Str, 250, 0);
ArrayField(Res, M4Str, 250, 0);
ArrayField(Qual, M4Str, 20, 0);
EndArray;
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
KeySegment(SerNr);
KeyBegin(CodeUsr);
KeySegment(CodeUsr);
KeySegment(SerNr);
KeyBegin(CodeDep);
KeySegment(CodeDep);
KeySegment(SerNr);
KeyBegin(NameUsr);
KeySegment(NameUsr);
KeySegment(SerNr);
KeyBegin(DateIn);
KeySegment(DateIn);
KeySegment(SerNr);
EndRecord;

//Таблица оценки качества работы By DELPHI

//Критерии оценки
RecordBegin(CriteriaVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(CriteriaType, M4Int, 0, 0);
RecordField(Person, M4Code, 20, 0);
RecordField(Department, M4Code, 20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(CriteriaType);
KeySegment(CriteriaType);
KeySegment(Code);
KeyBegin(Person);
KeySegment(Person);
KeySegment(Code);
KeyBegin(Department);
KeySegment(Department);
KeySegment(Code);
EndRecord;

RecordBegin(EmpCriteriaVc, -, ""); //Закрепление критериев
RecordField(Code, M4Code, 20, UserVc);
RecordField(Department, M4Code, 20, 0);
FieldIsGroup(Department);
RecordField(Name, M4Str, 100, 0);
RecordField(User, M4Code, 20, 0);
RecordField(TransDate, M4Date, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Criteria, M4Code, 20, 0);
ArrayField(CriteriaName, M4Str, 100, 0);
ArrayField(CriteriaType, M4Int, 0, 0);
ArrayField(Person, M4Code, 20, 0);
ArrayField(MaxBall, M4Val, 0, 0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(Department);
KeySegment(Department);
KeySegment(Code);
EndRecord;

BlockBegin(EmpRatingSerBlock,-,"");
XXSERBLOCK;

RecordBegin(EmpRatingVc, -, "");//Оценочная таблица
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(EmpRatingSerBlock);
RecordField(Code, M4Code, 20, UserVc);
RecordField(TransDate, M4Date, 0, 0);
RecordField(Department, M4Code, 20, 0);
RecordField(Superior, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(OKFlag, M4Mark, 0, 1);
RecordField(User, M4Code, 20, 0);
FieldIsUser(User);
RecordField(MaxBall, M4Val, 0, 0);
RecordField(SumBall, M4Val, 0, 0);
RecordField(MaxBallSpec, M4Val, 0, 0);
RecordField(SumBallSpec, M4Val, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Criteria, M4Code, 20, 0);
ArrayField(CriteriaName, M4Str, 100, 0);
ArrayField(CriteriaType, M4Int, 0, 0);
ArrayField(Person, M4Code, 20, 0);
ArrayField(Ball, M4UVal, 0, 0);
EndArray;
MainKeyBegin(SerNr, 1);
StoreInBaseKey;
AppendFieldToKeyName(User);
KeySegment(SerNr);
SubsetKeyBegin2(SubTransDate);
StoreInBaseKey;
AppendFieldToKeyName(User);
KeySegment(TransDate);
KeySegment(SerNr);
SubsetKeyBegin2(SubName);
StoreInBaseKey;
AppendFieldToKeyName(User);
KeySegment(Name);
KeySegment(SerNr);
SubsetKeyBegin2(SubCode);
StoreInBaseKey;
AppendFieldToKeyName(User);
KeySegment(Code);
KeySegment(SerNr);
SubsetKeyBegin2(SubOKFlag);
StoreInBaseKey;
AppendFieldToKeyName(User);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(TransDate);
KeySegment(Code);
KeySegment(TransDate);
KeySegment(SerNr);
KeyBegin(Name);
KeySegment(Name);
KeySegment(SerNr);
KeyBegin(Code);
KeySegment(Code);
KeySegment(SerNr);
KeyBegin(Department);
KeySegment(Department);
KeySegment(SerNr);
KeyBegin(Superior);
KeySegment(Superior);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
EndRecord;
//End By DELPHI
BlockBegin(LogPlanDSerBlock,-,"");
XXSERBLOCK;

RecordBegin(LogPlanDVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(LogPlanDSerBlock);
RecordField(ArtCode,M4Code,20, 0); //товар
RecordField(ArtName,M4Str,250,0); //имя товаров
RecordField(SalesGroup, M4Code, 20, 0); //группа продажи
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math,-,1);
ArrayField(Month,M4Str,100,0); //месяц
ArrayField(PlanM,M4Val,0,0); // план/месяц
ArrayField(FactM,M4Val,0,0); // факт
ArrayField(PlanD,M4Val,0,0); // план/день
ArrayField(Year,M4Str,100,0); //год
EndArray;
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(ArtCode);
KeySegment(ArtCode);
KeySegment(SerNr);
KeyBegin(ArtName);
KeySegment(ArtName);
KeySegment(SerNr);
KeyBegin(SalesGroup);
KeySegment(SalesGroup);
KeySegment(SerNr);
KeyBegin(ArtSalesKey);
KeySegment(ArtCode);
KeySegment(SalesGroup);
KeySegment(SerNr);
EndRecord;


BlockBegin(LogPlWSerBlock,-,"");
XXSERBLOCK;

RecordBegin(LogPlWVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(LogPlWSerBlock);
RecordField(ArtCode,M4Code,20, 0); //товар
RecordField(ArtName,M4Str,250,0); //имя товаров
RecordField(SalesGroup, M4Code, 20, 0); //группа продажи
RecordField(WeekB,M4Date,0,0); //неделя начало запоминаем
RecordField(PlanW,M4Val,0,0); // план/месяц запоминаем
RecordField(WD,M4Int,0,0); // кол-во раб дней запоминаем
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math,-,1);
ArrayField(WeekB,M4Date,0,0); //неделя начало
ArrayField(WeekE,M4Date,0,0); //неделя конец
ArrayField(CountDW,M4Int,0,0); //кол-во рабочих дней в неделе
ArrayField(PlanW,M4Val,0,0); // план/месяц
ArrayField(FactW,M4Val,0,0); // факт
ArrayField(Diff,M4Val,0,0); // разность
ArrayField(Stock,M4Val,0,0); // запас
EndArray;
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(ArtCode);
KeySegment(ArtCode);
KeySegment(SerNr);
KeyBegin(ArtName);
KeySegment(ArtName);
KeySegment(SerNr);
KeyBegin(SalesGroup);
KeySegment(SalesGroup);
KeySegment(SerNr);
KeyBegin(ArtSalesKey);
KeySegment(ArtCode);
KeySegment(SalesGroup);
KeySegment(SerNr);
EndRecord;


RecordBegin(ShipDayVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(DayB,M4Int,0, 0);
RecordField(DayE,M4Int,0,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
EndRecord;



BlockBegin(PercentSerBlock,-,"");
XXSERBLOCK;

RecordBegin(PercentVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(PercentSerBlock);
RecordField(FDate,M4Date,0,0);
RecordField(SalesGroup, M4Code, 20, 0);
RecordField(Empl, M4Code, 20, 0);
RecordField(Cust, M4Code, 20, 0);
RecordField(Percent,M4Val,0,0);
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
KeySegment(SerNr);
KeyBegin(FDate);
KeySegment(FDate);
KeySegment(SerNr);
KeyBegin(Empl);
KeySegment(Empl);
KeySegment(SerNr);
KeyBegin(Cust);
KeySegment(Cust);
KeySegment(SerNr);
KeyBegin(SalesGroup);
KeySegment(SalesGroup);
KeySegment(SerNr);
EndRecord;

//====================================================== 12-11-12
RecordBegin(tTaxesVc, -, "");//Регистр "Налоги"
RecordField(Code, M4Code,20, 0);
RecordField(Name, M4Str,250,0);
RecordField(ListCl, M4UStr,250,0);
RecordField(Rates,M4Val,0,0);
RecordField(Terms, M4Int,0,0);
RecordField(Math, M4TextField, 0, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(Rates);
KeySegment(Rates);
KeySegment(Code);
EndRecord;

RecordBegin(tTaxesClVc, -, "");//классификаторы"Налогов"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(CodeGr,M4Code,20, 0);
RecordField(Math, M4TextField, 0, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(CodeGr);
KeySegment(CodeGr);
KeySegment(Code);
EndRecord;

RecordBegin(tTaxesGrVc, -, "");//Группы классификаторов "Налогов"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

//====================================================== 13-11-12
RecordBegin(tFinSchVc, -, "");//Регистр "Финансовые схемы"
RecordField(Code, M4Code,20, 0);
RecordField(Name, M4Str,250,0);
RecordField(ListCl, M4UStr,250,0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math,-,1);
ArrayField(Member1, M4Str,20,0);
ArrayField(Member2, M4Str,20,0);
ArrayField(Member3, M4Str,20,0);
ArrayField(Member4, M4Str,20,0);
ArrayField(DateB,M4Date,0,0);
ArrayField(DateE,M4Date,0,0);
ArrayField(Reason, M4Str,250,0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(tFinSchClVc, -, "");//классификаторы"Финансовые схемы"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(CodeGr,M4Code,20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(CodeGr);
KeySegment(CodeGr);
KeySegment(Code);
EndRecord;

RecordBegin(tFinSchGrVc, -, "");//Группы классификаторов "Финансовые схемы"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;
//======== Предприятия ГК


RecordBegin(tEntPrVc, -, "");//Регистр "Предприятия ГК"
RecordField(Code, M4Code,20, 0);
RecordField(Name, M4Str,250,0);
RecordField(Status, M4Int,0,0);
RecordField(Subm, M4Str,250,0);
RecordField(EType, M4Int,0,0);
RecordField(ListCl, M4UStr,250,0);
RecordField(LowAdr, M4Str,250,0);
RecordField(FacAdr, M4Str,250,0);
RecordField(Reg, M4Code,20,0);
RecordField(DateO, M4Date,0,0);
RecordField(DateC, M4Date,0,0);
RecordField(EDRPOU, M4Str,250,0);
RecordField(OKPO, M4Str,250,0);
RecordField(INN, M4Str,250,0);
RecordField(PasNo, M4Str,250,0);
RecordField(NDSStat, M4Int,0,0);
RecordField(Bank1, M4Str,250,0);
RecordField(Acc1, M4Str,250,0);
RecordField(Curr1, M4Str,250,0);
RecordField(Open1, M4Date,0,0);
RecordField(Close1, M4Date,0,0);
RecordField(Bank2, M4Str,250,0);
RecordField(Acc2, M4Str,250,0);
RecordField(Curr2, M4Str,250,0);
RecordField(Open2, M4Date,0,0);
RecordField(Close2, M4Date,0,0);
RecordField(Bank3, M4Str,250,0);
RecordField(Acc3, M4Str,250,0);
RecordField(Curr3, M4Str,250,0);
RecordField(Open3, M4Date,0,0);
RecordField(Close3, M4Date,0,0);
RecordField(Bank4, M4Str,250,0);
RecordField(Acc4, M4Str,250,0);
RecordField(Curr4, M4Str,250,0);
RecordField(Open4, M4Date,0,0);
RecordField(Close4, M4Date,0,0);
RecordField(Bank5, M4Str,250,0);
RecordField(Acc5, M4Str,250,0);
RecordField(Curr5, M4Str,250,0);
RecordField(Open5, M4Date,0,0);
RecordField(Close5, M4Date,0,0);
RecordField(Taxes, M4Str,250,0);
RecordField(Stamp1, M4Str,250,0);
RecordField(RespSt1, M4Code,20,0);
RecordField(Stamp2, M4Str,250,0);
RecordField(RespSt2, M4Code,20,0);
RecordField(Stamp3, M4Str,250,0);
RecordField(RespSt3, M4Code,20,0);
RecordField(Stamp4, M4Str,250,0);
RecordField(RespSt4, M4Code,20,0);
RecordField(Stamp5, M4Str,250,0);
RecordField(RespSt5, M4Code,20,0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math,-,1);
ArrayField(Struct, M4Str,20,0);
ArrayField(NamePost, M4Str,200,0);
ArrayField(Post, M4Code,20,0);
ArrayField(Open,M4Date,0,0);
ArrayField(Close,M4Date,0,0);
ArrayField(Salary, M4Val,0,0);
ArrayField(Date,M4Date,0,0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(Reg);
KeySegment(Reg);
KeySegment(Code);
EndRecord;

RecordBegin(tEntPrClVc, -, "");//классификаторы"Предприятия ГК"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(CodeGr,M4Code,20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(CodeGr);
KeySegment(CodeGr);
KeySegment(Code);
EndRecord;

RecordBegin(tEntPrGrVc, -, "");//Группы классификаторов "Предприятия ГК"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(tStPodrVc, -, "");//Подразделения для "Предприятий ГК"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

BlockBegin(tHistSalSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tHistSalVc, -, "");//история окладов "Предприятия ГК"
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tHistSalSerBlock);
RecordField(EntCode,M4Code,20, 0); //код предприятия
RecordField(EntStruct, M4Code,20,0); //код отдела
RecordField(EntPost, M4Code,20,0); //код должности
RecordField(EntSalary, M4Val,0,0); //оклад
RecordField(EntDate,M4Date,0,0);//дата
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(EntCode);
KeySegment(EntCode);
KeySegment(SerNr);
KeyBegin(EntStruct);
KeySegment(EntStruct);
KeySegment(SerNr);
KeyBegin(EntPost);
KeySegment(EntPost);
KeySegment(SerNr);
KeyBegin(EntSalary);
KeySegment(EntSalary);
KeySegment(SerNr);
KeyBegin(EntDate);
KeySegment(EntDate);
KeySegment(SerNr);
EndRecord;


BlockBegin(IStockGroupBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Name, M4Str, 200, 0);
ArrayField(Locations, M4UStr, 255, 0);
EndArray;
EndBlock;

RecordBegin(tRegionVc, -, "");//Регионы для "Предприятий ГК"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;


RecordBegin(BNPlanVc, -, "");//План продаж по б/н
RecordField(Year, M4Code, 4, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(ArtCode, M4Code, 20, 0);
ArrayField(ArtName, M4Str, 100, 0);
ArrayField(Jan, M4Val,0,0); //план на месяц
ArrayField(Feb, M4Val,0,0); //план на месяц
ArrayField(Mar, M4Val,0,0); //план на месяц
ArrayField(Apr, M4Val,0,0); //план на месяц
ArrayField(May, M4Val,0,0); //план на месяц
ArrayField(Jun, M4Val,0,0); //план на месяц
ArrayField(Jul, M4Val,0,0); //план на месяц
ArrayField(Aug, M4Val,0,0); //план на месяц
ArrayField(Sept, M4Val,0,0); //план на месяц
ArrayField(Oct, M4Val,0,0); //план на месяц
ArrayField(Nov, M4Val,0,0); //план на месяц
ArrayField(Dec, M4Val,0,0); //план на месяц
EndArray;
MainKeyBegin(Year, 0);
StoreInBaseKey;
KeySegment(Year);
EndRecord;

RecordBegin(tWeekPlanVc, -, "");//Недели планирования
RecordField(Code,M4Code,20, 0); // Группа продажи
RecordField(Name,M4Str,250,0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(NumWeek, M4Int, 0, 0);
ArrayField(Koeff, M4Val,0,0);
ArrayField(WorkDay, M4Str,200,0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;


BlockBegin(tMovPlanSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tMovPlanVc, -, "");//Планирование перемещений
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tMovPlanSerBlock);
RecordField(SalesGroup, M4Code,20, 0);
FieldIsGroup(SalesGroup);
RecordField(LocCode, M4Code,20, 0);
FieldIsLocation(LocCode);
RecordField(DatePlan, M4Date,0,0); //день планирования
RecordField(DateSup, M4Date,0,0); //день поступления
RecordField(NextSup, M4Date,0,0); //день след. поступления
RecordField(OKFlag, M4Mark,0,0);
RecordField(Math, M4Matrix, 0, 0);
RecordField(MovFlag, M4Mark,0,0); // распределить по складам
ArrayBegin(Math, -, 1);
ArrayField(ArtCode, M4Code, 20, 0);
ArrayField(ArtName, M4Str,200,0);
ArrayField(StockQty, M4Val,0,0);
ArrayField(QtyAuto, M4Val,0,0);
ArrayField(MultiQty, M4Val,0,0);
ArrayField(QtyFil, M4Val,0,0);
ArrayField(QtyLog, M4Val,0,0);
ArrayField(QtyMov, M4Val,0,0);
ArrayField(MaksanQty, M4Val,0,0);
ArrayField(PrVente, M4Val,0,0); //план продаж на следующую  неделю
ArrayField(Sigma, M4Val,0,0); //сигма (дни умноженные на среднедневной план продаж на след. неделю
ArrayField(PlanMois, M4Val,0,0); // план на текущий месяц
ArrayField(CQty, M4Val,0,0); // Остатки на С002
ArrayField(GP, M4Code, 20,0); // классификаторы типа GP
ArrayField(QtyMovC, M4Val,0,0); //кол-во для перемещения с С002
EndArray;
MainKeyBegin(SerNr, 1);
StoreInBaseKey;
AppendFieldToKeyName(SalesGroup);
AppendFieldToKeyName(LocCode);
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(SalesGroup);
KeySegment(SalesGroup);
KeySegment(SerNr)
KeyBegin(DatePlanLoc);
KeySegment(DatePlan);
KeySegment(LocCode);
KeySegment(SerNr);
KeyBegin(DatePlan);
KeySegment(DatePlan);
KeySegment(SerNr);
KeyBegin(DateSup);
KeySegment(DateSup);
KeySegment(SerNr);
KeyBegin(LocCode);
KeySegment(LocCode);
KeySegment(SerNr);
EndRecord;


BlockBegin(NewArtSerBlock,-,"");
XXSERBLOCK;

RecordBegin(NewArtVc, -, "");//Новинки
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(NewArtSerBlock);
RecordField(ArtCode,M4Code,20, 0);
RecordField(ArtName, M4Str,200,0);
RecordField(LocCode, M4Code,20,0);
RecordField(Qty, M4Int,0,0);
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(ArtCode);
KeySegment(ArtCode);
KeySegment(SerNr);
KeyBegin(ArtName);
KeySegment(ArtName);
KeySegment(SerNr);
KeyBegin(LocCode);
KeySegment(LocCode);
KeySegment(SerNr);
EndRecord;

BlockBegin(ObjLocBlock,-,"");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(Obj,M4Code,20,0);
ArrayField(Loc,M4Code,20,0);
EndArray;
EndBlock;


BlockBegin(AutoInvSerBlock,-,"");
XXSERBLOCK;

RecordBegin(AutoInvVc, -, "");//Реализация по остаткам
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(AutoInvSerBlock);
RecordField(DateAI, M4Date,0,0);
RecordField(LocCode, M4Code,20,0);
RecordField(UsrCode, M4Code,20,0);
RecordField(CustCode, M4Code,20,0);
RecordField(CustName, M4Str,200,0);
RecordField(TotSum, M4Val,0,0);
RecordField(InCl, M4Code,20,0);
RecordField(OKFlag, M4Mark,0,0);
RecordField(Math, M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(ArtCode, M4Code,20,0);
ArrayField(ArtName, M4Str,200,0);
ArrayField(HansaQty, M4Val,0,0);
ArrayField(LocQty, M4Val,0,0);
ArrayField(SoldQty, M4Val,0,0);
ArrayField(Sum, M4Val,0,0);
EndArray;
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(CustCode);
KeySegment(CustCode);
KeySegment(SerNr);
KeyBegin(CustName);
KeySegment(CustName);
KeySegment(SerNr);
KeyBegin(LocCode);
KeySegment(LocCode);
KeySegment(SerNr);
KeyBegin(TotSum);
KeySegment(TotSum);
KeySegment(SerNr);
KeyBegin(DateAI);
KeySegment(DateAI);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
EndRecord;

BlockBegin(CustLocBlock,-,"");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(Cust,M4Code,20,0);
ArrayField(Loc,M4Code,20,0);
EndArray;
EndBlock;

//Учет рабочего времени By DELPHI
RecordBegin(EmpWSVc, -, "");
RecordField(EmpCode, M4Code, 20, 0);
RecordField(WorkMonth, M4Int, 0, 0);
RecordField(WorkYear, M4Int, 0, 0);
RecordField(Superior, M4Code, 20, 0);
FieldIsUser(Superior);
RecordField(Department, M4Code, 20, 0);
RecordField(DirFlag, M4Mark, 0, 0);
RecordField(SalesGroup, M4Code, 20, 0);
FieldIsGroup(SalesGroup);
RecordField(WDays, M4Int, 0, 0); // Рабочих дней в месяце
RecordField(WHours, M4Int, 0, 0); // Рабочих часов в месяце
RecordField(WMinutes, M4Int, 0, 0); // Рабочих минут в месяце
RecordField(Percent, M4Val, 0, 0); // % выполнения
RecordField(OperShed, M4Str, 60, 0);
RecordField(OKFlag, M4Mark, 0, 0);
RecordField(TransDate, M4Date, 0, 0);
RecordField(Comment, M4Str, 100, 0);
RecordField(SuperiorFlag, M4Mark, 0, 0);
RecordField(EmpName, M4Str, 100, 0);
RecordField(FDays, M4Int, 0, 0); // факт
RecordField(FHours, M4Int, 0, 0);
RecordField(FMinutes, M4Int, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(stp, M4Int, 0, 0);
ArrayField(ovst, M4Int, 0, 0);
ArrayField(cDate, M4Date, 0, 0);
ArrayField(cTime, M4Time, 0, 0);
ArrayField(aTime, M4Time, 0, 0);
ArrayField(cHours, M4Int, 0, 0);
ArrayField(cMinutes, M4Int, 0, 0);
ArrayField(aHours, M4Int, 0, 0);
ArrayField(aMinutes, M4Int, 0, 0);
ArrayField(aComment, M4Str, 60, 0);
ArrayField(TimeType, M4UStr, 10, 0);
EndArray;
MainKeyBegin(Code, 1);
AppendFieldToKeyName(Superior);
AppendFieldToKeyName(SalesGroup);
KeySegment(EmpCode);
KeySegment(WorkMonth);
KeySegment(WorkYear);
StoreInBaseKey;
SubsetKeyBegin2(SupDep);
AppendFieldToKeyName(Superior);
AppendFieldToKeyName(Department);
KeySegment(DirFlag);
KeySegment(SuperiorFlag);
KeySegment(EmpCode);
KeySegment(WorkMonth);
KeySegment(WorkYear);
KeyBegin(Superior);
KeySegment(Superior);
KeySegment(EmpCode);
KeySegment(WorkMonth);
KeySegment(WorkYear);
KeyBegin(EmpName);
KeySegment(EmpName);
KeySegment(EmpCode);
KeySegment(WorkMonth);
KeySegment(WorkYear);
KeyBegin(SuperiorFlag);
KeySegment(SuperiorFlag);
KeySegment(EmpCode);
KeySegment(WorkMonth);
KeySegment(WorkYear);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(EmpCode);
KeySegment(WorkMonth);
KeySegment(WorkYear);
KeyBegin(DirFlag);
KeySegment(DirFlag);
KeySegment(EmpCode);
KeySegment(WorkMonth);
KeySegment(WorkYear);
EndRecord;

// График работы сотрудника
BlockBegin(OperShedBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(TimeStart, M4Time, 0, 0);
ArrayField(TimeEnd, M4Time, 0, 0);
ArrayField(Hours, M4Int, 0, 0);
ArrayField(Minutes, M4Int, 0, 0);
ArrayField(Comment, M4Str, 60, 0);
EndArray;
EndBlock;

BlockBegin(OperShedEmpBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(EmpCode, M4Code, 20, 0);
ArrayField(EmpName, M4Str, 100, 0);
ArrayField(Comment, M4Str, 60, 0);
EndArray;
EndBlock;

BlockBegin(DayTypeSWBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Type, M4Code, 1, 0);
ArrayField(Comment, M4Str, 60, 0);
EndArray;
EndBlock;

RecordBegin(OperSWDaysVc, -, "");
RecordField(CYear, M4Int, 0, 0);
RecordField(CMonth, M4Int, 0, 0);
RecordField(CDay, M4Int, 0, 0);
RecordField(Comment, M4Str, 60, 0);
MainKeyBegin(YearMonth, 0);
KeySegment(CYear);
KeySegment(CMonth);
StoreInBaseKey;
EndRecord;

RecordBegin(HRInspectorVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Department, M4UStr, 200, 0);
MainKeyBegin(Code, 0);
KeySegment(Code);
StoreInBaseKey;
EndRecord;
// end by DELPHI

//01.02.13 INAU - Ресурс "Договора"
RecordBegin(IClassIContractVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Description, M4Str, 100, 0);
RecordField(Hierarchy, M4Code, 20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Hierarchy);
KeySegment(Hierarchy);
KeySegment(Code);
KeyBegin(Description);
KeySegment(Description);
KeySegment(Code);
EndRecord;

BlockBegin(IContractFormBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Code, M4Code, 20, 0);
ArrayField(Name, M4Str, 250, 0);
EndArray;
EndBlock;

RecordBegin(IContractVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Comment, M4Str, 200, 0);
RecordField(ContractFormCode, M4Code, 20, 0);
RecordField(ContractFormName, M4Str, 250, 0);
RecordField(EntprCode, M4Code, 20, 0);
RecordField(EntprName, M4Str, 250, 0);
RecordField(CUCode, M4Code, 20, 0);
RecordField(CUName, M4Str, 60, 0);
RecordField(Classification, M4UStr, 200, 0);
RecordField(ContractType, M4Int, 0, 0);
RecordField(Status, M4Int, 0, 0);
RecordField(ValidDate, M4Date, 0, 0);
RecordField(tLegRisk, M4Str, 250, 0);
MainKeyBegin(Code, 0);
  KeySegment(Code);
KeyBegin(Comment);
  KeySegment(Comment);
  KeySegment(Code);
KeyBegin(ContractFormCode);
  KeySegment(ContractFormCode);
  KeySegment(Code);
KeyBegin(ContractFormName);
  KeySegment(ContractFormName);
  KeySegment(Code);
KeyBegin(EntprCode);
  KeySegment(EntprCode);
  KeySegment(Code);
KeyBegin(EntprName);
  KeySegment(EntprName);
  KeySegment(Code);
KeyBegin(CUCode);
  KeySegment(CUCode);
  KeySegment(Code);
KeyBegin(CUName);
  KeySegment(CUName);
  KeySegment(Code);
KeyBegin(ValidDate);
  KeySegment(ValidDate);
  KeySegment(Code);
EndRecord;
//===

BlockBegin(VoieSerBlock,-,"");
XXSERBLOCK;

RecordBegin(VoieVc, -, "");// Маршрут торговых
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(VoieSerBlock);
RecordField(DateCr, M4Date,0,0);
RecordField(DateCon, M4Date,0,0);
RecordField(Conserv, M4Code,20,0);
RecordField(Auteur, M4Code,20,0);
FieldIsUser(Auteur);
RecordField(Jour, M4Str,20,0); // день недели
RecordField(Classif, M4UStr,200,0);
RecordField(Vendeur, M4Code,20,0);
RecordField(OKFlag, M4Mark,0,0);
RecordField(Math, M4Matrix,0,0);
RecordField(SalesGroup, M4Code, 20, SalesGroupVc);
FieldIsGroup(SalesGroup);
RecordField(SumCust, M4Val,0,0);
RecordField(SumPCust, M4Val,0,0);
RecordField(SumCustPer, M4Val,0,0);
ArrayBegin(Math,-,1);
ArrayField(CastCode, M4Code,20,0);
ArrayField(CastName, M4Str,200,0);
ArrayField(Adr, M4Str,250,0);
ArrayField(TimeV, M4Time,0,0);
ArrayField(Zone, M4Code,20,0);
ArrayField(stp, M4Int, 0, 0);
ArrayField(PCastCode, M4Code,20,0);
ArrayField(stpt, M4Int, 0, 0);
EndArray;
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
AppendFieldToKeyName(Auteur);
AppendFieldToKeyName(SalesGroup);
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(VendJourOK);
KeySegment(OKFlag);
KeySegment(Vendeur);
KeySegment(Jour);
KeySegment(SerNr);
KeyBegin(DateCr);
KeySegment(DateCr);
KeySegment(SerNr);
KeyBegin(Auteur);
KeySegment(Auteur);
KeySegment(SerNr);
KeyBegin(Jour);
KeySegment(Jour);
KeySegment(SerNr);
KeyBegin(Vendeur);
KeySegment(Vendeur);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(SalesGroup);
KeySegment(SalesGroup);
KeySegment(SerNr);
EndRecord;
//======

BlockBegin(StorCheckSerBlock,-,"");
XXSERBLOCK;

RecordBegin(StorCheckVc, -, "");// стор-чек
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(StorCheckSerBlock);
RecordField(DateCr, M4Date,0,0); //дата создания
RecordField(DateCon, M4Date,0,0);  //дата сохранения
RecordField(DateV, M4Date,0,0);  //дата маршрута
RecordField(Conserv, M4Code,20,0);
RecordField(Auteur, M4Code,20,0);
FieldIsUser(Auteur);
RecordField(Classif, M4UStr,200,0);
RecordField(Vendeurs, M4UStr,200,0); // торговые
RecordField(OKFlag, M4Mark,0,0);
RecordField(Math, M4Matrix,0,0);
RecordField(SumAssOur, M4Val,0,0);
RecordField(SumAssStr, M4Val,0,0);
RecordField(SumAssPer, M4Val,0,0);
RecordField(SalesGroup, M4Code,20,0);
FieldIsGroup(SalesGroup);
RecordField(JourSem, M4Str,20,0);
ArrayBegin(Math,-,1);
ArrayField(CastCode, M4Code,20,0);
ArrayField(Zone, M4Str,200,0);// район
ArrayField(CastName, M4Str,200,0);
ArrayField(Adr, M4Str,250,0);
ArrayField(TimeV, M4Time,0,0);
ArrayField(Esprece, M4Code,20,0); //тип клиента
ArrayField(Spec, M4Code,20,0); //Специализация клиента
ArrayField(Fourn, M4Str,250,0); //Поставщик
ArrayField(AssortOur, M4Val,0,0); //наш ассортимент
ArrayField(AssortStr, M4Val,0,0); //чужой ассортимент
ArrayField(Comment, M4Str,250,0); //комментарий
ArrayField(Tasks, M4Str,250,0); //Задачи
ArrayField(DatePl, M4Date,0,0);
ArrayField(DateFc, M4Date,0,0);
ArrayField(stp, M4Int, 0, 0);
ArrayField(PCastCode, M4Code,20,0);
ArrayField(stpt, M4Int, 0, 0);
ArrayField(Vendeur, M4Code,20,0);
ArrayField(AssortPer, M4Val,0,0); //% нашего  ассортимента
EndArray;
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
AppendFieldToKeyName(Auteur);
AppendFieldToKeyName(SalesGroup);
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(DateV);
KeySegment(DateV);
KeySegment(SerNr);
KeyBegin(DateCr);
KeySegment(DateCr);
KeySegment(SerNr);
KeyBegin(Auteur);
KeySegment(Auteur);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
EndRecord;

RecordBegin(PotCustVc, -, "");//потенциальные клиенты
RecordField(Code, M4Code,20, 0);
RecordField(Name, M4Str,200,0);
RecordField(Adr, M4Str,250,0);
RecordField(SalMan, M4Code,20, 0);
FieldIsUser(SalMan);
RecordField(Classific, M4UStr,250,0);
RecordField(Rival, M4Str,250,0); //конкуренты
RecordField(Close, M4Mark,0,0);
RecordField(SalesGroup, M4Code, 20, SalesGroupVc);
FieldIsGroup(SalesGroup);
MainKeyBegin(Code, 1);
StoreInBaseKey;
AppendFieldToKeyName(SalMan);
AppendFieldToKeyName(SalesGroup);
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(Adr);
KeySegment(Adr);
KeySegment(Code);
KeyBegin(SalMan);
KeySegment(SalMan);
KeySegment(Code);
KeyBegin(SalesGroup);
KeySegment(SalesGroup);
KeySegment(Code);
EndRecord;

RecordBegin(RivalVc, -, "");//конкуренты
RecordField(Code, M4Code,20, 0);
RecordField(Name, M4Str,200,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

//11.02.13 INAU - Ресурс "Сотрудники ГК"
RecordBegin(IClassIEmployeeVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Description, M4Str, 100, 0);
RecordField(Hierarchy, M4Code, 20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Hierarchy);
KeySegment(Hierarchy);
KeySegment(Code);
KeyBegin(Description);
KeySegment(Description);
KeySegment(Code);
EndRecord;

RecordBegin(IEmployeeVc, -, "");
//Общая информация
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 200, 0);
RecordField(Gender, M4Int, 0, 0);
RecordField(BirthDate, M4Date, 0, 0);
RecordField(Phones, M4Str, 200, 0);
RecordField(DepCode, M4Code, 10, 0); //Отдел
RecordField(DepName, M4Str, 60, 0);
RecordField(Classification, M4UStr, 200, 0);
//Документы
RecordField(Passport, M4Str, 200, 0); //Паспортные данные
RecordField(IdentCode, M4Str, 60, 0); //ИНН
RecordField(InsuranceCode, M4Str, 60, 0); //Номер свидетельства об обязательном страховании
RecordField(Diploma, M4Str, 200, 0); //Диплом об образовании
RecordField(PensionerCard, M4Str, 200, 0); //Пенсионное удостоверение
RecordField(DisabilityCard, M4Str, 200, 0); //Удостоверение инвалида
RecordField(DrivingLicense, M4Str, 200, 0); //Водительское удостоверение
//Управленческий учет
RecordField(Found, M4Val, 0, 0); //Ставка
RecordField(BonusFound, M4Val, 0, 0); //Премиальный фонд
RecordField(MotiveCoeff, M4Val, 0, 0); //Коэффициент мотивации
RecordField(StateJob, M4Code, 20, StateVc); //Должность по штату
RecordField(PersAcc, M4Code, 20,0); //Счет
RecordField(MotiveDebAcc, M4Code, 20,0); //Мотивация Деб.
RecordField(MotiveCredAcc, M4Code, 20,0); //Мотивация Кред.
RecordField(MotivRespCode, M4Code, 20, 0); //Ответственный за мотивациию
RecordField(Supervisor, M4Code, 20, 0); //Руководитель
RecordField(StartDate, M4Date, 0, 0); //Дата приема (первый рабочий день)
RecordField(TestEndDate, M4Date, 0, 0); //Дата окончания испытательного срока
RecordField(HolidayDate, M4Date, 0, 0); //Дата начала фактического отпуска
RecordField(HolidayPlanDate, M4Date, 0, 0); //Дата планируемого ежегодного отпуска
//Персональные данные
RecordField(BirthPlace, M4Str, 200, 0); //Место рождения
RecordField(RegAddr, M4Str, 200, 0); //Адрес прописки
RecordField(ActualAddr, M4Str, 200, 0); //Адрес фактического проживания
RecordField(Status, M4Int, 0, 0); //Статус (испытательный срок, действующий, ...)
//Семейное положение
RecordField(Mother, M4Str, 200, 0); //Мать
RecordField(Father, M4Str, 200, 0); //Отец
RecordField(Family, M4Str, 200, 0); //Супруг(а)
RecordField(HasChildren, M4Int, 0, 0); //Дети (0 - нет, 1 - есть)
RecordField(Child1, M4Str, 200, 0); //Дети
RecordField(Child2, M4Str, 200, 0); //Дети
RecordField(Child3, M4Str, 200, 0); //Дети
RecordField(Child4, M4Str, 200, 0); //Дети
RecordField(Child5, M4Str, 200, 0); //Дети
RecordField(DecreeEndDate, M4Date, 0, 0); //Дата выхода из декрета
RecordField(RelativePhone, M4Str, 200, 0); //Телефон родственника
//Образование, обучение
RecordField(Education1, M4Str, 200, 0); //Учебное заведение
RecordField(Education1Period, M4UStr, 21, 0); //Период обучения
RecordField(Education2, M4Str, 200, 0);
RecordField(Education2Period, M4UStr, 21, 0);
RecordField(Education3, M4Str, 200, 0);
RecordField(Education3Period, M4UStr, 21, 0);
RecordField(Qualification, M4Str, 200, 0); //Квалификация
RecordField(Training1, M4Str, 200, 0); //Обучающие мероприятия
RecordField(Training1Period, M4UStr, 21, 0);
RecordField(Training2, M4Str, 200, 0);
RecordField(Training2Period, M4UStr, 21, 0);
RecordField(Training3, M4Str, 200, 0);
RecordField(Training3Period, M4UStr, 21, 0);
RecordField(Training4, M4Str, 200, 0);
RecordField(Training4Period, M4UStr, 21, 0);
RecordField(Training5, M4Str, 200, 0);
RecordField(Training5Period, M4UStr, 21, 0);
//Опыт работы
RecordField(CareerStartDate, M4Date, 0, 0); //Дата начала трудовой деятельности
RecordField(CareerExperience1, M4Str, 200, 0); //Трудовая теятельность согласно трудовой книжки
RecordField(CareerExperience2, M4Str, 200, 0);
RecordField(CareerExperience3, M4Str, 200, 0);
RecordField(CareerExperience4, M4Str, 200, 0);
RecordField(CareerExperience5, M4Str, 200, 0);
//Воинский учет
RecordField(MilitaryGroup, M4Str, 200, 0); //Группа учета
RecordField(MilitaryCat, M4Str, 200, 0); //Категория учета
RecordField(MilitaryStruct, M4Str, 200, 0); //Состав
RecordField(MilitaryRank, M4Str, 200, 0); //Звание
RecordField(MilitarySpec, M4Str, 200, 0); //ВУС
RecordField(MilitaryServFit, M4Str, 200, 0); //Годность к военной службе
RecordField(FactMilitaryOffice, M4Str, 200, 0); //Военкомат по месту факт. проживания
RecordField(RegMilitaryOffice, M4Str, 200, 0); //Военкомат по месту регистрации
RecordField(SpecialRecords, M4Str, 200, 0); //Пребывание на спецучете
//Дополнительная информация
RecordField(VehicleRegistration, M4Str, 200, 0); //Сведетельство о регистрации Т/С
//Характеристика
RecordField(Characteristics, M4Str, 200, 0); //Характеристика
//
RecordField(Math, M4Matrix, 0, 0);
RecordField(FoodAcc, M4Code, 20,0); //Питание счет.
RecordField(tObj, M4Str, 200, 0);
ArrayBegin(Math, -, 1);
ArrayField(EntprCode, M4Code, 20, 0); //Предприятие
ArrayField(EntprName, M4Str, 200, 0);
ArrayField(EntprType, M4Int, 0, 0); //Тип из справочника Предприятия ГК (1 - Юр. лицо, 2 - Физ. лицо, 3 - ГК)
ArrayField(StPodrCode, M4Code, 20, 0); //Подразделение
ArrayField(StPodrName, M4Str, 200, 0);
ArrayField(PositionCode, M4Code, 20, 0); //Должность
ArrayField(PositionName, M4Str, 100, 0);
ArrayField(RegDate, M4Date, 0, 0); //Дата официального оформления
ArrayField(DismissDate, M4Date, 0, 0); //Дата увольнения
ArrayField(DismissReason, M4Str, 200, 0); //Уволен по статье
EndArray;
//
MainKeyBegin(Code, 0);
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(BirthDate);
  KeySegment(BirthDate);
  KeySegment(Code);
KeyBegin(DepCode);
  KeySegment(DepCode);
  KeySegment(Code);
KeyBegin(StateJob);
  KeySegment(StateJob);
  KeySegment(Code);
KeyBegin(MotivRespCode);
  KeySegment(MotivRespCode);
  KeySegment(Code);
KeyBegin(Supervisor);
  KeySegment(Supervisor);
  KeySegment(Code);
KeyBegin(StartDate);
  KeySegment(StartDate);
  KeySegment(Code);
KeyBegin(TestEndDate);
  KeySegment(TestEndDate);
  KeySegment(Code);
KeyBegin(HolidayDate);
  KeySegment(HolidayDate);
  KeySegment(Code);
KeyBegin(HolidayPlanDate);
  KeySegment(HolidayPlanDate);
  KeySegment(Code);
KeyBegin(Status);
  KeySegment(Status);
  KeySegment(Code);
KeyBegin(DecreeEndDate);
  KeySegment(DecreeEndDate);
  KeySegment(Code);
KeyBegin(CareerStartDate);
  KeySegment(CareerStartDate);
  KeySegment(Code);
SubsetKeyBegin2(EntprCode);
  StoreInBaseKey;
  AppendMatrixFieldToKeyName(EntprCode, 0);
  KeySegment(Code);
SubsetKeyBegin2(StPodrCode);
  StoreInBaseKey;
  AppendMatrixFieldToKeyName(StPodrCode, 0);
  KeySegment(Code);
SubsetKeyBegin2(PositionCode);
  StoreInBaseKey;
  AppendMatrixFieldToKeyName(PositionCode, 0);
  KeySegment(Code);
EndRecord;
//===

RecordBegin(SupClVc, -, "");//классификаторы "Поставщиков"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,200,0);
RecordField(CodeGr,M4Code,20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(CodeGr);
KeySegment(CodeGr);
KeySegment(Code);
EndRecord;

RecordBegin(SupGrClVc, -, "");//Группы классификаторов "Поставщиков"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,200,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;


BlockBegin(tQuestSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tQuestionsVc, -, "");// Вопросы для аттестации сотрудников
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tQuestSerBlock);
RecordField(DateCr, M4Date,0,0); //дата создания
RecordField(DateCon, M4Date,0,0);  //дата сохранения
RecordField(Conserv, M4Code,20,0); // сохранил
RecordField(UserCode, M4Code,20,0); // создал
RecordField(QTypeCode, M4Code,200,0); // тип из настройки типов=название теста
RecordField(QTypeName, M4Str,200,0);
RecordField(Quest, M4TextField,0,0); // Вопрос
RecordField(Math, M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(Answer, M4Str,200,0);// Ответ
ArrayField(Ball, M4Int,0,0); // Балл за ответ
EndArray;
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
KeySegment(SerNr);
KeyBegin(QTypeCode);
KeySegment(QTypeCode);
KeySegment(SerNr);
KeyBegin(QTypeName);
KeySegment(QTypeName);
KeySegment(SerNr);
EndRecord;

BlockBegin(tValSerBlock,-,"");
XXSERBLOCK;

RecordBegin(ValidVc, -, "");// Аттестация
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tValSerBlock);
RecordField(DateCon, M4Date,0,0);  //дата сохранения
RecordField(UserCode, M4Code,20,0);
FieldIsUser(UserCode);
RecordField(UserPodr, M4Code,20,0);
RecordField(UserName, M4Str,200,0);
RecordField(QTypeCode, M4Code,200,0); // тип из настройки типов=название теста
RecordField(QTypeName, M4Str,200,0);
RecordField(OKFlag, M4Mark,0,0); // тест завершён
RecordField(SumBall, M4Val,0,0); // Баллы всего
RecordField(Math, M4Matrix,0,0);
RecordField(Pers, M4Val,0,0); // Баллы всего
ArrayBegin(Math,-,1);
ArrayField(QuestNum, M4Long,0,0);// № Вопроса
ArrayField(Answer, M4Str,200,0);// Ответ
ArrayField(Ball, M4Int,0,0); // Балл за ответ
EndArray;
MainKeyBegin(SerNr, 1);
StoreInBaseKey;
AppendFieldToKeyName(UserCode);
KeySegment(SerNr);
SubsetKeyBegin2(SubUser);
StoreInBaseKey;
KeyBegin(DateConOK);
KeySegment(OKFlag);
KeySegment(DateCon);
KeySegment(SerNr);
KeyBegin(DateCon);
KeySegment(DateCon);
KeySegment(SerNr);
KeyBegin(UserCode);
KeySegment(UserCode);
KeySegment(SerNr);
KeyBegin(UserName);
KeySegment(UserName);
KeySegment(SerNr);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(QTypeCode);
KeySegment(QTypeCode);
KeySegment(SerNr);
KeyBegin(QTypeName);
KeySegment(QTypeName);
KeySegment(SerNr);
EndRecord;

RecordBegin(QTypeVc, -, "");// Типы вопросов = название теста
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,200,0);
RecordField(UserCode,M4Code,20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(FreeAlarmVc, -, "");
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,200,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;


// 15.03.13 TGOR
RecordBegin(OffCardVc, -, ""); // Карточка офиса
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,200,0);
RecordField(PODRCode,M4Code,20, 0);
RecordField(PODRName,M4Str,200,0);
RecordField(Adr,M4Str,200,0);
RecordField(Kol,M4Int, 0,0);
RecordField(GSquare, M4Val,0,0);
RecordField(Floors,M4Int, 0,0);
RecordField(Classific,M4Str,250,0);
RecordField(Description,M4Str,250,0);
RecordField(Ground,M4Str,250,0);
RecordField(Wall,M4Str,250,0);
RecordField(Windows,M4Str,250,0);
RecordField(Doors,M4Str,250,0);
RecordField(Ceiling,M4Str,250,0);
RecordField(Lighting,M4Str,250,0);
RecordField(Wiring,M4Str,250,0);
RecordField(Roof,M4Str,250,0);
RecordField(Ramp,M4Str,250,0);
RecordField(TypeHeating,M4Str,250,0);
RecordField(Electricity,M4Str,250,0);
RecordField(Gas,M4Str,250,0);
RecordField(Water,M4Str,250,0);
RecordField(Heating,M4Str,250,0);
RecordField(PeriodHoz,M4Str,50,0);
RecordField(PeriodKofe,M4Str,50,0);
RecordField(PeriodRent,M4Str,50,0);
RecordField(Hoz, M4Val,0,0);
RecordField(KommentHoz,M4Str,200,0);
RecordField(Kofe, M4Val,0,0);
RecordField(Rent, M4Val,0,0);
RecordField(Bezp,M4Str,250,0);
RecordField(CodeOT,M4Code,20, 0);
RecordField(NameOT,M4Str,200,0);
RecordField(CodeEL,M4Code,20, 0);
RecordField(NameEL,M4Str,200,0);
RecordField(CodePZ,M4Code,20, 0);
RecordField(NamePZ,M4Str,200,0);
RecordField(Defect,M4Str,200,0);
RecordField(Math, M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(Size, M4Str,200,0);
ArrayField(Square, M4Val,0,0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(PODRCode);
KeySegment(PODRCode);
KeySegment(Code);
EndRecord;

RecordBegin(RegDefVc, -, "");//Неисправности офиса
RecordField(Code,M4Code,20, 0);//код офиса
RecordField(Name,M4Str,200,0);
RecordField(Math, M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(Def, M4Str,250,0);
ArrayField(DataDef, M4Date,0,0);
ArrayField(DataCor, M4Date,0,0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(tOffClVc, -, "");//классификаторы"Офисов"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(CodeGr,M4Code,20, 0);
RecordField(Math, M4TextField, 0, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(CodeGr);
KeySegment(CodeGr);
KeySegment(Code);
EndRecord;

RecordBegin(tOffGrVc, -, "");//Группы классификаторов "Офисов"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

BlockBegin(tVerifSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tVerifVc, -, "");// Сверка 1С и Ханса
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tVerifSerBlock);
RecordField(Date, M4Date,0,0);  //дата сверки
RecordField(CodeC,  M4Code, 20, 0); //1C
RecordField(CodeCU, M4Code, 20, 0); // Hansa
RecordField(NameCU, M4Str,200,0);
RecordField(User, M4Code,20,0);
FieldIsUser(User);
RecordField(SalesGroup,M4Code,20, 0);
FieldIsGroup(SalesGroup);
RecordField(DebC, M4Val,0,0);
RecordField(DebCU, M4Val,0,0);
RecordField(Dif, M4Val,0,0);
MainKeyBegin(SerNr, 1);
StoreInBaseKey;
AppendFieldToKeyName(User);
AppendFieldToKeyName(SalesGroup);
KeySegment(SerNr);
StoreInBaseKey;
KeyBegin(Date);
KeySegment(Date);
KeySegment(SerNr);
KeyBegin(CodeC);
KeySegment(CodeC);
KeySegment(SerNr);
KeyBegin(CodeCU);
KeySegment(CodeCU);
KeySegment(SerNr);
KeyBegin(NameCU);
KeySegment(NameCU);
KeySegment(SerNr);
KeyBegin(SalesGroup);
KeySegment(SalesGroup);
KeySegment(SerNr);
KeyBegin(DebC);
KeySegment(DebC);
KeySegment(SerNr);
KeyBegin(DebCU);
KeySegment(DebCU);
KeySegment(SerNr);
KeyBegin(Dif);
KeySegment(Dif);
KeySegment(SerNr);
EndRecord;


BlockBegin(CheckLogBlock,-,"");
XXSERBLOCK;

RecordBegin(CheckLogVc, -, "");//Лог проставления галок
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(CheckLogBlock);
RecordField(CodeFil,M4Code,20, 0);
RecordField(CodeCust,M4Code,20, 0);
RecordField(NameCust,M4Str,200,0);
RecordField(LogDate,M4Date,0,0);
RecordField(LogTime,M4Time,0,0);
MainKeyBegin(SerNr, 0);
StoreInBaseKey;
KeySegment(SerNr);
KeyBegin(CodeFil);
KeySegment(CodeFil);
KeySegment(SerNr);
KeyBegin(CodeCust);
KeySegment(CodeCust);
KeySegment(SerNr);
KeyBegin(NameCust);
KeySegment(NameCust);
KeySegment(SerNr);
KeyBegin(LogDate);
KeySegment(LogDate);
KeySegment(SerNr);
EndRecord;


//Основные средства
//Типы Основных средств
RecordBegin(ASCatVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(Parent, M4Code, 20, 0);
RecordField(Objects, M4UStr, 200, 0);
RecordField(TermWOff, M4Int, 0, 0);
RecordField(ASAcc, M4Code, 20, 0);
RecordField(PurchaseAcc, M4Code, 20, 0);
RecordField(AmortizationAcc, M4Code, 20, 0);
RecordField(DeprecationAcc, M4Code, 20, 0);
RecordField(RevenueAcc, M4Code, 20, 0);
RecordField(CostAcc, M4Code, 20, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(Parent);
  KeySegment(Parent);
  KeySegment(Code);
EndRecord;

//Классификация ОС
RecordBegin(ASClassVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Description, M4Str, 100, 0);
RecordField(Hierarchy, M4Code, 20, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Hierarchy);
  KeySegment(Hierarchy);
  KeySegment(Code);
KeyBegin(Description);
  KeySegment(Description);
  KeySegment(Code);
EndRecord;

//Основные средства
RecordBegin(ASVc, -, "");
RecordField(Code, M4Code, 20, 0); //Инв №
RecordField(ASType, M4Code, 20, 0);
RecordField(ASClass, M4UStr, 200, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(ASObj, M4UStr, 200, 0);
RecordField(Objects, M4UStr, 200, 0);
RecordField(TermWOff, M4Int, 0, 0);
RecordField(Comment, M4Str, 200, 0);
RecordField(Department, M4Code, 20, 0);
RecordField(EmpCode, M4Code, 20, 0);
FieldIsUser(EmpCode);
RecordField(SalesGroup, M4Code, 20, 0);
FieldIsGroup(SalesGroup);
RecordField(PartOf, M4Code, 20, 0);
RecordField(VECode, M4Code, 20, 0);
RecordField(VEName, M4Str, 200, 0);
RecordField(PurchaseDate, M4Date, 0, 0);
RecordField(StartDate, M4Date, 0, 0);
RecordField(EndDate, M4Date, 0, 0);
RecordField(PlanEndDate, M4Date, 0, 0);
RecordField(TransDate, M4Date, 0, 0);
RecordField(PerMonWOff, M4Val, 0, 0); //Сумма ежемесячного износа
RecordField(CostIn, M4Val, 0, 0);
RecordField(Cost, M4Val, 0, 0);
RecordField(InExpl, M4Mark, 0, 0);
RecordField(WOff, M4Mark, 0, 0);
RecordField(Sold, M4Mark, 0, 0);
RecordField(Closed, M4Mark, 0, 0);
FieldIsInvalid(Closed);
RecordField(ASAcc, M4Code, 20, 0);
RecordField(PurchaseAcc, M4Code, 20, 0);
RecordField(AmortizationAcc, M4Code, 20, 0);
RecordField(DeprecationAcc, M4Code, 20, 0);
RecordField(RevenueAcc, M4Code, 20, 0);
RecordField(CostAcc, M4Code, 20, 0);
RecordField(SaleAcc, M4Code, 20, 0);
RecordField(SaleSum, M4Val, 0, 0);
RecordField(AT2UnitCode, M4Code, 20, 0);
//
MainKeyBegin(Code, 1);
  StoreInBaseKey;
  AppendFieldToKeyName(EmpCode);
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(Department);
  AppendFieldToKeyName(PartOf);
  KeySegment(Code);
SubsetKeyBegin2(ASType);
  StoreInBaseKey;
  AppendFieldToKeyName(EmpCode);
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(Department);
  KeySegment(ASType);
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(ASObj);
  KeySegment(ASObj);
  KeySegment(Code);
KeyBegin(EmpCode);
  KeySegment(EmpCode);
  KeySegment(Code);
KeyBegin(Department);
  KeySegment(Department);
  KeySegment(Code);
KeyBegin(VECode);
  KeySegment(VECode);
  KeySegment(Code);
KeyBegin(Closed);
  KeySegment(Closed);
  KeySegment(Code);
KeyBegin(InExpl);
  KeySegment(InExpl);
  KeySegment(Code);
KeyBegin(WOff);
  KeySegment(WOff);
  KeySegment(Code);
KeyBegin(Sold);
  KeySegment(Sold);
  KeySegment(Code);
KeyBegin(PurchaseDate);
  KeySegment(PurchaseDate);
  KeySegment(Code);
KeyBegin(StartDate);
  KeySegment(StartDate);
  KeySegment(Code);
KeyBegin(PlanEndDate);
  KeySegment(PlanEndDate);
  KeySegment(Code);
KeyBegin(EndDate);
  KeySegment(EndDate);
  KeySegment(Code);
KeyBegin(TransDate);
  KeySegment(TransDate);
  KeySegment(Code);
EndRecord;

BlockBegin(ASHistSerBlock,-,"");
XXSERBLOCK;

//История ОС
RecordBegin(ASHistVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(ASHistSerBlock);
RecordField(Code, M4Code, 20, 0); //Инв №
RecordField(Department, M4Code, 20, 0);
RecordField(EmpCode, M4Code, 20, 0);
FieldIsUser(EmpCode);
RecordField(SalesGroup, M4Code, 20, 0);
FieldIsGroup(SalesGroup);
RecordField(TransDate, M4Date, 0, 0);
RecordField(Comment, M4Str, 20, 0);
RecordField(Cost, M4Val, 0, 0);
RecordField(TRNumber, M4Long, 0, 0);
RecordField(TRIntYc, M4Int, 0, 0);
MainKeyBegin(SerNr, 1);
  StoreInBaseKey;
  AppendFieldToKeyName(EmpCode);
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(Code);
  KeySegment(SerNr);
KeyBegin(Code);
  KeySegment(Code);
  KeySegment(SerNr);
KeyBegin(Department);
  KeySegment(Department);
  KeySegment(SerNr);
KeyBegin(EmpCode);
  KeySegment(EmpCode);
  KeySegment(SerNr);
KeyBegin(TransDate);
  KeySegment(TransDate);
  KeySegment(SerNr);
KeyBegin(SalesGroup);
  KeySegment(SalesGroup);
  KeySegment(SerNr);
EndRecord;


//Заказ канцтоваров
//Список товаров
BlockBegin(IStnrListBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(ArtCode, M4UStr, 200, 0);
ArrayField(StartDate, M4Date, 0, 0);
ArrayField(EndDate, M4Date, 0, 0);
EndArray;
EndBlock;

//Лимиты (планы)
BlockBegin(IStnrPlanSerBlock,-,"");
XXSERBLOCK;
RecordBegin(IStnrPlanVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(IStnrPlanSerBlock);
RecordField(DepCode, M4Code, 20, 0);
RecordField(DepName, M4Str, 100, 0);
RecordField(Year, M4Long, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
RecordField(Summ1, M4Val, 0, 0);
RecordField(Summ2, M4Val, 0, 0);
RecordField(Summ3, M4Val, 0, 0);
RecordField(Summ4, M4Val, 0, 0);
RecordField(Summ5, M4Val, 0, 0);
RecordField(Summ6, M4Val, 0, 0);
RecordField(Summ7, M4Val, 0, 0);
RecordField(Summ8, M4Val, 0, 0);
RecordField(Summ9, M4Val, 0, 0);
RecordField(Summ10, M4Val, 0, 0);
RecordField(Summ11, M4Val, 0, 0);
RecordField(Summ12, M4Val, 0, 0);
RecordField(SummF1, M4Val, 0, 0);
RecordField(SummF2, M4Val, 0, 0);
RecordField(SummF3, M4Val, 0, 0);
RecordField(SummF4, M4Val, 0, 0);
RecordField(SummF5, M4Val, 0, 0);
RecordField(SummF6, M4Val, 0, 0);
RecordField(SummF7, M4Val, 0, 0);
RecordField(SummF8, M4Val, 0, 0);
RecordField(SummF9, M4Val, 0, 0);
RecordField(SummF10, M4Val, 0, 0);
RecordField(SummF11, M4Val, 0, 0);
RecordField(SummF12, M4Val, 0, 0);
RecordField(SummK1, M4Val, 0, 0);
RecordField(SummK2, M4Val, 0, 0);
RecordField(SummK3, M4Val, 0, 0);
RecordField(SummK4, M4Val, 0, 0);
RecordField(SummK5, M4Val, 0, 0);
RecordField(SummK6, M4Val, 0, 0);
RecordField(SummK7, M4Val, 0, 0);
RecordField(SummK8, M4Val, 0, 0);
RecordField(SummK9, M4Val, 0, 0);
RecordField(SummK10, M4Val, 0, 0);
RecordField(SummK11, M4Val, 0, 0);
RecordField(SummK12, M4Val, 0, 0);
RecordField(ObjPODR, M4Code, 20, 0);
RecordField(ObjUZTR, M4Code, 20, 0);
RecordField(ObjFN, M4Code, 20, 0);
RecordField(ObjTIP, M4Code, 20, 0);
ArrayBegin(Math, -, 1);
ArrayField(ArtCode, M4Code, 20, 0);
ArrayField(ArtName, M4Str, 100, 0);
ArrayField(Plan1, M4Val, 0, 0);
ArrayField(Plan2, M4Val, 0, 0);
ArrayField(Plan3, M4Val, 0, 0);
ArrayField(Plan4, M4Val, 0, 0);
ArrayField(Plan5, M4Val, 0, 0);
ArrayField(Plan6, M4Val, 0, 0);
ArrayField(Plan7, M4Val, 0, 0);
ArrayField(Plan8, M4Val, 0, 0);
ArrayField(Plan9, M4Val, 0, 0);
ArrayField(Plan10, M4Val, 0, 0);
ArrayField(Plan11, M4Val, 0, 0);
ArrayField(Plan12, M4Val, 0, 0);
ArrayField(PlanQ1, M4Val, 0, 0);
ArrayField(PlanQ2, M4Val, 0, 0);
ArrayField(PlanQ3, M4Val, 0, 0);
ArrayField(PlanQ4, M4Val, 0, 0);
ArrayField(PlanY, M4Val, 0, 0);
ArrayField(Price1, M4Val, 0, 0);
ArrayField(Price2, M4Val, 0, 0);
ArrayField(Price3, M4Val, 0, 0);
ArrayField(Price4, M4Val, 0, 0);
ArrayField(Price5, M4Val, 0, 0);
ArrayField(Price6, M4Val, 0, 0);
ArrayField(Price7, M4Val, 0, 0);
ArrayField(Price8, M4Val, 0, 0);
ArrayField(Price9, M4Val, 0, 0);
ArrayField(Price10, M4Val, 0, 0);
ArrayField(Price11, M4Val, 0, 0);
ArrayField(Price12, M4Val, 0, 0);
ArrayField(POCode1, M4Code, 20, 0);
ArrayField(POCode2, M4Code, 20, 0);
ArrayField(POCode3, M4Code, 20, 0);
ArrayField(POCode4, M4Code, 20, 0);
ArrayField(POCode5, M4Code, 20, 0);
ArrayField(POCode6, M4Code, 20, 0);
ArrayField(POCode7, M4Code, 20, 0);
ArrayField(POCode8, M4Code, 20, 0);
ArrayField(POCode9, M4Code, 20, 0);
ArrayField(POCode10, M4Code, 20, 0);
ArrayField(POCode11, M4Code, 20, 0);
ArrayField(POCode12, M4Code, 20, 0);
ArrayField(POName1, M4Str, 100, 0);
ArrayField(POName2, M4Str, 100, 0);
ArrayField(POName3, M4Str, 100, 0);
ArrayField(POName4, M4Str, 100, 0);
ArrayField(POName5, M4Str, 100, 0);
ArrayField(POName6, M4Str, 100, 0);
ArrayField(POName7, M4Str, 100, 0);
ArrayField(POName8, M4Str, 100, 0);
ArrayField(POName9, M4Str, 100, 0);
ArrayField(POName10, M4Str, 100, 0);
ArrayField(POName11, M4Str, 100, 0);
ArrayField(POName12, M4Str, 100, 0);
EndArray;
MainKeyBegin(SerNr, 1);
  StoreInBaseKey;
  AppendFieldToKeyName(SerNr)
  AppendFieldToKeyName(Year);
  KeySegment(SerNr);
SubsetKeyBegin2(Years);
  AppendFieldToKeyName(SerNr)
  AppendFieldToKeyName(Year);
  KeySegment(Year);
  KeySegment(SerNr);

KeyBegin(DepCode);
  KeySegment(DepCode);
  KeySegment(SerNr);
KeyBegin(DepName);
  KeySegment(DepName);
  KeySegment(SerNr);
KeyBegin(Year);
  KeySegment(Year);
  KeySegment(SerNr);

KeyBegin(MegaKey);
  KeySegment(Year);
  KeySegment(DepCode);
  KeySegment(ObjPODR);
  KeySegment(ObjUZTR);
  KeySegment(ObjTIP);
  KeySegment(SerNr);


EndRecord;

//Заявки
BlockBegin(IStnrOrdSerBlock,-,"");
XXSERBLOCK;

RecordBegin(IStnrOrdVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(IStnrOrdSerBlock);
RecordField(DepCode, M4Code, 20, 0);
FieldIsGroup(DepCode);
RecordField(DepName, M4Str, 100, 0);
RecordField(OrdDate, M4Date, 0, 0);
RecordField(OrdPlanDate, M4Date, 0, 0);
RecordField(OrderedFlag, M4Mark, 0, 0);
RecordField(OrderedSign, M4Code, 20, 0);
RecordField(ConfirmedFlag, M4Mark, 0, 0);
RecordField(ConfirmedSign, M4Code, 20, 0);
RecordField(POFlag, M4Mark, 0, 0);
RecordField(POSign, M4Code, 20, 0);
RecordField(POSerNr, M4Long, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
RecordField(SummM, M4Val, 0, 0);
RecordField(SummFM, M4Val, 0, 0);
RecordField(ObjPODR, M4Code, 20, 0);
RecordField(ObjUZTR, M4Code, 20, 0);
RecordField(ObjFN, M4Code, 20, 0);
RecordField(CurSign, M4Code, 20, 0);
FieldIsUser(CurSign);
RecordField(ObjTIP, M4Code, 20, 0);
RecordField(SDFlag, M4Mark, 0, 0);
RecordField(SDNr, M4Long, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(ArtCode, M4Code, 20, 0);
ArrayField(ArtName, M4Str, 100, 0);
ArrayField(Qnt, M4Val, 0, 0);
ArrayField(Plan, M4Val, 0, 0);
ArrayField(Price, M4Val, 0, 0);
ArrayField(Zak, M4Long, 0, 0);
EndArray;
MainKeyBegin(SerNr, 1);
  StoreInBaseKey;
  AppendFieldToKeyName(CurSign);
  AppendFieldToKeyName(DepCode);
  AppendFieldToKeyName(SerNr);
  KeySegment(SerNr);
SubsetKeyBegin2(tDepCode);
  AppendFieldToKeyName(CurSign);
  AppendFieldToKeyName(DepCode);
  AppendFieldToKeyName(SerNr);
  KeySegment(DepCode);
  KeySegment(SerNr);
KeyBegin(OrdDate);
  KeySegment(OrdDate);
  KeySegment(SerNr);
KeyBegin(OrderedFlag);
  KeySegment(OrderedFlag);
  KeySegment(SerNr);
KeyBegin(ConfPOFlag);
  KeySegment(ConfirmedFlag);
  KeySegment(POFlag);
  KeySegment(DepCode);
  KeySegment(SerNr);
KeyBegin(ConfirmedFlag);
  KeySegment(ConfirmedFlag);
  KeySegment(SerNr);
KeyBegin(OrdPlanDate);
  KeySegment(OrdPlanDate);
  KeySegment(SerNr);
KeyBegin(POFlag);
  KeySegment(POFlag);
  KeySegment(SerNr);
KeyBegin(POSerNr);
  KeySegment(POSerNr);
  KeySegment(SerNr);
KeyBegin(OrdPlDate);
  KeySegment(OrdPlanDate);
  KeySegment(DepCode);
  KeySegment(SerNr);
KeyBegin(DepCode);
  KeySegment(DepCode);
  KeySegment(SerNr);
KeyBegin(DepName);
  KeySegment(DepName);
  KeySegment(SerNr);
KeyBegin(ObjPODR);
  KeySegment(ObjPODR);
  KeySegment(SerNr);
KeyBegin(ObjUZTR);
  KeySegment(ObjUZTR);
  KeySegment(SerNr);
KeyBegin(ObjTIP);
  KeySegment(ObjTIP);
  KeySegment(SerNr);
KeyBegin(SDFlag);
  KeySegment(SDFlag);
  KeySegment(SerNr);
KeyBegin(SDNr);
  KeySegment(SDNr);
  KeySegment(SerNr);
EndRecord;


//Доступ к ПЗП/ЗП
BlockBegin(IPosSignBlock, -, "");
RecordField(AccAdminSign, M4UStr, 200, 0); //Администратор счетов (список)
RecordField(AdvCouncilSign, M4UStr, 200, 0); //Председатель РС (список)
RecordField(ChiefAccSign, M4UStr, 200, 0); //Главный бухгалтер (список)
EndBlock;

//ЗП/ПЗП
BlockBegin(PZPSerBlock,-,"");
XXSERBLOCK;

RecordBegin(PZPVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(PZPSerBlock);
RecordField(ParentNr, M4Long, 0, 0);
RecordField(DocType, M4Int, 0, 0); //0 - ЗП, 1 - ПЗП
RecordField(ExpType, M4Int, 0, 0); //0 - CLOutVc, 1 - PPVc, 2 - OPVc, 3 - TRVc
RecordField(TransStr, M4UStr, 60, 0); //IntYc.Number
RecordField(RegDate, M4Date, 0, 0);
RecordField(Initiator, M4Code, 20, 0);
FieldIsUser(Initiator);
RecordField(SalesGroup, M4Code, 5, 0);
FieldIsGroup(SalesGroup);
RecordField(Supervisor, M4Code, 20, 0);
RecordField(Position, M4Code, 20, 0);
RecordField(ExpEmpl, M4Code, 20, 0); //Авансируемое лицо
RecordField(PayMode, M4Code, 2, 0);
RecordField(Curncy, M4Code, 5, 0);
RecordField(PlanDate, M4Date, 0, 0);
RecordField(PayDate, M4Date, 0, 0);
RecordField(DocStatus, M4Int, 0, 0); //0 - Нет данных, 1 - Одобрен, 2 - Не одобрен
RecordField(CouncilSign, M4Code, 20, 0); //Председатель РС
RecordField(Reason, M4Str, 200, 0); //Причина (отказа)
RecordField(ZRSTrueSign, M4Code, 20, 0); //"Это верно"
RecordField(ZRSStatus, M4Int, 0, 0); //0 - Нет данных, 1 - Одобрен, 2 - Не одобрен
RecordField(ZRSSign, M4Code, 20, 0);
RecordField(Sum1, M4Val, 0, 0);
RecordField(Sum2, M4Val, 0, 0);
RecordField(Sum3, M4Val, 0, 0);
RecordField(Sum4, M4Val, 0, 0);
RecordField(Sum5, M4Val, 0, 0);
RecordField(Rest1, M4Val, 0, 0);
RecordField(Rest2, M4Val, 0, 0);
RecordField(Rest3, M4Val, 0, 0);
RecordField(Rest4, M4Val, 0, 0);
RecordField(Rest5, M4Val, 0, 0);
RecordField(Fund1, M4Code, 60, 0);
RecordField(Fund2, M4Code, 60, 0);
RecordField(Fund3, M4Code, 60, 0);
RecordField(Fund4, M4Code, 60, 0);
RecordField(Fund5, M4Code, 60, 0);
RecordField(Date1, M4Date, 0, 0);
RecordField(Date2, M4Date, 0, 0);
RecordField(Date3, M4Date, 0, 0);
RecordField(Date4, M4Date, 0, 0);
RecordField(Date5, M4Date, 0, 0);
RecordField(DocSum, M4Val, 0, 0); //Сумма документа
RecordField(AccumSum, M4Val, 0, 0); //Накопленная сумма
RecordField(CouncilDate, M4Date, 0, 0); //Дата совета
RecordField(LastCouncilDate, M4Date, 0, 0); //Дата последнего совета
RecordField(PayReady, M4Mark, 0, 0); //Сумма готова к выплате
RecordField(CashMode, M4Int, 0, 0); //Вид расчетов (0 - Наличный, 1 - Безналичный)
RecordField(AccAdminSign, M4Code, 20, 0);
RecordField(ChiefAccSign, M4Code, 20, 0);
RecordField(NoncashDate, M4Date, 0, 0);
RecordField(Comment, M4Str, 200, 0);
RecordField(Closed, M4Mark, 0, 0);
RecordField(ClosedDate, M4Date, 0, 0);
RecordField(OKFlag, M4Mark, 0, 0);
RecordField(Printed, M4Mark, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
RecordField(Text, M4TextField, 0, 0);
RecordField(FN1Idx, M4UStr, 255, 0);
RecordField(Invalid, M4Int, 0, 0);
FieldIsInvalid(Invalid);
//
ArrayBegin(Math, -, 1);
ArrayField(Sum, M4Val, 0, 0);
ArrayField(AccNumber, M4Code, 20, 0);
ArrayField(Objects, M4UStr, 100, 0);
ArrayField(FN1, M4Code, 20, 0);
ArrayField(FN2, M4Code, 20, 0);
ArrayField(Destination, M4Str, 200, 0);
ArrayField(FuncSign, M4Code, 20, 0);
ArrayField(Comment, M4Str, 200, 0);
ArrayField(FileNr, M4Long, 0, 0); //Номер расх. док-та
ArrayField(Fund, M4Code, 60, 0);
ArrayField(RowNr, M4Int, 0, 0); //Строка в расх. док-те

EndArray;
//
MainKeyBegin(SerNr, 1);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(SerNr);
KeyBegin(ParentNr);
  KeySegment(ParentNr);
  KeySegment(SerNr);
SubsetKeyBegin2(Initiator);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(Initiator);
  KeySegment(SerNr);
SubsetKeyBegin2(DocType);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(DocType);
  KeySegment(SerNr);
SubsetKeyBegin2(RegDate);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(RegDate);
  KeySegment(SerNr);
SubsetKeyBegin2(CouncilDate);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(CouncilDate);
  KeySegment(SerNr);
SubsetKeyBegin2(ExpEmpl);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(ExpEmpl);
  KeySegment(SerNr);
SubsetKeyBegin2(PayMode);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(PayMode);
  KeySegment(SerNr);
SubsetKeyBegin2(PlanDate);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(PlanDate);
  KeySegment(SerNr);
SubsetKeyBegin2(PayDate);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(PayDate);
  KeySegment(SerNr);
SubsetKeyBegin2(DocStatus);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(DocStatus);
  KeySegment(SerNr);
SubsetKeyBegin2(LastCouncilDate);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(LastCouncilDate);
  KeySegment(SerNr);
SubsetKeyBegin2(Closed);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(Closed);
  KeySegment(ClosedDate);
  KeySegment(SerNr);
SubsetKeyBegin2(OKFlag);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(OKFlag);
  KeySegment(ClosedDate);
  KeySegment(SerNr);
SubsetKeyBegin2(ClosedDate);
  StoreInBaseKey;
  AppendFieldToKeyName(Initiator);
  AppendFieldToKeyName(Supervisor);
  AppendFieldToKeyName(SalesGroup);
  KeySegment(ClosedDate);
  KeySegment(SerNr);
EndRecord;

// запрет записи опереций - настройка . после очистки можно удалить
BlockBegin(tBanOperBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Acc, M4UStr, 200, 0);
ArrayField(BanDate, M4Date, 0, 0);
EndArray;
EndBlock;

// запрет записи опереций - регистр
RecordBegin(tBanOperVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Acc, M4Str, 250, 0);
RecordField(BanDate, M4Date, 0, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(BanDate);
  KeySegment(BanDate);
  KeySegment(Code);
EndRecord;


//Заявки канцтоваров + заказы поставщикам
BlockBegin(tOrdersSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tOrdersVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tOrdersSerBlock);
RecordField(SerNrPO, M4Long, 0, 0)
RecordField(SerNrISO, M4Long, 0, 0)
MainKeyBegin(SerNr, 0);
  StoreInBaseKey;
  KeySegment(SerNr);
KeyBegin(Ord);
  KeySegment(SerNrPO);
  KeySegment(SerNrISO);
  KeySegment(SerNr);
KeyBegin(SerNrPO);
  KeySegment(SerNrPO);
  KeySegment(SerNr);
KeyBegin(SerNrISO);
  KeySegment(SerNrISO);
  KeySegment(SerNr);
EndRecord;


//Классификация рабочих инструментов
RecordBegin(IWorkEquipClassVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Description, M4Str, 100, 0);
RecordField(Hierarchy, M4Code, 20, 0);
MainKeyBegin(Code, 0);

  KeySegment(Code);
KeyBegin(Hierarchy);
  KeySegment(Hierarchy);
  KeySegment(Code);
KeyBegin(Description);
  KeySegment(Description);
  KeySegment(Code);
EndRecord;

//Рабочие инструменты
RecordBegin(IWorkEquipVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(Classification, M4UStr, 200, 0);
RecordField(Status, M4Int, 0, 0);
MainKeyBegin(Code, 0);
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(Status);
  KeySegment(Status);
  KeySegment(Code);
EndRecord;

//Обеды
RecordBegin(tDinnerVc, -, "");
RecordField(VECode, M4Code, 20, 0);
RecordField(VEName, M4Str, 100, 0);
RecordField(Date, M4Date, 0, 0);
RecordField(DType, M4Int, 1, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(DName, M4Str, 250, 0);
ArrayField(DPrice, M4Val, 0, 0);
EndArray;
MainKeyBegin(VECode, 0);
  StoreInBaseKey;
  KeySegment(DType);
  KeySegment(Date);
  KeySegment(VECode);
KeyBegin(VEName);
  KeySegment(VEName);
  KeySegment(DType);
  KeySegment(Date);
  KeySegment(VECode);
KeyBegin(Date);
  KeySegment(Date);
  KeySegment(DType);
  KeySegment(VECode)
EndRecord;

BlockBegin(tDinnerSerBlock,-,"");
XXSERBLOCK;

//Заказ обедов
RecordBegin(tDinnerEmpVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tDinnerSerBlock);
RecordField(User, M4Code, 20, 0);
FieldIsUser(User);
RecordField(UsrName, M4Str, 100, 0);
RecordField(NrWeek, M4Int, 0, 0);
RecordField(Year, M4Long, 0, 0);
RecordField(VECode, M4Code, 20, 0);
RecordField(VEName, M4Str, 100, 0);
RecordField(ObjStr, M4Str, 100, 0);
RecordField(Summa, M4Val, 0, 0);
RecordField(OKFlag, M4Mark, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
RecordField(AOFlag, M4Mark, 0, 0);
RecordField(AONr, M4Str, 20, 0);
RecordField(FDayWeek, M4Date, 0, 0);
RecordField(LDayWeek, M4Date, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(Date, M4Date, 0, 0);
ArrayField(DType, M4Long, 0, 0);
ArrayField(DTypeName, M4Str, 200, 0);
ArrayField(DName, M4Str, 200, 0);
ArrayField(DPrice, M4Val, 0, 0);
ArrayField(TRNr, M4Str, 20, 0);
EndArray;
MainKeyBegin(SerNr, 0);
  StoreInBaseKey;
  KeySegment(SerNr);
KeyBegin(NoMain);
  KeySegment(NrWeek);
  KeySegment(VECode);
  KeySegment(User);
  KeySegment(SerNr);
KeyBegin(NrWeek);
  KeySegment(NrWeek);
  KeySegment(SerNr);
KeyBegin(User);
  KeySegment(User);
  KeySegment(SerNr);
KeyBegin(VEName);
  KeySegment(VEName);
  KeySegment(SerNr);
KeyBegin(UsrName);
  KeySegment(UsrName);
  KeySegment(SerNr);
KeyBegin(OKFlag);
  KeySegment(OKFlag);
  KeySegment(SerNr); ;
KeyBegin(AOFlag);
  KeySegment(AOFlag);
  KeySegment(SerNr);
KeyBegin(AONr);
  KeySegment(AONr);
  KeySegment(SerNr);
KeyBegin(FDayWeek);
  KeySegment(FDayWeek);
  KeySegment(SerNr);
EndRecord;

//История изменений договорного срока оплаты Сч/ф
RecordBegin(IVPlanPayHistVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
RecordField(InvoiceNr, M4Long, 0, 0);
RecordField(CustCode, M4Code, 20, 0);
RecordField(InvDate, M4Date, 0, 0);
RecordField(InvPayDate, M4Date, 0, 0);
RecordField(PrevPlanPayDate, M4Date, 0, 0);
RecordField(PlanPayDate, M4Date, 0, 0);
RecordField(RegUser, M4Code, 20, 0);
RecordField(RegDate, M4Date, 0, 0);
RecordField(SalesGroup, M4Code, 5, 0);
RecordField(InvCurncy, M4Code, 5, 0);
RecordField(InvVal, M4Val, 0, 0);
RecordField(InvRVal, M4Val, 0, 0);
MainKeyBegin(SerNr, 1);
  StoreInBaseKey;
  AppendFieldToKeyName(RegUser);
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(CustCode);
  KeySegment(SerNr);
SubsetKeyBegin2(InvoiceNr);
  StoreInBaseKey;
  AppendFieldToKeyName(RegUser);
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(CustCode);
  KeySegment(InvoiceNr);
  KeySegment(SerNr);
SubsetKeyBegin2(InvDate);
  StoreInBaseKey;
  AppendFieldToKeyName(RegUser);
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(CustCode);
  KeySegment(InvDate);
  KeySegment(SerNr);
SubsetKeyBegin2(InvPayDate);
  StoreInBaseKey;
  AppendFieldToKeyName(RegUser);
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(CustCode);
  KeySegment(InvPayDate);
  KeySegment(SerNr);
SubsetKeyBegin2(PrevPlanPayDate);
  StoreInBaseKey;
  AppendFieldToKeyName(RegUser);
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(CustCode);
  KeySegment(PrevPlanPayDate);
  KeySegment(SerNr);
SubsetKeyBegin2(PlanPayDate);
  StoreInBaseKey;
  AppendFieldToKeyName(RegUser);
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(CustCode);
  KeySegment(PlanPayDate);
  KeySegment(SerNr);
SubsetKeyBegin2(RegDate);
  StoreInBaseKey;
  AppendFieldToKeyName(RegUser);
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(CustCode);
  KeySegment(RegDate);
  KeySegment(SerNr);
EndRecord;

//Виды документации
RecordBegin(tTypeDocVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(ChtName, M4Str, 100, 0);
RecordField(LngName, M4Str, 250, 0);
RecordField(User, M4Code, 20, 0);
FieldIsUser(User);
RecordField(UsrName, M4Str, 100, 0);
RecordField(PostCode, M4Code, 20, 0);
RecordField(PostName, M4Str, 100, 0);
RecordField(Classif, M4UStr, 250, 0);
RecordField(Status, M4Mark, 0, 0);
RecordField(Nom, M4Str, 200, 0);
RecordField(Math, M4TextFIeld, 0, 0);
RecordField(InDate, M4Date, 0, 0);
RecordField(ChDate, M4Date, 0, 0);
ArrayBegin(Math1, -, 1);
ArrayField(Period, M4Str, 200, 0);
ArrayField(Who, M4Str, 200, 0);
ArrayField(Action, M4Str, 200, 0);
ArrayField(Doc, M4Str, 200, 0);
ArrayField(Whom, M4Str, 200, 0);
ArrayField(Resalt, M4Str, 200, 0);
EndArray;
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(ChtName);
  KeySegment(ChtName);
  KeySegment(Code);
KeyBegin(UsrName);
  KeySegment(UsrName);
  KeySegment(Code);
KeyBegin(User);
  KeySegment(User);
  KeySegment(Code);
EndRecord;


RecordBegin(tDocClVc, -, "");//классификаторы "Видов документов"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(TypeCl,M4Code,20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(TypeCl);
  KeySegment(TypeCl);
  KeySegment(Code);
EndRecord;

RecordBegin(tDocTClVc, -, "");//Виды классификаторов "Видов документов"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
EndRecord;

//Бизнес-процессы ГК
RecordBegin(tBizProcVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(BizName, M4Str, 100, 0);
RecordField(CodeT, M4Code, 20, 0);
RecordField(BizNameT, M4Str, 100, 0);
RecordField(Status, M4Mark, 0, 0);
RecordField(NormTime, M4Val, 0, 0);
RecordField(NormCost, M4Val, 0, 0);
RecordField(Classif, M4UStr, 250, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(CodeOp, M4Code, 20, 0);
ArrayField(NameOp, M4Str, 100, 0);
ArrayField(Mult, M4Val, 0, 0);
ArrayField(Time, M4Val, 0, 0);
ArrayField(Cost, M4Val, 0, 0);
ArrayField(CodePost, M4Code, 20, 0);
ArrayField(NamePost, M4Str, 100, 0);
ArrayField(CodeDoc, M4Code, 20, 0);
ArrayField(NameDoc, M4Str, 100, 0);
ArrayField(CodeEqu, M4Code, 20, 0);
ArrayField(NameEqu, M4Str, 100, 0);
EndArray;
MainKeyBegin(Code, 0);
  StoreInBaseKey;
   KeySegment(Code);
KeyBegin(BizName);
  KeySegment(BizName);
  KeySegment(Code);
EndRecord;


RecordBegin(tBizClVc, -, "");//классификаторы "Бизнес-процессы ГК"

RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(TypeCl,M4Code,20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(TypeCl);
  KeySegment(TypeCl);
  KeySegment(Code);
EndRecord;
RecordBegin(tBizTClVc, -, "");// Типы классификаторов "Бизнес-процессы ГК"
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
EndRecord;
RecordBegin(tBizTypVc, -, "");// типовые бизнес-процессы
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
EndRecord;


//Ресурс "Объекты-угрозы-средства ГК"
RecordBegin(ISecProtectVc, -, ""); //Средства защиты
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 200, 0);
RecordField(Comment, M4Str, 200, 0);
MainKeyBegin(Code, 0);
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(Comment);
  KeySegment(Comment);
  KeySegment(Code);
EndRecord;


RecordBegin(ISecThreatVc, -, ""); //Угрозы безопасности
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 200, 0);
RecordField(Comment, M4Str, 200, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(ProtectCode, M4Code, 20, 0);
ArrayField(ProtectName, M4Str, 100, 0);
ArrayField(ProtectComment, M4Str, 200, 0);
EndArray;
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(Comment);
  KeySegment(Comment);
  KeySegment(Code);
SubsetKeyBegin2(ProtectCode);
  StoreInBaseKey;
  AppendMatrixFieldToKeyName(ProtectCode, 0);
  KeySegment(Code);
EndRecord;


RecordBegin(ISecObjCatVc, -, ""); //Категория объекта защиты
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(Comment, M4Str, 200, 0);
RecordField(Parent, M4Code, 20, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(ThreatCode, M4Code, 20, 0);
ArrayField(ThreatName, M4Str, 100, 0);
ArrayField(ThreatComment, M4Str, 200, 0);
EndArray;
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(Comment);
  KeySegment(Comment);
  KeySegment(Code);
KeyBegin(Parent);
  KeySegment(Parent);
  KeySegment(Code);
EndRecord;


RecordBegin(ISecObjVc, -, ""); //Объект защиты
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 200, 0);
RecordField(Comment, M4Str, 200, 0);
RecordField(ObjCat, M4Str, 20, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(ThreatCode, M4Code, 20, 0);
ArrayField(ThreatName, M4Str, 100, 0);
ArrayField(ThreatComment, M4Str, 200, 0);
EndArray;
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(Comment);
  KeySegment(Comment);
  KeySegment(Code);
KeyBegin(ObjCat);
  KeySegment(ObjCat);
  KeySegment(Code);
SubsetKeyBegin2(ThreatCode);
  StoreInBaseKey;
  AppendMatrixFieldToKeyName(ThreatCode, 0);
  KeySegment(Code);
EndRecord;

RecordBegin(tTestAcVc, -, "");// доступ к тесту
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,200,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
EndRecord;

RecordBegin(tAccPZPVc, -, "");// доступ к тесту
RecordField(CodeAcc,M4Code,20, 0);
RecordField(SrtAcc,M4Str,200,0);
MainKeyBegin(CodeAcc, 0);
StoreInBaseKey;
KeySegment(CodeAcc);
EndRecord;

RecordBegin(tINKVc, -, ""); // Товары - канцтовары
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,200,0);
RecordField(Price, M45Val, 0, 0);
RecordField(Curncy,M4Code,5,0);
RecordField(VECode,M4Code,20, 0);
RecordField(VEName,M4Str,200,0);
RecordField(Terminated, M4Mark, 0, 0);
RecordField(Group,M4Code,5,0);
RecordField(DispGroups,M4UStr,200,0);
RecordField(UserCode,M4Code,20, 0);
RecordField(DateCh, M4Date, 0, 0);
RecordField(Unittext,M4Str,10,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(Price);
  KeySegment(Price);
  KeySegment(Code);
KeyBegin(VECode);
  KeySegment(VECode);
  KeySegment(Code);
KeyBegin(VEName);
  KeySegment(VEName);
  KeySegment(Code);
KeyBegin(Terminated);
  KeySegment(Terminated);
  KeySegment(Code);
EndRecord;

//Список элементов раздельного доступа
RecordBegin(IAccessItemVc, -, "");
RecordField(AccName, M4Str, 40, 0);
RecordField(AccDesc, M4Str, 100, 0);
RecordField(AccType, M4Set, 2, 0);
MainKeyBegin(AccName, 0);
  KeySegment(AccName);
  KeySegment(AccType);
KeyBegin(AccDesc);
  KeySegment(AccDesc);
  KeySegment(AccName);
KeyBegin(AccType);
  KeySegment(AccType);
  KeySegment(AccType);
  KeySegment(AccName);
EndRecord;

//"Ресурс" Филиалы ГК
//Классификация
RecordBegin(IBranchClassVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Description, M4Str, 100, 0);
RecordField(Parent, M4Code, 20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
SynchronizationIndex;
KeyBegin(Parent);
KeySegment(Parent);
KeySegment(Code);
KeyBegin(Description);
KeySegment(Description);
KeySegment(Code);
EndRecord;

//Филиал
RecordBegin(IBranchVc, -, "")
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(Cat, M4Code, 5, 0);
RecordField(Classification, M4UStr, 200, 0);
RecordField(SalesGroup, M4Code, 5, 0);
RecordField(Obj, M4UStr, 100, 0);
RecordField(StartDate, M4Date, 0, 0);
RecordField(Addr, M4Str, 200, 0);
RecordField(Phone, M4Str, 200, 0);
RecordField(ChiefCode, M4Code, 20, 0);
RecordField(ChiefName, M4Str, 100, 0);
RecordField(ChiefPhone, M4Str, 200, 0);
RecordField(Status, M4Int, 0, 0); //0 - В процессе открытия, 1 - Открыт, 2 - Закрыт
RecordField(MarketSegments, M4UStr, 200, 0); //Сегменты рынка
RecordField(Competitors, M4UStr, 200, 0); //Конкуренты
RecordField(MarketAgencies, M4UStr, 200, 0); //Маркетинговые агенства
RecordField(AdvAgencies, M4UStr, 200, 0); //Рекламные агенства
//Территория обслуживания
RecordField(Area1, M4Str, 200, 0);
RecordField(Area2, M4Str, 200, 0);
RecordField(Area3, M4Str, 200, 0);
RecordField(Area4, M4Str, 200, 0);
RecordField(Area5, M4Str, 200, 0);
//Стандартное ценообразования
RecordField(PayDeal, M4Code, 5, 0); //Отсрочка
RecordField(PriceList, M4Code, 5, 0); //Прейскурант
RecordField(Rebate, M4Code, 5, 0); //Скидка/Наценка
RecordField(Curncy, M4Code, 5, 0);
//Торговые
RecordField(Seller1, M4Code, 10, 0);
RecordField(Seller2, M4Code, 10, 0);
RecordField(Seller3, M4Code, 10, 0);
RecordField(Seller4, M4Code, 10, 0);
RecordField(Seller5, M4Code, 10, 0);
RecordField(Seller6, M4Code, 10, 0);
RecordField(Seller7, M4Code, 10, 0);
RecordField(Seller8, M4Code, 10, 0);
RecordField(Seller9, M4Code, 10, 0);
RecordField(Seller10, M4Code, 10, 0);
//Территория
RecordField(Seller1Area, M4Str, 200, 0);
RecordField(Seller2Area, M4Str, 200, 0);
RecordField(Seller3Area, M4Str, 200, 0);
RecordField(Seller4Area, M4Str, 200, 0);
RecordField(Seller5Area, M4Str, 200, 0);
RecordField(Seller6Area, M4Str, 200, 0);
RecordField(Seller7Area, M4Str, 200, 0);
RecordField(Seller8Area, M4Str, 200, 0);
RecordField(Seller9Area, M4Str, 200, 0);
RecordField(Seller10Area, M4Str, 200, 0);
RecordField(Seller1Obj, M4UStr, 100, 0);
//Объект PLAN
RecordField(Seller2Obj, M4UStr, 100, 0);
RecordField(Seller3Obj, M4UStr, 100, 0);
RecordField(Seller4Obj, M4UStr, 100, 0);
RecordField(Seller5Obj, M4UStr, 100, 0);
RecordField(Seller6Obj, M4UStr, 100, 0);
RecordField(Seller7Obj, M4UStr, 100, 0);
RecordField(Seller8Obj, M4UStr, 100, 0);
RecordField(Seller9Obj, M4UStr, 100, 0);
RecordField(Seller10Obj, M4UStr, 100, 0);
//Разряд
RecordField(Seller1Rank, M4Int, 0, 0);
RecordField(Seller2Rank, M4Int, 0, 0);
RecordField(Seller3Rank, M4Int, 0, 0);
RecordField(Seller4Rank, M4Int, 0, 0);
RecordField(Seller5Rank, M4Int, 0, 0);
RecordField(Seller6Rank, M4Int, 0, 0);
RecordField(Seller7Rank, M4Int, 0, 0);
RecordField(Seller8Rank, M4Int, 0, 0);
RecordField(Seller9Rank, M4Int, 0, 0);
RecordField(Seller10Rank, M4Int, 0, 0);
//Годовой оборот
RecordField(Seller1Turnover, M4Val, 0, 0);
RecordField(Seller2Turnover, M4Val, 0, 0);
RecordField(Seller3Turnover, M4Val, 0, 0);
RecordField(Seller4Turnover, M4Val, 0, 0);
RecordField(Seller5Turnover, M4Val, 0, 0);
RecordField(Seller6Turnover, M4Val, 0, 0);
RecordField(Seller7Turnover, M4Val, 0, 0);
RecordField(Seller8Turnover, M4Val, 0, 0);
RecordField(Seller9Turnover, M4Val, 0, 0);
RecordField(Seller10Turnover, M4Val, 0, 0);
//Сектора продаж филиала
RecordField(DSFlag, M4Mark, 0, 0); //Клиенты-дистрибьютеры
RecordField(DLFlag, M4Mark, 0, 0); //Клиенты-дилеры
RecordField(NWFlag, M4Mark, 0, 0); //Сетевые клиенты
RecordField(RTFlag, M4Mark, 0, 0); //Розничные клиенты
//
RecordField(Encashments, M4UStr, 200, 0); //Каналы инкассации
RecordField(EncashDay, M4Str, 60, 0); //День инкассации
RecordField(EncashEmpl, M4Code, 10, 0); //Отв. лицо
RecordField(EncashEmplName, M4Str, 100, 0);
RecordField(EncashPos, M4Code, 20, 0); //Должность
RecordField(EncashPosDesc, M4Str, 100, 0);
RecordField(EntPrs, M4UStr, 200, 0); //Предприятия
//
RecordField(StockFlag, M4Int, 0, 0); //Наличие склада
RecordField(OrderAdjDay, M4Str, 60, 0); //День согласования заявки
RecordField(OrderAdjTime, M4Time, 0, 0);
RecordField(OrderDay, M4Str, 60, 0); //День подачи заявки на подбор товара
RecordField(OrderTime, M4Time, 0, 0);
RecordField(OrderReceiveDay, M4Str, 60, 0); //День поставки на склад
RecordField(OrderReceiveTime, M4Time, 0, 0);
RecordField(Stocks, M4UStr, 200, 0); //Склады
RecordField(Vehicles, M4UStr, 200, 0); //Транспортные средства
RecordField(DelivRoutes, M4UStr, 200, 0); //Маршруты доставки
RecordField(Suppliers, M4UStr, 200, 0); //Поставщики
RecordField(StockEquip, M4UStr, 200, 0); //Складское оборудование
RecordField(Math, M4Matrix, 0, 0);
//Количество функциональных рабочих мест (IT)
RecordField(MngWorkPlaceQnt, M4Int, 0, 0); //Управление
RecordField(SalesWorkPlaceQnt, M4Int, 0, 0); //Продажи
RecordField(AccWorkPlaceQnt, M4Int, 0, 0); //Учет
RecordField(LogWorkPlaceQnt, M4Int, 0, 0); //Логистика
//
RecordField(ServProvs, M4UStr, 200, 0); //Провайдеры услуг
RecordField(SoftwareList, M4UStr, 200, 0); //Программное обеспечение
//
RecordField(HRAgencies, M4UStr, 200, 0); //Кадровые агенства
RecordField(TrainingCompanies, M4UStr, 200, 0); //Обучающие компании
RecordField(CommProviders, M4UStr, 200, 0); //Операторы связи
//
RecordField(SPD, M4Str, 100, 0); //СПД
RecordField(INN, M4Str, 100, 0); //ИНН
RecordField(OKPO, M4Str, 100, 0); //ОКПО
RecordField(Passp, M4Str, 100, 0); //Паспортные данные
RecordField(RefINN, M4Str, 100, 0); //Справка ИНН
RecordField(EGRPOU, M4Str, 100, 0); //Выписка ЕГРПОУ
RecordField(RefSingle, M4Str, 100, 0); //Свидетельство о ед. налоге
RecordField(AssigDir, M4Str, 100, 0); //Документ о назначении директора
RecordField(Excerpt, M4Str, 100, 0); //Выдержка из устава
RecordField(RefNDS, M4Str, 100, 0); //Свидетельство НДС
RecordField(RefOPP, M4Str, 100, 0); //Справка 4-ОПП
RecordField(JContractors, M4UStr, 200, 0); //Судебные контрагенты
//
RecordField(FinRespDocs, M4Str, 100, 0); //Наличие документов мат/отв.
RecordField(SecThreats, M4UStr, 200, 0); //Угрозы безопасности
//
RecordField(OfficeFlag, M4Int, 0, 0); //Наличие офиса
RecordField(OfficeList, M4UStr, 200, 0); //Офис
RecordField(Builders, M4UStr, 200, 0); //Строительные и ремонтные организации
//
ArrayBegin(Math,-,1);
ArrayField(PosCode, M4Code, 20, 0);
ArrayField(PosDesc, M4Str, 100, 0);
ArrayField(PosStat, M4Mark, 0, 0);
ArrayField(PosQnt, M4Int, 0, 0);
EndArray;

MainKeyBegin(Code, 0);
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(Cat);
  KeySegment(Cat);
  KeySegment(Code);
KeyBegin(SalesGroup);
  KeySegment(SalesGroup);
  KeySegment(Code);
KeyBegin(ChiefCode);
  KeySegment(ChiefCode);
  KeySegment(Code);
KeyBegin(ChiefName);
  KeySegment(ChiefName);
  KeySegment(Code);
KeyBegin(Status);
  KeySegment(Status);
  KeySegment(Code);
EndRecord;

//Подразделения филиала
RecordBegin(ISubBranchVc, -, "")
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(BranchCode, M4Code, 20, IBranchVc);
RecordField(HasOffice, M4Mark, 0, 0); //Наличие офиса
RecordField(HasStock, M4Mark, 0, 0); //Наличие склада
RecordField(HasRemoteSeller, M4Mark, 0, 0); //Наличие удаленных торговых
RecordField(Addr, M4Str, 200, 0);
RecordField(Phone, M4Str, 200, 0);
MainKeyBegin(Code, 1);
  StoreInBaseKey;
  AppendFieldToKeyName(BranchCode);
  KeySegment(Code);
SubsetKeyBegin2(Name);
  StoreInBaseKey;
  AppendFieldToKeyName(BranchCode);
  KeySegment(Name);
  KeySegment(Code);
EndRecord;

RecordBegin(tRouteVc, -, ""); // Маршруты доставки
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,200,0);
RecordField(TypeTr, M4Mark, 0, 0); // тип транспорта
RecordField(GeoRou, M4Mark, 0, 0);
RecordField(Direct, M4Mark, 0, 0); //направленность
RecordField(Rhythm, M4Mark, 0, 0);  // периодичность
RecordField(Length, M4Val, 0, 0); // протяжённость
RecordField(Duration, M4Str, 20, 0); // продолжительность
RecordField(Start,M4Str,20,0);
RecordField(Final,M4Str,20,0);
RecordField(Carrier,M4Code,20, 0);
RecordField(AddCar,M4Str,200, 0);
RecordField(DepCountry,M4Code,20, 0);
RecordField(DepCity,M4Str,100, 0);
RecordField(DepKoord,M4Str,100, 0);
RecordField(DesCountry,M4Code,20, 0);
RecordField(DesCity,M4Str,100, 0);
RecordField(DesKoord,M4Str,100, 0);
RecordField(BordCountry,M4Code,20, 0);
RecordField(BordCity,M4Str,100, 0);
RecordField(BordKoord,M4Str,100, 0);
RecordField(OverCountry,M4Code,20, 0);
RecordField(OverCity,M4Str,100, 0);
RecordField(OverKoord,M4Str,100, 0);
RecordField(AOverCountry,M4Str,200, 0);
RecordField(AOverCity,M4Str,200, 0);
RecordField(AOverKoord,M4Str,200, 0);
RecordField(Math, M4Matrix, 0, 0);
RecordField(OKFlag, M4Mark, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(IVCode, M4Code, 20, 0);
ArrayField(SMCode, M4Code, 20, 0);
ArrayField(STCode, M4Code, 20, 0);
ArrayField(PRCode, M4Code, 20, 0);
ArrayField(StrName, M4Str, 100, 0);
ArrayField(Adr, M4Str, 200, 0);
ArrayField(DateV, M4Date, 0, 0);
ArrayField(PlanTime, M4Time, 0, 0);
ArrayField(Distance, M4Val, 0, 0);
ArrayField(stpt, M4Int, 0, 0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(Carrier);
  KeySegment(Carrier);
  KeySegment(Code);
KeyBegin(DepCity);
  KeySegment(DepCity);
  KeySegment(Code);
KeyBegin(DesCity);
  KeySegment(DesCity);
  KeySegment(Code);
KeyBegin(BordCity);
  KeySegment(BordCity);
  KeySegment(Code);
KeyBegin(OKFlag);
  KeySegment(OKFlag);
  KeySegment(Code);
EndRecord;

RecordBegin(tCountryVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,200,0);
MainKeyBegin(Code,0);
	KeySegment(Code);
KeyBegin(Name);
	KeySegment(Name);
	KeySegment(Code);
  EndRecord;


RecordBegin(tParkingVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,200,0);
RecordField(Adr,M4Str,200,0);
MainKeyBegin(Code,0);
	KeySegment(Code);
KeyBegin(Name);
	KeySegment(Name);
	KeySegment(Code);
  EndRecord;


//Ресурс "Должностные оклады на рынке труда"
//Классификация
RecordBegin(IMarketSalaryClassVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Desc, M4Str, 100, 0);
RecordField(Parent, M4Code, 20, 0);
RecordField(Group, M4Code, 10, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Parent);
  KeySegment(Parent);
  KeySegment(Code);
KeyBegin(Desc);
  KeySegment(Desc);
  KeySegment(Code);
KeyBegin(Group);
  KeySegment(Group);
  KeySegment(Code);
EndRecord;

//Справочник окладов
RecordBegin(IMarketSalaryVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(PositionCode, M4Code, 20, 0);
RecordField(PositionName, M4Str, 100, 0);
RecordField(Classification, M4UStr, 200, 0);
RecordField(SalaryMin, M4Val, 0, 0); //Минимальный оклад
RecordField(SalaryMax, M4Val, 0, 0); //Максимальный оклад
RecordField(SalaryAvg, M4Val, 0, 0); //Средний оклад
RecordField(SalaryTot, M4Val, 0, 0); //Совокупный оклад
RecordField(Status, M4Int, 0, 0); //0-Официальный, 1-Упр. (на исп. срок), 2-Упр. (после исп. срока)
RecordField(ActDate, M4Date, 0, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(PositionCode);
  KeySegment(PositionCode);
  KeySegment(Code);
KeyBegin(PositionName);
  KeySegment(PositionName);
  KeySegment(Code);
KeyBegin(ActDate);
  KeySegment(ActDate);
  KeySegment(Code);
KeyBegin(Status);
  KeySegment(Status);
  KeySegment(Code);
EndRecord;


RecordBegin(tLanguagesVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,200,0);
MainKeyBegin(Code,0);
	KeySegment(Code);
KeyBegin(Name);
	KeySegment(Name);
	KeySegment(Code);
  EndRecord;

RecordBegin(tSkillsVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,200,0);
MainKeyBegin(Code,0);
	KeySegment(Code);
KeyBegin(Name);
	KeySegment(Name);
	KeySegment(Code);
  EndRecord;

RecordBegin(tRequPosVc, -, "");
RecordField(CodeVPos, M4Code, 20, 0);
RecordField(NameVPos, M4Str, 100, 0);
RecordField(CodeUser, M4Code, 20, 0);
RecordField(NameUser, M4Str, 100, 0);
RecordField(Education, M4Str, 200, 0);
RecordField(WorkingTerm, M4Int, 0, 0);
RecordField(BasicKnow, M4Str, 200, 0);
RecordField(BasicSkill, M4Str, 200, 0);
RecordField(LangSkill, M4Str, 200, 0);
RecordField(CompSkill, M4Str, 200, 0);
RecordField(TranspSkill, M4Str, 200, 0);
RecordField(tSkills, M4UStr, 200, 0);
RecordField(PeMan, M4Mark, 0, 0);
RecordField(Age, M4Str, 20, 0);
RecordField(Sex, M4Mark, 0, 0);
RecordField(EducationS, M4Str, 200, 0);
RecordField(WorkingTermS, M4Int, 0, 0);
RecordField(BasicKnowS, M4Str, 200, 0);
RecordField(BasicSkillS, M4Str, 200, 0);
RecordField(LangSkillS, M4Str, 200, 0);
RecordField(CompSkillS, M4Str, 200, 0);
RecordField(TranspSkillS, M4Str, 200, 0);
RecordField(tSkillsS, M4UStr, 200, 0);
RecordField(PeManS, M4Mark, 0, 0);
RecordField(AgeS, M4Int, 0, 0);
RecordField(SexS, M4Mark, 0, 0);
RecordField(SummInc, M4Int, 0, 0);
RecordField(EducationF, M4Mark, 0, 0);
RecordField(WorkingTermF, M4Mark, 0, 0);
RecordField(BasicKnowF, M4Mark, 0, 0);
RecordField(BasicSkillF, M4Mark, 0, 0);
RecordField(LangSkillF, M4Mark, 0, 0);
RecordField(CompSkillF, M4Mark, 0, 0);
RecordField(TranspSkillF, M4Mark, 0, 0);
RecordField(tSkillsF, M4Mark, 0, 0);
RecordField(PeManF, M4Mark, 0, 0);
RecordField(AgeF, M4Mark, 0, 0);
RecordField(SexF, M4Mark, 0, 0);
RecordField(MPeMan, M4Mark, 0, 0);
RecordField(MPeManS, M4Mark, 0, 0);
RecordField(MPeManF, M4Mark, 0, 0);
RecordField(Classif, M4Str, 200, 0);
MainKeyBegin(Code,0);
	KeySegment(CodeVPos);
	KeySegment(CodeUser);
KeyBegin(CodeUser);
	KeySegment(CodeUser);
	KeySegment(CodeVPos);
KeyBegin(NameVPos);
	KeySegment(NameVPos);
	KeySegment(CodeVPos);
	KeySegment(CodeUser);
KeyBegin(NameUser);
	KeySegment(NameUser);
	KeySegment(CodeVPos);
	KeySegment(CodeUser);
  EndRecord;

RecordBegin(tRequPosClVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,200,0);
RecordField(TypeCl,M4Code,20,0);
MainKeyBegin(Code,0);
	KeySegment(Code);
KeyBegin(Name);
	KeySegment(Name);
	KeySegment(Code);
KeyBegin(TypeCl);
	KeySegment(TypeCl);
	KeySegment(Code);
 EndRecord;

RecordBegin(tRequPosTypeClVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,200,0);
MainKeyBegin(Code,0);
	KeySegment(Code);
KeyBegin(Name);
	KeySegment(Name);
	KeySegment(Code);
  EndRecord;


 RecordBegin(tCityVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,200,0);
RecordField(Obl,M4Str,200,0);
RecordField(Country,M4Code,20,0);
MainKeyBegin(Code,0);
	KeySegment(Code);
KeyBegin(Name);
	KeySegment(Name);
	KeySegment(Code);
KeyBegin(Obl);
	KeySegment(Obl);
	KeySegment(Code);
KeyBegin(Country);
	KeySegment(Country);
	KeySegment(Code);
 EndRecord;


//Ресурс "Критерии повышения квалификации"
//Классификация
RecordBegin(ITrnCrtClassVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Desc, M4Str, 100, 0);
RecordField(Parent, M4Code, 20, 0);
RecordField(Group, M4Code, 10, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Parent);
  KeySegment(Parent);
  KeySegment(Code);
KeyBegin(Desc);
  KeySegment(Desc);
  KeySegment(Code);
KeyBegin(Group);
  KeySegment(Group);
  KeySegment(Code);
EndRecord;

//Справочник
RecordBegin(ITrnCrtVc, -, "");
RecordField(UserCode, M4Code, 20, 0);
RecordField(UserName, M4Str, 100, 0);
RecordField(PosCode, M4Code, 20, 0);
RecordField(PosName, M4Str, 100, 0);
RecordField(Status, M4Int, 0, 0); //0-Подготовка, 1-Работа, 2-Архив
RecordField(Classification, M4UStr, 200, 0);
//Критерии повышения квалификации
RecordField(Education, M4UStr, 200, 0);
RecordField(BaseKnow, M4UStr, 200, 0);
RecordField(BaseSkill, M4UStr, 200, 0);
RecordField(LangSkill, M4UStr, 200, 0);
RecordField(CompSkill, M4UStr, 200, 0);
RecordField(TranspSkill, M4UStr, 200, 0);
RecordField(tSkills, M4UStr, 200, 0);
RecordField(PeMan, M4Mark, 0, 0);
//
RecordField(EducationObj, M4UStr, 200, 0);
RecordField(BaseKnowObj, M4UStr, 200, 0);
RecordField(BaseSkillObj, M4UStr, 200, 0);
RecordField(LangSkillObj, M4UStr, 200, 0);
RecordField(CompSkillObj, M4UStr, 200, 0);
RecordField(TranspSkillObj, M4UStr, 200, 0);
RecordField(tSkillsObj, M4UStr, 200, 0);
RecordField(PeManObj, M4UStr, 200, 0);
//Результаты аттестации
RecordField(EducationTrn, M4UStr, 200, 0);
RecordField(BaseKnowTrn, M4UStr, 200, 0);
RecordField(BaseSkillTrn, M4UStr, 200, 0);
RecordField(LangSkillTrn, M4UStr, 200, 0);
RecordField(CompSkillTrn, M4UStr, 200, 0);
RecordField(TranspSkillTrn, M4UStr, 200, 0);
RecordField(tSkillsTrn, M4UStr, 200, 0);
RecordField(PeManTrn, M4Mark, 0, 0);
//
RecordField(EducationOK, M4Mark, 0, 0);
RecordField(BaseKnowOK, M4Mark, 0, 0);
RecordField(BaseSkillOK, M4Mark, 0, 0);
RecordField(LangSkillOK, M4Mark, 0, 0);
RecordField(CompSkillOK, M4Mark, 0, 0);
RecordField(TranspSkillOK, M4Mark, 0, 0);
RecordField(tSkillsOK, M4Mark, 0, 0);
RecordField(PeManOK, M4Mark, 0, 0);
//
RecordField(EducationTrnCom, M4Str, 200, 0);
RecordField(BaseKnowTrnCom, M4Str, 200, 0);
RecordField(BaseSkillTrnCom, M4Str, 200, 0);
RecordField(LangSkillTrnCom, M4Str, 200, 0);
RecordField(CompSkillTrnCom, M4Str, 200, 0);
RecordField(TranspSkillTrnCom, M4Str, 200, 0);
RecordField(tSkillsTrnCom, M4Str, 200, 0);
RecordField(PeManTrnCom, M4Str, 200, 0);
//
MainKeyBegin(PosCode, 0);
  KeySegment(PosCode);
  KeySegment(UserCode);
KeyBegin(UserCode);
  KeySegment(UserCode);
  KeySegment(PosCode);
KeyBegin(PosName);
  KeySegment(PosName);
  KeySegment(PosCode);
  KeySegment(UserCode);
KeyBegin(UserName);
  KeySegment(UserName);
  KeySegment(PosCode);
  KeySegment(UserCode);
KeyBegin(Status);
  KeySegment(Status);
  KeySegment(PosCode);
  KeySegment(UserCode);
EndRecord;


//Настройка "Стоимость логистики 1 ед"
BlockBegin(ILogCostSGBlock, -, "");
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(SalesGroup, M4Code, 5, 0);
ArrayField(Cost1, M4Val, 0, 0);
ArrayField(Cost2, M4Val, 0, 0);
ArrayField(Cost3, M4Val, 0, 0);
ArrayField(Cost4, M4Val, 0, 0);
ArrayField(Cost5, M4Val, 0, 0);
ArrayField(Cost6, M4Val, 0, 0);
ArrayField(Cost7, M4Val, 0, 0);
ArrayField(Cost8, M4Val, 0, 0);
ArrayField(Cost9, M4Val, 0, 0);
ArrayField(Cost10, M4Val, 0, 0);
ArrayField(Cost11, M4Val, 0, 0);
ArrayField(Cost12, M4Val, 0, 0);
EndArray;
EndBlock;

RecordBegin(tInvoiceVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,200,0);
RecordField(NameInv,M4Str,200,0);
RecordField(Koef,M45Val,0,0);
MainKeyBegin(Code,0);
	KeySegment(Code);
KeyBegin(Name);
	KeySegment(Name);
	KeySegment(Code);
KeyBegin(NameInv);
	KeySegment(NameInv);
	KeySegment(Code);
KeyBegin(Koef);
	KeySegment(Koef);
	KeySegment(Code);
 EndRecord;


 BlockBegin(tTermsITSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tTermsITVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tTermsITSerBlock);
RecordField(ITCode, M4Code, 20, 0)
RecordField(ITName, M4Str, 200, 0)
RecordField(ITQnt, M4Val, 0, 0)
RecordField(RekCode, M4Code, 20, 0)
RecordField(RekName, M4Str, 200, 0)
RecordField(RekQnt, M4Val, 0, 0)
RecordField(ITClass, M4Code, 20, 0)
RecordField(MultFlag, M4Mark, 0, 0)
MainKeyBegin(SerNr, 0);
  StoreInBaseKey;
  KeySegment(SerNr);
KeyBegin(ITCode);
  KeySegment(ITCode);
  KeySegment(SerNr);
KeyBegin(ITQnt);
  KeySegment(ITQnt);
  KeySegment(SerNr);
KeyBegin(RekCode);
  KeySegment(RekCode);
  KeySegment(SerNr);
KeyBegin(RekName);
  KeySegment(RekName);
  KeySegment(SerNr);
EndRecord;

BlockBegin(tTermsBlock,-,"");
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(SummS,M4Int,0,0);
ArrayField(SummF,M4Int,0,0);
ArrayField(RekCode,M4Code,20,0);
ArrayField(RekName,M4Str,200,0);
ArrayField(RekQnt,M4Val,0,0);
EndArray;
EndBlock;


//Ресурс "Конкуренты ГК"
//Классификация
RecordBegin(ICompetitorClassVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Desc, M4Str, 100, 0);
RecordField(Parent, M4Code, 20, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Parent);
  KeySegment(Parent);
  KeySegment(Code);
KeyBegin(Desc);
  KeySegment(Desc);
  KeySegment(Code);
EndRecord;

//Конкуренты
RecordBegin(ICompetitorVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(Desc, M4TextField, 0, 0);
RecordField(Classification, M4UStr, 200, 0);
RecordField(OwnershipType, M4Int, 0, 0); //Форма собственности
RecordField(DelayTerms, M4Str, 250, 0); //Условия отсрочки
RecordField(DocTerms, M4Str, 250, 0); //Условия док. оформления
RecordField(OrderTerms, M4Str, 250, 0); //Условия прийома заказов
RecordField(DeliveryTerms, M4Str, 250, 0);
RecordField(PayTerms, M4Str, 250, 0);
RecordField(BonusTerms, M4Str, 250, 0);
RecordField(ReturnTerms, M4Str, 250, 0);
RecordField(ActTerms, M4Str, 250, 0);
RecordField(NewsFreq, M4Str, 250, 0);
RecordField(Certificates, M4Str, 250, 0);
RecordField(Adversting, M4Str, 250, 0);
RecordField(StrongPoint, M4Str, 250, 0);
RecordField(WeakPoint, M4Str, 250, 0);
RecordField(SelfAdvantage, M4Str, 250, 0);
RecordField(CompAdvantage, M4Str, 250, 0);
RecordField(Representation, M4Str, 250, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(OwnershipType);
  KeySegment(OwnershipType);
  KeySegment(Code);
EndRecord;


RecordBegin(tVEDinVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Name,M4Str,200,0);
MainKeyBegin(Code,0);
	KeySegment(Code);
KeyBegin(Name);
	KeySegment(Name);
	KeySegment(Code);
EndRecord;

RecordBegin(tDinPriceVc,-,"");
RecordField(NameDin,M4Str,200,0);
RecordField(POCode, M4Code, 20, 0)
RecordField(PoName, M4Str, 200, 0)
RecordField(Price, M4Val, 0, 0)
MainKeyBegin(NameDin,0);
	KeySegment(NameDin);
	KeySegment(POCode);
KeyBegin(POCode);
	KeySegment(NameDin);
	KeySegment(POCode);
EndRecord;

//Меню на каждый день
RecordBegin(tDinEvrDayVc, -, "");
RecordField(VECode, M4Code, 20, 0);
RecordField(VEName, M4Str, 100, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(DName, M4Str, 250, 0);
ArrayField(DPrice, M4Val, 0, 0);
EndArray;
MainKeyBegin(VECode, 0);
  StoreInBaseKey;
  KeySegment(VECode);
KeyBegin(VEName);
  KeySegment(VEName);
  KeySegment(VECode);
EndRecord;

//====================================================== 10-12-13
RecordBegin(tLegRiskVc, -, "");//Реcурс "Правовые риски и угрозы"
RecordField(Code, M4Code,20, 0);
RecordField(Name, M4Str,250,0);
RecordField(Cause,M4Str,250,0);
RecordField(Factor,M4Str,250,0);
RecordField(Method,M4Str,250,0);
RecordField(LRType, M4Mark,0,0);
RecordField(ListCl, M4UStr,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(tLegRiskClVc, -, "");//классификаторы
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(CodeGr,M4Code,20, 0);
RecordField(Math, M4TextField, 0, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(CodeGr);
KeySegment(CodeGr);
KeySegment(Code);
EndRecord;

RecordBegin(tLegRiskGrVc, -, "");//Группы классификаторов
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

//====================================================== 28-12-13
RecordBegin(tMarkSegVc, -, "");//Реcурс "Сегменты рынка"
RecordField(Code, M4Code,20, 0);
RecordField(Name, M4Str,250,0);
RecordField(ListCl, M4UStr,250,0);
RecordField(tStr1,M4Str,250,0);
RecordField(tStr2,M4Str,250,0);
RecordField(tStr3,M4Str,250,0);
RecordField(tStr4,M4Str,250,0);
RecordField(tStr5,M4Str,250,0);
RecordField(tStr6,M4Str,250,0);
RecordField(tStr7,M4Str,250,0);
RecordField(tStr8,M4Str,250,0);
RecordField(tStr9,M4Str,250,0);
RecordField(tStr10,M4Str,250,0);
RecordField(tStr11,M4Str,250,0);
RecordField(tStr12,M4Str,250,0);
RecordField(tStr13,M4Str,250,0);
RecordField(ICompetitor,M4Str,250,0);
RecordField(tRek,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(tMarkSegClVc, -, "");//классификаторы
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(CodeGr,M4Code,20, 0);
RecordField(Math, M4TextField, 0, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(CodeGr);
KeySegment(CodeGr);
KeySegment(Code);
EndRecord;

RecordBegin(tMarkSegGrVc, -, "");//Группы классификаторов
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

//====================================================== 08-01-14
RecordBegin(tRekActVc, -, "");//Реcурс "Рекламные мероприятия ГК"
RecordField(Code, M4Code,20, 0);
RecordField(Name, M4Str,250,0);
RecordField(ListCl, M4UStr,250,0);
RecordField(VECode, M4Code,20, 0);
RecordField(VEName,M4Str,250,0);
RecordField(Status, M4Mark,0,0);
RecordField(DataStPl,M4Date,0,0);
RecordField(DataFinPl,M4Date,0,0);
RecordField(VolPl,M4Val,0,0);
RecordField(Math, M4TextField, 0, 0);
RecordField(DataStF,M4Date,0,0);
RecordField(DataFinF,M4Date,0,0);
RecordField(VolF,M4Val,0,0);
RecordField(tStrF,M4Str,250,0);
RecordField(OkFlag, M4Mark,0,0);
RecordField(Math1, M4Matrix, 0, 0);
ArrayBegin(Math1, -, 1);
ArrayField(DepCode, M4Code, 20, 0);
ArrayField(DepName, M4Str, 200, 0);
ArrayField(KolPl, M4Int, 0, 0);
ArrayField(KolF, M4Int, 0, 0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(tRekActClVc, -, "");//классификаторы
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
RecordField(CodeGr,M4Code,20, 0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
KeyBegin(CodeGr);
KeySegment(CodeGr);
KeySegment(Code);
EndRecord;

RecordBegin(tRekActGrVc, -, "");//Группы классификаторов
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;


RecordBegin(tINMetVc, -, "");//Реcурс "Методики работы с товарами ГК"
RecordField(Code, M4Code,20, 0);
RecordField(Name, M4Str,250,0);
RecordField(ListCl, M4UStr,250,0);
RecordField(Status, M4Mark,0,0);
RecordField(Math1, M4Matrix, 0, 0);
ArrayBegin(Math1, -, 1);
ArrayField(KrCode, M4Code, 20, 0);
ArrayField(KrName, M4Str, 200, 0);
ArrayField(Descr, M4Str, 250, 0);
EndArray;
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;

RecordBegin(tINMetClVc, -, "");//Критерии
RecordField(Code,M4Code,20, 0);
RecordField(Name,M4Str,250,0);
MainKeyBegin(Code, 0);
StoreInBaseKey;
KeySegment(Code);
KeyBegin(Name);
KeySegment(Name);
KeySegment(Code);
EndRecord;


//Ресурс "Методики работы с клиентами ГК"
//Классификация
RecordBegin(ICUWorkMethodClassVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Desc, M4Str, 100, 0);
RecordField(Parent, M4Code, 20, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Parent);
  KeySegment(Parent);
  KeySegment(Code);
KeyBegin(Desc);
  KeySegment(Desc);
  KeySegment(Code);
EndRecord;

//Документ
RecordBegin(ICUWorkMethodVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 100, 0);
RecordField(MethodClass, M4UStr, 200, 0);
RecordField(CUClassification, M4UStr, 200, 0);
RecordField(Status, M4Int, 0, 0); //0-Подготовка, 1-Работа, 2-Архив
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(Status);
  KeySegment(Status);
  KeySegment(Code);
SubSetKeyBegin2(CUClassification);
  StoreInBaseKey;
  AppendListFieldToKeyName(CUClassification);
  KeySegment(Code);
EndRecord;


//24.01.14 INAU - История ПЗП
RecordBegin(PZPHistVc, -, "");
RecordField(SerNr, M4Long, 0, PZPHistVc);
RecordField(PZPNr, M4Long, 0, 0);
RecordField(ActDate, M4Date, 0, 0);
RecordField(ActTime, M4Time, 0, 0);
RecordField(ActUser, M4Code, 20, 0);
RecordField(Action, M4Str, 200, 0);
MainKeyBegin(SerNr, 1);
  StoreInBaseKey;
  AppendFieldToKeyName(ActUser);
  KeySegment(SerNr);
SubsetKeyBegin2(PZPNr);
  StoreInBaseKey;
  AppendFieldToKeyName(ActUser);
  KeySegment(PZPNr);
  KeySegment(ActDate);
  KeySegment(SerNr);
SubsetKeyBegin2(ActDate);
  StoreInBaseKey;
  AppendFieldToKeyName(ActUser);
  KeySegment(ActDate);
  KeySegment(PZPNr);
  KeySegment(SerNr);
EndRecord;

RecordBegin(tStCooefVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 200, 0);
RecordField(Coeff, M4Val, 0, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
EndRecord;

 BlockBegin(tWageRateSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tWageRateVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tWageRateSerBlock);
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(CodeServ,M4Code,20,0);
ArrayField(NameServ,M4Str,200,0);
ArrayField(FOT,M4Val,0,0);
ArrayField(CurCode,M4Code,20,0);
ArrayField(Sign,M4Code,20,0);
EndArray;
MainKeyBegin(SerNr, 0);
  StoreInBaseKey;
  KeySegment(SerNr);
EndRecord;

RecordBegin(tDepartVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 200, 0);
RecordField(Field1, M4Str, 200, 0);
RecordField(CodeF1, M4Code, 20, 0);
RecordField(CodeST, M4Code, 20, 0);
RecordField(CodeDIR, M4Code, 20, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(Field1);
  KeySegment(Field1);
  KeySegment(Code);
EndRecord;

RecordBegin(tDepartNewVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 200, 0);
RecordField(Field1, M4Str, 200, 0);
RecordField(Dir, M4Str, 200, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
KeyBegin(Field1);
  KeySegment(Field1);
  KeySegment(Code);
EndRecord;

RecordBegin(tStatVc, -, "");
RecordField(Code, M4Code, 20, 0);
RecordField(Name, M4Str, 200, 0);
MainKeyBegin(Code, 0);
  StoreInBaseKey;
  KeySegment(Code);
KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
EndRecord;

RecordBegin(tPostUserVc, -, "");
RecordField(UserCode, M4Code, 20, 0);
RecordField(UserName, M4Str, 100, 0);
RecordField(PosCode, M4Code, 20, 0);
RecordField(PosName, M4Str, 100, 0);
RecordField(Status, M4Int, 0, 0);
RecordField(tDepart, M4Code, 20, 0);
RecordField(tDepartName, M4Str, 100, 0);
RecordField(tDepartNew, M4Code, 20, 0);
RecordField(tDepartNewName, M4Str, 100, 0);
RecordField(tStatCode, M4Code, 20, 0);
RecordField(tStatName, M4Str, 100, 0);
RecordField(Points,M4Val,0,0);
RecordField(WageRates,M4Val,0,0);
RecordField(Motiv,M4Int,0,0);
RecordField(AccCalc, M4Code, 20, 0);
RecordField(AccWage, M4Code, 20, 0);
RecordField(AccAward, M4Code, 20, 0);
RecordField(AccMotiv, M4Code, 20, 0);
RecordField(ObjStr, M4Str, 200, 0);
RecordField(SolFlag, M4Mark, 0, 0);
RecordField(OperShed, M4Str, 60, 0);
MainKeyBegin(UserCode, 0);
  KeySegment(UserCode);
  KeySegment(Status);
KeyBegin(Status);
  KeySegment(Status);
  KeySegment(UserCode);
KeyBegin(PosCode);
  KeySegment(PosCode);
  KeySegment(UserCode);
  KeySegment(Status);
KeyBegin(PosName);
  KeySegment(PosName);
  KeySegment(UserCode);
  KeySegment(Status);
KeyBegin(UserName);
  KeySegment(UserName);
  KeySegment(UserCode);
  KeySegment(Status);
KeyBegin(tDepart);
  KeySegment(tDepart);
  KeySegment(UserCode);
  KeySegment(Status);
KeyBegin(SolFlag);
  KeySegment(SolFlag);
  KeySegment(UserCode);
  KeySegment(Status);
EndRecord;

BlockBegin(tMarginSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tMarginVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tMarginSerBlock);
RecordField(WeekNr, M4Int, 0, 0)
RecordField(WeekPeriod, M4Str, 200, 0)
RecordField(Sign, M4Code, 20, 0);
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(CodeServ,M4Code,20,0);
ArrayField(NameServ,M4Str,200,0);
ArrayField(Margin,M4Val,0,0);
ArrayField(CurCode,M4Code,20,0);
EndArray;
MainKeyBegin(SerNr, 0);
  StoreInBaseKey;
  KeySegment(SerNr);
KeyBegin(WeekNr);
  KeySegment(WeekNr);
  KeySegment(SerNr);
KeyBegin(WeekPeriod);
  KeySegment(WeekPeriod);
  KeySegment(SerNr);
EndRecord;

BlockBegin(tMovFundsSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tMovFundsVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tMovFundsSerBlock);
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1);
ArrayField(tDate,M4Date,0,0);
ArrayField(ObjFund,M4Code,20,0);
ArrayField(NameFund,M4Str,200,0);
ArrayField(StartBal,M4Val,0,0);
ArrayField(EndBal,M4Val,0,0);
ArrayField(Com,M4Val,0,0);
ArrayField(Exp,M4Val,0,0);
EndArray;
MainKeyBegin(SerNr, 0);
  StoreInBaseKey;
  KeySegment(SerNr);
EndRecord;

BlockBegin(tCalcWageSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tCalcWageVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tCalcWageSerBlock);
RecordField(WeekNr, M4Int, 0, 0)
RecordField(WeekPeriod, M4Str, 200, 0)
RecordField(CodeServ,M4Code,20,0);
RecordField(NameServ,M4Str,200,0);
RecordField(Currency, M4Code, 20, 0);
RecordField(FOT,M4Val,0,0);
RecordField(PieceRates,M4Val,0,0);
RecordField(PieceRatesEL,M4Val,0,0);
RecordField(Wages,M4Val,0,0);
RecordField(Motiv,M4Val,0,0);
RecordField(BonusFunds,M4Val,0,0);
RecordField(Loan,M4Val,0,0);
RecordField(SignDirStat, M4Code, 20, 0);
RecordField(SignRespStat, M4Code, 20, 0);
RecordField(SignDirWork, M4Code, 20, 0);
RecordField(SignRespWork, M4Code, 20, 0);
RecordField(SignMain, M4Code, 20, 0);
RecordField(OKFlag, M4Mark, 0, 0);
RecordField(TRFlag, M4Mark, 0, 0);
RecordField(TRNumber, M4Long, 0, 0);
RecordField(TRIntYc, M4Int, 0, 0);
RecordField(HasTrans, M4Mark, 0, 0);
RecordField(TransDate, M4Date, 0, 0);
RecordField(Math,M4Matrix,0,0);
RecordField(CostOfOne,M4Val,0,0);
ArrayBegin(Math,-,1);
ArrayField(UserCode, M4Code, 20, 0);
ArrayField(UserName, M4Str, 100, 0);
ArrayField(DepNewCode, M4Code, 20, 0);
ArrayField(DepNewName, M4Str, 200, 0);
ArrayField(KoefWork,M4Val,0,0);
ArrayField(StatCode,M4Code,20,0);
ArrayField(StatName, M4Str, 200, 0);
ArrayField(Condition,M4Code,20,0);
ArrayField(KoefStat,M4Val,0,0);
ArrayField(Wage,M4Val,0,0);
ArrayField(Points,M4Val,0,0);
ArrayField(CorPoints,M4Val,0,0);
ArrayField(Award,M4Val,0,0);
ArrayField(Motivw,M4Val,0,0);
ArrayField(PieceRatesw,M4Val,0,0);
ArrayField(PieceRateswEL,M4Val,0,0);
ArrayField(Total,M4Val,0,0);
ArrayField(ObjStr, M4Str, 200, 0);
EndArray;
MainKeyBegin(SerNr, 0);
  StoreInBaseKey;
  KeySegment(SerNr);
KeyBegin(OKTRFlag);
  KeySegment(OKFlag);
  KeySegment(TRFlag);
  KeySegment(SerNr);
KeyBegin(WeekNr);
  KeySegment(WeekNr);
  KeySegment(SerNr);
KeyBegin(OKFlag);
  KeySegment(OKFlag);
  KeySegment(SerNr);
KeyBegin(TRFlag);
  KeySegment(TRFlag);
  KeySegment(SerNr);
KeyBegin(NameServ);
  KeySegment(NameServ);
  KeySegment(SerNr);
EndRecord;

BlockBegin(tLoanSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tLoanVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tLoanSerBlock);
RecordField(tCalcWageSerNr, M4Long, 0, 0);
RecordField(Code, M4Code, 20, 0)
RecordField(Name, M4Str, 200, 0)
RecordField(SumLoan,M4Val,0,0);
RecordField(LDate,M4Date,0,0);
RecordField(WeekNr, M4Int, 0, 0)
MainKeyBegin(SerNr, 0);
  StoreInBaseKey;
  KeySegment(SerNr);
KeyBegin(tCalcWageSerNr);
  KeySegment(tCalcWageSerNr);
  KeySegment(SerNr);
KeyBegin(Code);
  KeySegment(Code);
  KeySegment(SerNr);
KeyBegin(WeekNr);
  KeySegment(WeekNr);
  KeySegment(SerNr);
EndRecord;

//TGOR 02.07.14
RecordBegin(StockTakeVc,-,"");
RecordField(SerNr,M4Long,0,0);
SerialNoBlock(StockTakeSerBlock);
RecordField(Math,M4Matrix,0,0);
RecordField(TransDate,M4Date,0,0);
FieldIsTransDate(TransDate);
RecordField(OKFlag,M4Mark,0,0);
RecordField(Location,M4Code,10,LocationVc);
FieldIsLocation(Location);
RecordField(Comment,M4Str,60,0);
RecordField(Position,M4Code,20,0);
RecordField(SetStockValue,M4Mark,0,0);
RecordField(OverrideBackdated,M4Mark,0,0);
RecordField(AcceptanceStatus,M4Int,0,0);
RecordField(LogNewDate,M4Date,0,0);     //02.07.14 by TGOR
RecordField(LogNewUser,M4UStr,20,0);    //02.07.14 by TGOR
RecordField(LogNewTime,M4Time,0,0);     //02.07.14 by TGOR
RecordField(LogSaveDate,M4Date,0,0);    //02.07.14 by TGOR
RecordField(LogSaveUser,M4UStr,20,0);   //02.07.14 by TGOR
RecordField(LogSaveTime,M4Time,0,0);    //02.07.14 by TGOR
RecordField(LogOKDate,M4Date,0,0);      //02.07.14 by TGOR
RecordField(LogOKUser,M4UStr,20,0);     //02.07.14 by TGOR
RecordField(LogOKTime,M4Time,0,0);      //02.07.14 by TGOR
ArrayBegin(Math,-,1);
ArrayField(ArtCode,M4Code,20,INVc);
ArrayField(Spec,M4Str,100,0);
ArrayField(SerialNr,M4Str,30,0);
ArrayField(Qty,M4UVal,0,0);
ArrayField(Location,M4Code,10,LocationVc);
ArrayField(VARList,M4UStr,30,0);
ArrayField(Coefficient,M45Val,0,0);
ArrayField(BasePrice,M423Val,0,0);
ArrayField(UnitXval,M4UVal,0,0);
ArrayField(UnitYval,M4UVal,0,0);
ArrayField(UnitZval,M4UVal,0,0);
ArrayField(Position,M4Code,20,0);
ArrayField(Objects,M4UStr,60,ObjVc);
ArrayField(CostAcc,M4Code,10,AccVc);
ArrayField(FIFO,M45Val,0,0);
ArrayField(FIFORowVal,M45Val,0,0);
ArrayField(oldFIFO,M45Val,0,0);
ArrayField(oldFIFORowVal,M45Val,0,0);
ArrayField(InStock,M4UVal,0,0);
EndArray;
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
SynchronizationIndex;
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(SerNr);
KeyBegin(TransDate);
KeySegment(TransDate);
KeySegment(SerNr);
EndRecord;

//Статистика Продавец - Товар
RecordBegin(ISellerToItemStatVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
RecordField(DT, M4Date, 0, 0);
RecordField(Seller, M4Code, 20, 0);
RecordField(Item, M4Code, 20, 0);
RecordField(Qty, M4Val, 0, 0);
RecordField(Sum, M4Val, 0, 0);
MainKeyBegin(SerNr, 0);
  KeySegment(SerNr);
  SynchronizationIndex;
KeyBegin(Seller);
  KeySegment(Seller);
  KeySegment(Item);
  KeySegment(DT);
  KeySegment(SerNr);
KeyBegin(Item);
  KeySegment(Item);
  KeySegment(Seller);
  KeySegment(DT);
  KeySegment(SerNr);
KeyBegin(DateSeller);
  KeySegment(DT);
  KeySegment(Seller);
  KeySegment(SerNr);
KeyBegin(DateItem);
  KeySegment(DT);
  KeySegment(Item);
  KeySegment(SerNr);
EndRecord;

//Статистика Группа продажи - Товар
RecordBegin(IGroupToItemStatVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
RecordField(DT, M4Date, 0, 0);
RecordField(SalesGroup, M4Code, 20, 0);
RecordField(Item, M4Code, 20, 0);
RecordField(Qty, M4Val, 0, 0);
RecordField(Sum, M4Val, 0, 0);
MainKeyBegin(SerNr, 0);
  KeySegment(SerNr);
  SynchronizationIndex;
KeyBegin(SalesGroup);
  KeySegment(SalesGroup);
  KeySegment(Item);
  KeySegment(DT);
  KeySegment(SerNr);
KeyBegin(Item);
  KeySegment(Item);
  KeySegment(SalesGroup);
  KeySegment(DT);
  KeySegment(SerNr);
KeyBegin(DateGroup);
  KeySegment(DT);
  KeySegment(SalesGroup);
  KeySegment(SerNr);
KeyBegin(DateItem);
  KeySegment(DT);
  KeySegment(Item);
  KeySegment(SerNr);
EndRecord;


//Статистика Клиент - Товар
RecordBegin(ICustToItemStatVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
RecordField(DT, M4Date, 0, 0);
RecordField(CustCode, M4Code, 20, 0);
RecordField(Item, M4Code, 20, 0);
RecordField(Qty, M4Val, 0, 0);
RecordField(Sum, M4Val, 0, 0);
MainKeyBegin(SerNr, 0);
  KeySegment(SerNr);
  SynchronizationIndex;
KeyBegin(CustCode);
  KeySegment(CustCode);
  KeySegment(Item);
  KeySegment(DT);
  KeySegment(SerNr);
KeyBegin(Item);
  KeySegment(Item);
  KeySegment(CustCode);
  KeySegment(DT);
  KeySegment(SerNr);
KeyBegin(DateCust);
  KeySegment(DT);
  KeySegment(CustCode);
  KeySegment(SerNr);
KeyBegin(DateItem);
  KeySegment(DT);
  KeySegment(Item);
  KeySegment(SerNr);
EndRecord;


RecordBegin(tEmpWSVc, -, "");
RecordField(WorkWeek, M4Int, 0, 0);
RecordField(WorkYear, M4Long, 0, 0);
RecordField(Superior, M4Code, 20, 0);
FieldIsUser(Superior);
RecordField(Department, M4Code, 20, 0);
RecordField(DirFlag, M4Mark, 0, 0);
RecordField(SalesGroup, M4Code, 20, 0);
FieldIsGroup(SalesGroup);
RecordField(OKFlag, M4Mark, 0, 0);
RecordField(TransDate, M4Date, 0, 0);
RecordField(Comment, M4Str, 100, 0);
RecordField(SuperiorFlag, M4Mark, 0, 0);
RecordField(EmpName, M4Str, 100, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(stp, M4Int, 0, 0);
ArrayField(ovst, M4Int, 0, 0);
ArrayField(EmpCode, M4Code, 20, 0);
ArrayField(WDays, M4Int, 0, 0); // Рабочих дней в неделе
ArrayField(WHours, M4Int, 0, 0); // Рабочих часов в неделе
ArrayField(WMinutes, M4Val, 0, 0); // Рабочих минут в неделе
ArrayField(cDate, M4Date, 0, 0);
ArrayField(cTime, M4Time, 0, 0);
ArrayField(aTime, M4Time, 0, 0);
ArrayField(cHours, M4Int, 0, 0);
ArrayField(cMinutes, M4Int, 0, 0);
ArrayField(aHours, M4Int, 0, 0);
ArrayField(aMinutes, M4Int, 0, 0);
ArrayField(aComment, M4Str, 60, 0);
ArrayField(TimeType, M4UStr, 10, 0);
ArrayField(FDays, M4Int, 0, 0); // факт
ArrayField(FHours, M4Int, 0, 0);
ArrayField(FMinutes, M4Int, 0, 0);
ArrayField(Percent, M4Val, 0, 0); // % выполнения
EndArray;
MainKeyBegin(Code, 1);
AppendFieldToKeyName(Superior);
AppendFieldToKeyName(SalesGroup);
KeySegment(Department);
KeySegment(WorkWeek);
KeySegment(WorkYear);
StoreInBaseKey;
SubsetKeyBegin2(SupDep);
AppendFieldToKeyName(Superior);
AppendFieldToKeyName(Department);
KeySegment(DirFlag);
KeySegment(SuperiorFlag);
KeySegment(Department);
KeySegment(WorkWeek);
KeySegment(WorkYear);
KeyBegin(Superior);
KeySegment(Superior);
KeySegment(Department);
KeySegment(WorkWeek);
KeySegment(WorkYear);
KeyBegin(EmpName);
KeySegment(EmpName);
KeySegment(Department);
KeySegment(WorkWeek);
KeySegment(WorkYear);
KeyBegin(SuperiorFlag);
KeySegment(SuperiorFlag);
KeySegment(Department);
KeySegment(WorkWeek);
KeySegment(WorkYear);
KeyBegin(OKFlag);
KeySegment(OKFlag);
KeySegment(Department);
KeySegment(WorkWeek);
KeySegment(WorkYear);
KeyBegin(DirFlag);
KeySegment(DirFlag);
KeySegment(Department);
KeySegment(WorkWeek);
KeySegment(WorkYear);
KeyBegin(WorkWeek);
KeySegment(WorkWeek);
KeySegment(Department);
KeySegment(WorkYear);

EndRecord;

RecordBegin(tOperSWDaysVc, -, "");
RecordField(CYear, M4Int, 0, 0);
RecordField(CWeek, M4Int, 0, 0);
RecordField(CDay, M4Int, 0, 0);
RecordField(Comment, M4Str, 60, 0);
MainKeyBegin(YearWeek, 0);
KeySegment(CYear);
KeySegment(CWeek);
StoreInBaseKey;
EndRecord;

//Планирование маржинальной прибыли
RecordBegin(IPlanMarginGPVc, -, "");
RecordField(bd, M4Date, 0, 0);
RecordField(ed, M4Date, 0, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(SalesGroup, M4Code, 20, 0);
ArrayField(CUClass, M4Code, 20, 0);
ArrayField(INClass, M4Code, 20, 0);
ArrayField(MarginGP, M4Val, 0, 0); // Рабочих минут в неделе
EndArray;
MainKeyBegin(bd, 0);
  KeySegment(bd);
  KeySegment(ed);
  StoreInBaseKey;
KeyBegin(ed);
  KeySegment(ed);
  KeySegment(bd);
EndRecord;

// 5.11.14 TGOR ресурс "Расходы ГК"

RecordBegin(tWeekDaysVc, -, "");
RecordField(CYear, M4Int, 0, 0);
RecordField(CWeekY, M4Int, 0, 0);
RecordField(Period, M4Str, 60, 0);
RecordField(CWeekM, M4Int, 0, 0);
RecordField(CDay, M4Int, 0, 0);
RecordField(CMonth, M4Int, 0, 0);
MainKeyBegin(YearWeek, 0);
  KeySegment(CYear);
  KeySegment(CWeekY);
KeyBegin(CWeekY);
  KeySegment(CWeekY);
  KeySegment(CYear);


StoreInBaseKey;
EndRecord;


BlockBegin(tCostsSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tCostsVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tCostsSerBlock);
RecordField(AccCode, M4Code,20,AccVc);
RecordField(AccName, M4Str, 200, 0);
RecordField(Curncy, M4Code, 20, 0);
RecordField(Year, M4Long, 0, 0);
RecordField(Sing1, M4Code,20, 0);
RecordField(Sing2, M4Code, 20, 0);
RecordField(Math, M4Matrix, 0, 0);
RecordField(Flag1, M4Mark, 0, 0);
RecordField(Flag2, M4Mark, 0, 0);
RecordField(SVal1, M4Val, 0 ,0);
RecordField(SVal2, M4Val, 0 ,0);
RecordField(SVal3, M4Val, 0 ,0);
RecordField(SVal4, M4Val, 0 ,0);
RecordField(SVal5, M4Val, 0 ,0);
RecordField(SVal6, M4Val, 0 ,0);
RecordField(SVal7, M4Val, 0 ,0);
RecordField(SVal8, M4Val, 0 ,0);
RecordField(SVal9, M4Val, 0 ,0);
RecordField(SVal10, M4Val, 0 ,0);
RecordField(SVal11, M4Val, 0 ,0);
RecordField(SVal12, M4Val, 0 ,0);
RecordField(SumAll, M4Val, 0 ,0);
ArrayBegin(Math, -, 1);
ArrayField(ObjPODR,M4UStr,60,0);
ArrayField(ObjReq,M4UStr,60,0);
ArrayField(ObjOther,M4UStr,60,0);
ArrayField(WeekNr, M4Int, 0 ,0);
ArrayField(Val1, M4Val, 0 ,0);
ArrayField(Val2, M4Val, 0 ,0);
ArrayField(Val3, M4Val, 0 ,0);
ArrayField(Val4, M4Val, 0 ,0);
ArrayField(Val5, M4Val, 0 ,0);
ArrayField(Val6, M4Val, 0 ,0);
ArrayField(Val7, M4Val, 0 ,0);
ArrayField(Val8, M4Val, 0 ,0);
ArrayField(Val9, M4Val, 0 ,0);
ArrayField(Val10, M4Val, 0 ,0);
ArrayField(Val11, M4Val, 0 ,0);
ArrayField(Val12, M4Val, 0 ,0);
ArrayField(Comment,M4Str,200,0);
ArrayField(SumM, M4Val, 0 ,0);
EndArray;
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(AccCode);
  KeySegment(AccCode);
  KeySegment(SerNr);
KeyBegin(AccName);
  KeySegment(AccName);
  KeySegment(SerNr);
KeyBegin(Curncy);
  KeySegment(Curncy);
  KeySegment(SerNr);
KeyBegin(Year);
  KeySegment(Year);
  KeySegment(SerNr);
Endrecord;


BlockBegin(tCUHistSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tCUHistVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tCUHistSerBlock);
RecordField(UserCode, M4Code,20,0);
RecordField(CUCode, M4Code,20,0);
RecordField(ChDate, M4Date, 0, 0);
RecordField(ChField, M4Str, 100, 0);
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(UserCode);
  KeySegment(UserCode);
  KeySegment(SerNr);
KeyBegin(CUCode);
  KeySegment(CUCode);
  KeySegment(SerNr);
KeyBegin(ChDate);
  KeySegment(ChDate);
  KeySegment(SerNr);
KeyBegin(ChField);
  KeySegment(ChField);
  KeySegment(SerNr);
Endrecord;

BlockBegin(tBaseRate2ORSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tBaseRate2ORVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tBaseRate2ORSerBlock);
RecordField(Group, M4Code,5,0);
RecordField(SalesGroup, M4Code,20,0);
RecordField(BaseRate2, M4Val, 0, 0);
RecordField(PriceList, M4Code,20,0);
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(Group);
  KeySegment(Group);
  KeySegment(SerNr);
KeyBegin(SalesGroup);
  KeySegment(SalesGroup);
  KeySegment(SerNr);
KeyBegin(BaseRate2);
  KeySegment(BaseRate2);
  KeySegment(SerNr);
Endrecord;


BlockBegin(tComplWeeksSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tComplWeeksVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tCostsSerBlock);
RecordField(AccCode, M4Code,20,AccVc);
RecordField(AccName, M4Str, 200, 0);
RecordField(PODR, M4Str, 200, 0);
RecordField(Year, M4Long, 0, 0);
RecordField(Sing, M4Code,20, 0);
RecordField(Math, M4Matrix, 0, 0);
ArrayBegin(Math, -, 1);
ArrayField(MonthNrD, M4Int, 0 ,0);
ArrayField(WeeksNrD,M4Str,200,0);
ArrayField(MonthNrR, M4Int, 0,0);
ArrayField(WeeksNrR,M4Int,0,0);
EndArray;
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(AccCode);
  KeySegment(AccCode);
  KeySegment(SerNr);
KeyBegin(AccName);
  KeySegment(AccName);
  KeySegment(SerNr);
KeyBegin(PODR);
  KeySegment(PODR);
  KeySegment(SerNr);
KeyBegin(Year);
  KeySegment(Year);
  KeySegment(SerNr);
Endrecord;

// Настройка контроля сумм в платежах клиентов
RecordBegin(tIPCtrlSetVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
RecordField(Persent, M4Val, 0, 0);
RecordField(SupSing, M4Str,250,0);
RecordField(SubSupSing, M4Str,250,0);
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(Persent);
  KeySegment(Persent);
  KeySegment(SerNr);
Endrecord;

// история контроля сумм в платежах клиентов
BlockBegin(tIPCtrlHistSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tIPCtrlHistVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tIPCtrlHistSerBlock);
RecordField(IPSerNr, M4Long, 0, 0);
RecordField(IPDate, M4Date, 0, 0);
RecordField(IPCust, M4Code,20,0);
RecordField(EmpDir, M4Code,20,0);
RecordField(EmpCode, M4Code,20,0);
RecordField(IVSerNr, M4Long, 0, 0);
RecordField(IVSum, M4Val, 0, 0);
RecordField(IPSum, M4Val, 0, 0);
RecordField(Persent, M4Val,0,0);
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(IPIVSerNr);
  KeySegment(IPSerNr);
  KeySegment(IVSerNr);
  KeySegment(SerNr)
KeyBegin(IPSerNr);
  KeySegment(IPSerNr);
  KeySegment(SerNr);
KeyBegin(IPDate);
  KeySegment(IPDate);
  KeySegment(SerNr);
KeyBegin(IPCust);
  KeySegment(IPCust);
  KeySegment(SerNr);
KeyBegin(EmpDir);
  KeySegment(EmpDir);
  KeySegment(SerNr);
KeyBegin(EmpCode);
  KeySegment(EmpCode);
  KeySegment(SerNr);

Endrecord;


RecordBegin(tImportINVc,-,"");
RecordField(Code,M4Code,20,0);
RecordField(Math,M4Matrix,0,0);
ArrayBegin(Math,-,1)
ArrayField(Field1,M4Str,20,0);
ArrayField(Field2,M4Str,20,0);
ArrayField(Field3,M4Str,200,0);
ArrayField(Field4,M4Str,200,0);
ArrayField(Field5,M4Str,20,0);
ArrayField(Field6,M4Str,20,0);
ArrayField(Field7,M4Str,200,0);
ArrayField(Field8,M4Str,200,0);
ArrayField(Field9,M4Str,20,0);
// ArrayField(Field10,M4Str,20,0);
ArrayField(Field11,M4Str,20,0);
ArrayField(Field12,M4Str,20,0);
ArrayField(Field13,M4Str,20,0);
EndArray;
MainKeyBegin(Code,0);
KeySegment(Code);
Endrecord;


BlockBegin(tChPrInORSerBlock,-,"");
XXSERBLOCK;

RecordBegin(tChPrInORVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
SerialNoBlock(tChPrInORSerBlock);
RecordField(INCode, M4Code,20,0);
RecordField(Obj, M4Code,20,0);
RecordField(PriceList, M4Code,20,0);
MainKeyBegin(SerNr,0);
KeySegment(SerNr);
KeyBegin(INCode);
  KeySegment(INCode);
  KeySegment(SerNr);
KeyBegin(Obj);
  KeySegment(Obj);
  KeySegment(SerNr);
KeyBegin(PriceList);
  KeySegment(PriceList);
  KeySegment(SerNr);
KeyBegin(INObj);
  KeySegment(INCode);
  KeySegment(Obj);
  KeySegment(SerNr);
Endrecord;


//Статистика Клиент - Месяц
RecordBegin(ICustToMonthStatVc, -, "");
RecordField(SerNr, M4Long, 0, 0);
RecordField(DT, M4Date, 0, 0);
RecordField(CustCode, M4Code, 20, 0);
RecordField(SalesGroup, M4Code, 20, 0);
RecordField(Seller, M4Code, 20, 0);
RecordField(Qty, M4Val, 0, 0);
RecordField(USD, M4Val, 0, 0);
RecordField(UAH, M4Val, 0, 0);
MainKeyBegin(SerNr, 0);
  KeySegment(SerNr);
SubsetKeyBegin2(CustCode);
  StoreInBaseKey;
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(Seller);
  KeySegment(CustCode);
  KeySegment(DT);
  KeySegment(SerNr);
KeyBegin(DateCust);
  StoreInBaseKey;
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(Seller);
  KeySegment(DT);
  KeySegment(CustCode);
  KeySegment(SerNr);
EndRecord;

Return;
end;